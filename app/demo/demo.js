// Generated by dart2js (fast startup emitter, strong, CSP), the Dart to JavaScript compiler version: 2.3.0.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
//
// defaultPackagesBase:
//    Override the location where `package:` uris are resolved from. By default
//    they are resolved under "packages/" from the current window location.
{
}
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function setFunctionNamesIfNecessary(holders) {
    function t() {
    }
    ;
    if (typeof t.name == "string")
      return;
    for (var i = 0; i < holders.length; i++) {
      var holder = holders[i];
      var keys = Object.keys(holder);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var f = holder[key];
        if (typeof f == 'function')
          f.name = key;
      }
    }
  }
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixin(cls, mixin) {
    copyProperties(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        H.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);
      return new cache(this, funcs[0], receiver, name);
    } : function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);
      return new cache(this, funcs[0], null, name);
    };
  }
  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
    var cache = null;
    return isStatic ? function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
      return cache;
    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
  }
  var typesOffset = 0;
  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var funs = [];
    for (var i = 0; i < funsOrNames.length; i++) {
      var fun = funsOrNames[i];
      if (typeof fun == 'string')
        fun = container[fun];
      fun.$callName = callNames[i];
      funs.push(fun);
    }
    var fun = funs[0];
    fun.$requiredArgCount = requiredParameterCount;
    fun.$defaultValues = optionalParameterDefaultValues;
    var reflectionInfo = funType;
    if (typeof reflectionInfo == "number")
      reflectionInfo = reflectionInfo + typesOffset;
    var name = funsOrNames[0];
    fun.$stubName = name;
    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);
    container[getterName] = getterFunction;
    if (isStatic)
      fun.$tearOff = getterFunction;
  }
  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  function getGlobalFromName(name) {
    for (var i = 0; i < holders.length; i++) {
      if (holders[i] == C)
        continue;
      if (holders[i][name])
        return holders[i][name];
    }
  }
  var C = {},
  H = {ChromeObject0: function ChromeObject0() {
    }, Rule: function Rule() {
    }, Event0: function Event0() {
    }, API_ChromeApp: function API_ChromeApp() {
    }, API_Chrome: function API_Chrome() {
    }, AppWindowBounds: function AppWindowBounds() {
    }, AppWindowCreateWindowOptions: function AppWindowCreateWindowOptions() {
    }, AppWindowAppWindow: function AppWindowAppWindow() {
    }, Event_app_window_onBoundsChanged: function Event_app_window_onBoundsChanged() {
    }, Event_app_window_onClosed: function Event_app_window_onClosed() {
    }, Event_app_window_onFullscreened: function Event_app_window_onFullscreened() {
    }, Event_app_window_onMaximized: function Event_app_window_onMaximized() {
    }, Event_app_window_onMinimized: function Event_app_window_onMinimized() {
    }, Event_app_window_onRestored: function Event_app_window_onRestored() {
    }, API_app_window: function API_app_window() {
    }, AppRuntimeLaunchItem: function AppRuntimeLaunchItem() {
    }, AppRuntimeLaunchData: function AppRuntimeLaunchData() {
    }, Event_app_runtime_onLaunched: function Event_app_runtime_onLaunched() {
    }, Event_app_runtime_onRestarted: function Event_app_runtime_onRestarted() {
    }, API_app_runtime: function API_app_runtime() {
    }, FilesystemAcceptOption: function FilesystemAcceptOption() {
    }, FilesystemChooseEntryOptions: function FilesystemChooseEntryOptions() {
    }, API_file_system: function API_file_system() {
    }, JS_CONST: function JS_CONST(t0) {
      this.$ti = t0;
    }, _CryptoUtils: function _CryptoUtils() {
    }, _HashBase: function _HashBase() {
    }, _MD5: function _MD5() {
    }, _SHA1: function _SHA1() {
    }, HttpServer: function HttpServer() {
    }, HttpConnectionsInfo: function HttpConnectionsInfo() {
    }, HttpHeaders: function HttpHeaders() {
    }, HeaderValue: function HeaderValue() {
    }, HttpSession: function HttpSession() {
    }, ContentType: function ContentType() {
    }, Cookie: function Cookie() {
    }, HttpRequest: function HttpRequest() {
    }, HttpResponse: function HttpResponse() {
    }, HttpClient: function HttpClient() {
    }, HttpClientRequest: function HttpClientRequest() {
    }, HttpClientResponse: function HttpClientResponse() {
    }, HttpClientCredentials: function HttpClientCredentials() {
    }, HttpClientBasicCredentials: function HttpClientBasicCredentials() {
    }, HttpClientDigestCredentials: function HttpClientDigestCredentials() {
    }, HttpConnectionInfo: function HttpConnectionInfo() {
    }, RedirectInfo: function RedirectInfo() {
    }, DetachedSocket: function DetachedSocket() {
    }, HttpException: function HttpException() {
    }, RedirectException: function RedirectException() {
    }, HttpDate: function HttpDate() {
    }, _HttpHeaders: function _HttpHeaders() {
    }, _HeaderValue: function _HeaderValue() {
    }, _ContentType: function _ContentType() {
    }, _Cookie: function _Cookie() {
    }, _ServiceObject: function _ServiceObject() {
    }, _CopyingBytesBuilder: function _CopyingBytesBuilder() {
    }, _HttpIncoming: function _HttpIncoming() {
    }, _HttpInboundMessage: function _HttpInboundMessage() {
    }, _HttpRequest: function _HttpRequest() {
    }, _HttpClientResponse: function _HttpClientResponse() {
    }, _StreamSinkImpl: function _StreamSinkImpl() {
    }, _IOSinkImpl: function _IOSinkImpl() {
    }, _HttpOutboundMessage: function _HttpOutboundMessage() {
    }, _HttpResponse: function _HttpResponse() {
    }, _HttpClientRequest: function _HttpClientRequest() {
    }, _HttpGZipSink: function _HttpGZipSink() {
    }, _HttpOutgoing: function _HttpOutgoing() {
    }, _HttpClientConnection: function _HttpClientConnection() {
    }, _ConnectionInfo: function _ConnectionInfo() {
    }, _ConnectionTarget: function _ConnectionTarget() {
    }, _HttpClient: function _HttpClient() {
    }, _HttpConnection: function _HttpConnection() {
    }, _HttpServer: function _HttpServer() {
    }, _ProxyConfiguration: function _ProxyConfiguration() {
    }, _Proxy: function _Proxy() {
    }, _HttpConnectionInfo: function _HttpConnectionInfo() {
    }, _DetachedSocket: function _DetachedSocket() {
    }, _AuthenticationScheme: function _AuthenticationScheme() {
    }, _Credentials: function _Credentials() {
    }, _SiteCredentials: function _SiteCredentials() {
    }, _ProxyCredentials: function _ProxyCredentials() {
    }, _HttpClientCredentials: function _HttpClientCredentials() {
    }, _HttpClientBasicCredentials: function _HttpClientBasicCredentials() {
    }, _HttpClientDigestCredentials: function _HttpClientDigestCredentials() {
    }, _RedirectInfo: function _RedirectInfo() {
    }, _Const: function _Const() {
    }, _CharCode: function _CharCode() {
    }, _State: function _State() {
    }, _HttpVersion: function _HttpVersion() {
    }, _MessageType: function _MessageType() {
    }, _HttpDetachedStreamSubscription: function _HttpDetachedStreamSubscription() {
    }, _HttpDetachedIncoming: function _HttpDetachedIncoming() {
    }, _HttpParser: function _HttpParser() {
    }, _HttpSession: function _HttpSession() {
    }, _HttpSessionManager: function _HttpSessionManager() {
    }, HttpOverrides: function HttpOverrides() {
    }, _HttpOverridesScope: function _HttpOverridesScope() {
    }, WebSocketStatus: function WebSocketStatus() {
    }, CompressionOptions: function CompressionOptions() {
    }, WebSocketTransformer: function WebSocketTransformer() {
    }, WebSocket: function WebSocket() {
    }, WebSocketException: function WebSocketException() {
    }, _WebSocketMessageType: function _WebSocketMessageType() {
    }, _WebSocketOpcode: function _WebSocketOpcode() {
    }, _EncodedString: function _EncodedString() {
    }, _CompressionMaxWindowBits: function _CompressionMaxWindowBits() {
    }, _WebSocketProtocolTransformer: function _WebSocketProtocolTransformer() {
    }, _WebSocketPing: function _WebSocketPing() {
    }, _WebSocketPong: function _WebSocketPong() {
    }, _WebSocketTransformerImpl: function _WebSocketTransformerImpl() {
    }, _WebSocketPerMessageDeflate: function _WebSocketPerMessageDeflate() {
    }, _WebSocketOutgoingTransformer: function _WebSocketOutgoingTransformer() {
    }, _WebSocketConsumer: function _WebSocketConsumer() {
    }, _WebSocketImpl: function _WebSocketImpl() {
    }, __HttpConnection_LinkedListEntry__ServiceObject: function __HttpConnection_LinkedListEntry__ServiceObject() {
    }, __HttpServer_Stream__ServiceObject: function __HttpServer_Stream__ServiceObject() {
    }, __WebSocketImpl_Stream__ServiceObject: function __WebSocketImpl_Stream__ServiceObject() {
    },
    printToConsole: function(line) {
      H.printString(H.S(H.stringTypeCheck(line)));
    },
    makeListFixedLength: function(growableList, $T) {
      var t1 = [$T];
      return H.assertSubtype(J.JSArray_markFixedList(H.assertSubtype(growableList, "$isList", t1, "$asList")), "$isList", t1, "$asList");
    },
    SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
      var t1 = new H.SubListIterable(_iterable, _start, _endOrLength, [$E]);
      t1.SubListIterable$3(_iterable, _start, _endOrLength, $E);
      return t1;
    },
    ListIterator$: function(iterable, $E) {
      return new H.ListIterator(iterable, J.get$length$asx(iterable), [$E]);
    },
    MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
      H.assertSubtype(iterable, "$isIterable", [$S], "$asIterable");
      H.functionTypeCheck($function, {func: 1, ret: $T, args: [$S]});
      if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
        return H.EfficientLengthMappedIterable$(iterable, $function, $S, $T);
      return H.MappedIterable$_(iterable, $function, $S, $T);
    },
    MappedIterable$_: function(_iterable, _f, $S, $T) {
      return new H.MappedIterable(_iterable, _f, [$S, $T]);
    },
    EfficientLengthMappedIterable$: function(iterable, $function, $S, $T) {
      return new H.EfficientLengthMappedIterable(iterable, $function, [$S, $T]);
    },
    MappedIterator$: function(_iterator, _f, $S, $T) {
      return new H.MappedIterator(_iterator, _f, [$S, $T]);
    },
    MappedListIterable$: function(_source, _f, $S, $T) {
      return new H.MappedListIterable(_source, _f, [$S, $T]);
    },
    WhereIterable$: function(_iterable, _f, $E) {
      return new H.WhereIterable(_iterable, _f, [$E]);
    },
    WhereIterator$: function(_iterator, _f, $E) {
      return new H.WhereIterator(_iterator, _f, [$E]);
    },
    TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
      H.intTypeCheck(takeCount);
      P.ArgumentError_checkNotNull(takeCount, _s9_);
      P.RangeError_checkNotNegative(takeCount, _s9_);
      if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
        return H.EfficientLengthTakeIterable$(iterable, takeCount, $E);
      return H.TakeIterable$_(iterable, takeCount, $E);
    },
    TakeIterable$_: function(_iterable, _takeCount, $E) {
      return new H.TakeIterable(_iterable, _takeCount, [$E]);
    },
    EfficientLengthTakeIterable$: function(iterable, takeCount, $E) {
      return new H.EfficientLengthTakeIterable(iterable, takeCount, [$E]);
    },
    TakeIterator$: function(_iterator, _remaining, $E) {
      var t1 = new H.TakeIterator(_iterator, _remaining, [$E]);
      t1.TakeIterator$2(_iterator, _remaining, $E);
      return t1;
    },
    SkipIterable_SkipIterable: function(iterable, count, $E) {
      H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
      H.intTypeCheck(count);
      if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
        return H.EfficientLengthSkipIterable_EfficientLengthSkipIterable(iterable, count, $E);
      return H.SkipIterable$_(iterable, H._checkCount(count), $E);
    },
    SkipIterable$_: function(_iterable, _skipCount, $E) {
      return new H.SkipIterable(_iterable, _skipCount, [$E]);
    },
    EfficientLengthSkipIterable_EfficientLengthSkipIterable: function(iterable, count, $E) {
      return H.EfficientLengthSkipIterable$_(H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable"), H._checkCount(H.intTypeCheck(count)), $E);
    },
    EfficientLengthSkipIterable$_: function(iterable, count, $E) {
      return new H.EfficientLengthSkipIterable(iterable, count, [$E]);
    },
    _checkCount: function(count) {
      H.intTypeCheck(count);
      P.ArgumentError_checkNotNull(count, "count");
      P.RangeError_checkNotNegative(count, "count");
      return count;
    },
    SkipIterator$: function(_iterator, _skipCount, $E) {
      var t1 = new H.SkipIterator(_iterator, _skipCount, [$E]);
      t1.SkipIterator$2(_iterator, _skipCount, $E);
      return t1;
    },
    EmptyIterable$: function($E) {
      return new H.EmptyIterable([$E]);
    },
    IterableElementError_noElement: function() {
      return P.StateError$("No element");
    },
    IterableElementError_tooMany: function() {
      return P.StateError$("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return P.StateError$("Too few elements");
    },
    Symbol$unvalidated: function(_name) {
      return new H.Symbol(_name, []);
    },
    Symbol_getName: function(symbol) {
      return H.interceptedTypeCheck(symbol, "$isSymbol")._name;
    },
    CastStream: function CastStream() {
    },
    CastStreamSubscription: function CastStreamSubscription() {
    },
    CastStreamTransformer: function CastStreamTransformer() {
    },
    CastConverter: function CastConverter() {
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator() {
    },
    CastIterable: function CastIterable() {
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable() {
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList() {
    },
    CastSet: function CastSet() {
    },
    CastMap: function CastMap() {
    },
    CastQueue: function CastQueue() {
    },
    CodeUnits: function CodeUnits() {
    },
    ExternalName: function ExternalName() {
    },
    Since: function Since() {
    },
    HttpStatus: function HttpStatus() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _._iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _.__internal$_length = t1;
      _._index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable() {
    },
    ExpandIterator: function ExpandIterator() {
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this._iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this._iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    TakeWhileIterable: function TakeWhileIterable() {
    },
    TakeWhileIterator: function TakeWhileIterator() {
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this._iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this._iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipWhileIterable: function SkipWhileIterable() {
    },
    SkipWhileIterator: function SkipWhileIterator() {
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    FollowedByIterable: function FollowedByIterable() {
    },
    EfficientLengthFollowedByIterable: function EfficientLengthFollowedByIterable() {
    },
    FollowedByIterator: function FollowedByIterator() {
    },
    WhereTypeIterable: function WhereTypeIterable() {
    },
    WhereTypeIterator: function WhereTypeIterator() {
    },
    IterableElementError: function IterableElementError() {
    },
    LinkedList: function LinkedList() {
    },
    LinkedListEntry0: function LinkedListEntry0() {
    },
    _LinkedListIterator: function _LinkedListIterator() {
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    FixedLengthListBase: function FixedLengthListBase() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    _ListIndicesIterable: function _ListIndicesIterable() {
    },
    ListMapView: function ListMapView() {
    },
    ReversedListIterable: function ReversedListIterable() {
    },
    UnmodifiableListError: function UnmodifiableListError() {
    },
    NonGrowableListError: function NonGrowableListError() {
    },
    Sort: function Sort() {
    },
    Symbol: function Symbol(t0, t1) {
      this._name = t0;
      this.$ti = t1;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    JsGetName: function JsGetName() {
    },
    JsBuiltin: function JsBuiltin() {
    },
    ConstantMapView$: function(base, $K, $V) {
      return new H.ConstantMapView(base, [$K, $V]);
    },
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    _ConstantMapKeyIterable$: function(_map, $K) {
      return new H._ConstantMapKeyIterable(_map, [$K]);
    },
    isCheckPropertyToJsConstructorName: function(isCheckProperty) {
      return H.stringTypeCheck(isCheckProperty).substring(3);
    },
    isDartFunctionType: function(type) {
      return 'func' in type;
    },
    isDartFutureOrType: function(type) {
      return 'futureOr' in type;
    },
    isDartVoidTypeRti: function(type) {
      return type === -1;
    },
    rawRtiToJsConstructorName: function(rti) {
      return rti.name;
    },
    unminifyOrTag: function(rawClassName) {
      var preserved;
      H.stringTypeCheck(rawClassName);
      preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (typeof preserved === "string")
        return preserved;
      return rawClassName;
    },
    getRawRuntimeType: function(o) {
      return o.constructor;
    },
    builtinIsSubtype: function(type, other) {
      return '$is' + H.stringTypeCheck(other) in type.prototype;
    },
    isDartFunctionTypeRti: function(type) {
      return type.name === "Function";
    },
    isNullType: function(type) {
      return type.name === "Null";
    },
    isDartDynamicTypeRti: function(type) {
      return type == null;
    },
    isDartJsInteropTypeArgumentRti: function(type) {
      return type === -2;
    },
    isDartObjectTypeRti: function(type) {
      return type.name === "Object";
    },
    isNullTypeRti: function(type) {
      return type.name === "Null";
    },
    getType: function(index) {
      return init.types[H.intTypeCheck(index)];
    },
    requiresPreamble: function() {
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = J.dispatchRecordIndexability(record);
        if (result != null)
          return H.boolTypeCheck(result);
      }
      return !!J.getInterceptor$(object).$isJavaScriptIndexingBehavior;
    },
    S: function(value) {
      var res;
      if (typeof value === "string")
        return value;
      if (typeof value === "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res !== "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    createUnmangledInvocationMirror: function(symbol, internalName, kind, $arguments, argumentNames, types) {
      return H.JSInvocationMirror$(H.interceptedTypeCheck(symbol, "$isSymbol0"), H.stringTypeCheck(internalName), H.intTypeCheck(kind), H.listTypeCheck($arguments), H.listTypeCheck(argumentNames), H.intTypeCheck(types));
    },
    JSInvocationMirror$: function(_memberName, _internalName, _kind, _arguments, _namedArgumentNames, _typeArgumentCount) {
      return new H.JSInvocationMirror(_memberName, _kind, _arguments, _namedArgumentNames, _typeArgumentCount, []);
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_formatType: function(className, typeArguments) {
      H.stringTypeCheck(className);
      H.listTypeCheck(typeArguments);
      return H.unmangleAllIdentifiersIfPreservedAnyways(H.S(className) + H.S(H.joinArguments(typeArguments, 0)));
    },
    Primitives_objectTypeName: function(object) {
      var className = H.Primitives__objectClassName(object),
        $arguments = H.joinArguments(H.getRuntimeTypeInfo(object), 0);
      return H.S(className) + H.S($arguments);
    },
    Primitives__objectClassName: function(object) {
      var interceptorConstructorName, $name, t1, dispatchName, objectConstructor, match, decompiledName,
        interceptor = J.getInterceptor$(object),
        interceptorConstructor = interceptor.constructor;
      if (typeof interceptorConstructor == "function") {
        interceptorConstructorName = interceptorConstructor.name;
        $name = typeof interceptorConstructorName === "string" ? interceptorConstructorName : null;
      } else
        $name = null;
      t1 = $name == null;
      if (t1 || interceptor === C.Interceptor_methods || !!interceptor.$isUnknownJavaScriptObject) {
        dispatchName = H.constructorNameFallback(object);
        if (t1)
          $name = dispatchName;
        if (dispatchName === "Object") {
          objectConstructor = object.constructor;
          if (typeof objectConstructor == "function") {
            match = String(objectConstructor).match(/^\s*function\s*([\w$]*)\s*\(/);
            decompiledName = match == null ? null : match[1];
            if (typeof decompiledName === "string" && /^\w+$/.test(decompiledName))
              $name = decompiledName;
          }
        }
        return $name;
      }
      $name = $name;
      return H.unminifyOrTag($name.length > 1 && C.JSString_methods._codeUnitAt$1($name, 0) === 36 ? C.JSString_methods.substring$1($name, 1) : $name);
    },
    Primitives_objectToHumanReadableString: function(object) {
      return "Instance of '" + H.S(H.Primitives_objectTypeName(object)) + "'";
    },
    Primitives_stringConcatUnchecked: function(string1, string2) {
      return H.stringTypeCheck(string1) + H.stringTypeCheck(string2);
    },
    Primitives_flattenString: function(str) {
      H.stringTypeCheck(str);
      return str.charCodeAt(0) == 0 ? str : str;
    },
    Primitives_getTimeZoneName: function(receiver) {
      var d = H.Primitives_lazyAsJsDate(H.interceptedTypeCheck(receiver, "$isDateTime")),
        match = /\((.*)\)/.exec(d.toString());
      if (match != null) {
        if (1 >= match.length)
          return H.ioore(match, 1);
        return H.stringTypeCheck(match[1]);
      }
      match = /^[A-Z,a-z]{3}\s[A-Z,a-z]{3}\s\d+\s\d{2}:\d{2}:\d{2}\s([A-Z]{3,5})\s\d{4}$/.exec(d.toString());
      if (match != null) {
        if (1 >= match.length)
          return H.ioore(match, 1);
        return H.stringTypeCheck(match[1]);
      }
      match = /(?:GMT|UTC)[+-]\d{4}/.exec(d.toString());
      if (match != null) {
        if (0 >= match.length)
          return H.ioore(match, 0);
        return H.stringTypeCheck(match[0]);
      }
      return "";
    },
    Primitives_lazyAsJsDate: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      if (receiver.date === void 0)
        receiver.date = new Date(receiver.get$millisecondsSinceEpoch());
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      return H.boolConversionCheck(receiver.isUtc) ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      return H.boolConversionCheck(receiver.isUtc) ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      return H.boolConversionCheck(receiver.isUtc) ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      return H.boolConversionCheck(receiver.isUtc) ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      return H.boolConversionCheck(receiver.isUtc) ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      return H.boolConversionCheck(receiver.isUtc) ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      H.interceptedTypeCheck(receiver, "$isDateTime");
      return H.boolConversionCheck(receiver.isUtc) ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t2, t1 = {};
      H.listTypeCheck(positionalArguments);
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      if (positionalArguments != null) {
        t2 = J.get$length$asx(positionalArguments);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t1.argumentCount = 0 + t2;
        C.JSArray_methods.addAll$1($arguments, positionalArguments);
      }
      t1.names = "";
      if (namedArguments != null && !H.boolConversionCheck(namedArguments.get$isEmpty(namedArguments)))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      return J.noSuchMethod$1$($function, H.interceptedTypeCheck(H.createUnmangledInvocationMirror(C.Symbol_call, "call" + "$" + H.S(t1.argumentCount) + H.S(t1.names), 0, $arguments, namedArgumentList, 0), "$isInvocation"));
    },
    Primitives_applyFunction: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, argumentCount, jsStub;
      H.interceptedTypeCheck($function, "$isFunction");
      H.listTypeCheck(positionalArguments);
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      if (positionalArguments instanceof Array)
        t1 = namedArguments == null || H.boolConversionCheck(namedArguments.get$isEmpty(namedArguments));
      else
        t1 = false;
      if (t1) {
        $arguments = positionalArguments;
        argumentCount = $arguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1($arguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2($arguments[0], $arguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, $arguments);
      }
      return H.Primitives__genericApplyFunction2($function, positionalArguments, namedArguments);
    },
    Primitives__genericApplyFunction2: function($function, positionalArguments, namedArguments) {
      var $arguments, t1, argumentCount, requiredParameterCount, defaultValuesClosure, t2, defaultValues, interceptor, jsFunction, keys, used, t3;
      H.interceptedTypeCheck($function, "$isFunction");
      H.listTypeCheck(positionalArguments);
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, null);
      else
        $arguments = [];
      t1 = J.getInterceptor$asx($arguments);
      argumentCount = t1.get$length($arguments);
      requiredParameterCount = $function.$requiredArgCount;
      if (typeof argumentCount !== "number")
        return argumentCount.$lt();
      if (argumentCount < requiredParameterCount)
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t2 = defaultValuesClosure == null;
      defaultValues = !t2 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction === "string")
        jsFunction = interceptor[jsFunction];
      if (t2) {
        if (namedArguments != null && H.boolConversionCheck(namedArguments.get$isNotEmpty(namedArguments)))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (defaultValues instanceof Array) {
        if (namedArguments != null && H.boolConversionCheck(namedArguments.get$isNotEmpty(namedArguments)))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount > requiredParameterCount + defaultValues.length)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        t1.addAll$1($arguments, defaultValues.slice(argumentCount - requiredParameterCount));
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t2 = C.JSArray_methods.get$iterator(keys); H.boolConversionCheck(t2.moveNext$0());)
            t1.add$1($arguments, defaultValues[H.stringTypeCheck(t2.get$current())]);
        else {
          for (t2 = C.JSArray_methods.get$iterator(keys), used = 0; H.boolConversionCheck(t2.moveNext$0());) {
            t3 = H.stringTypeCheck(t2.get$current());
            if (H.boolConversionCheck(namedArguments.containsKey$1(t3))) {
              ++used;
              t1.add$1($arguments, namedArguments.$index(0, t3));
            } else
              t1.add$1($arguments, defaultValues[t3]);
          }
          if (used !== namedArguments.get$length(namedArguments))
            return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    JsCache_fetch: function(cache, key) {
      return cache[H.stringTypeCheck(key)];
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, t1, _s5_ = "index";
      if (typeof index !== "number" || Math.floor(index) !== index)
        return P.ArgumentError$value(index, _s5_, null);
      $length = H.intTypeCheck(J.get$length$asx(indexable));
      if (!(index < 0)) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        return P.IndexError$(index, indexable, _s5_, null, $length);
      return P.RangeError$value(index, _s5_);
    },
    argumentErrorValue: function(object) {
      return P.ArgumentError$value(object, null, null);
    },
    checkNull: function(object) {
      if (object == null)
        throw H.wrapException(H.argumentErrorValue(object));
      return object;
    },
    checkInt: function(value) {
      if (typeof value !== "number" || Math.floor(value) !== value)
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    checkString: function(value) {
      if (typeof value !== "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = P.NullThrownError$();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: function() {
      return J.toString$0$(this.dartException);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder$: function(_arguments, _argumentsExpr, _expr, _method, _receiver, _pattern) {
      return new H.TypeErrorDecoder(_pattern, _arguments, _argumentsExpr, _expr, _method, _receiver, []);
    },
    TypeErrorDecoder_buildJavaScriptObject: function() {
      return {
        toString: function() {
          return "$receiver$";
        }
      };
    },
    TypeErrorDecoder_buildJavaScriptObjectWithNonClosure: function() {
      return {$method$: null,
        toString: function() {
          return "$receiver$";
        }
      };
    },
    TypeErrorDecoder_extractPattern: function(message) {
      var match;
      message = H.stringTypeCheck(H.quoteStringForRegExp(H.stringTypeCheck(message).replace(String({}), '$receiver$')));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = H.setRuntimeTypeInfo([], [P.String]);
      return H.TypeErrorDecoder$(match.indexOf("\\$arguments\\$"), match.indexOf("\\$argumentsExpr\\$"), match.indexOf("\\$expr\\$"), match.indexOf("\\$method\\$"), match.indexOf("\\$receiver\\$"), message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'));
    },
    TypeErrorDecoder_provokeCallErrorOn: function(expression) {
      return function($expr$) {
        var $argumentsExpr$ = '$arguments$';
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokeCallErrorOnNull: function() {
      return function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          null.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }();
    },
    TypeErrorDecoder_provokeCallErrorOnUndefined: function() {
      return function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          (void 0).$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }();
    },
    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOnNull: function() {
      return function() {
        try {
          null.$method$;
        } catch (e) {
          return e.message;
        }
      }();
    },
    TypeErrorDecoder_provokePropertyErrorOnUndefined: function() {
      return function() {
        try {
          (void 0).$method$;
        } catch (e) {
          return e.message;
        }
      }();
    },
    NullError$: function(_message, match) {
      var t1 = match == null ? null : match.method;
      return new H.NullError(_message, t1, []);
    },
    JsNoSuchMethodError$: function(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      t1 = t1 ? null : match.receiver;
      return new H.JsNoSuchMethodError(_message, t2, t1, []);
    },
    UnknownJsTypeError$: function(_message) {
      return new H.UnknownJsTypeError(_message, []);
    },
    unwrapException: function(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t2,
        t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return;
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              return t1.call$1(H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(H.NullError$(H.stringTypeCheck(message), match));
          }
        }
        return t1.call$1(H.UnknownJsTypeError$(typeof message === "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message === "string" && H.boolConversionCheck(H.contains(message, "call stack")))
          return P.StackOverflowError$();
        message = H.tryStringifyException(ex);
        return t1.call$1(P.ArgumentError$(typeof message === "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message === "string" && message === "too much recursion")
          return P.StackOverflowError$();
      return ex;
    },
    tryStringifyException: function(ex) {
      return function(ex) {
        try {
          return String(ex);
        } catch (e) {
        }
        return null;
      }(ex);
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception == null)
        return H._StackTrace$(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = H._StackTrace$(exception);
    },
    _StackTrace$: function(_exception) {
      return new H._StackTrace(_exception, []);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != 'object')
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var $length, index, index0, index1;
      H.interceptedTypeCheck(result, "$isMap");
      $length = H.getLength(keyValuePairs);
      if (typeof $length !== "number")
        return H.iae($length);
      index = 0;
      for (; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, H.getIndex(keyValuePairs, index), H.getIndex(keyValuePairs, index0));
      }
      return result;
    },
    invokeClosure: function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      H.interceptedTypeCheck(closure, "$isFunction");
      switch (H.intTypeCheck(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      H.intTypeCheck(arity);
      if (closure == null)
        return;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $function, callName, $prototype, $constructor, t1, trampoline, signatureFunction, getReceiver, applyTrampoline, i, t2, stub, stubCallName, _null = null;
      H.listTypeCheck(functions);
      H.intTypeCheck(applyTrampolineIndex);
      H.boolTypeCheck(isStatic);
      H.boolTypeCheck(isIntercepted);
      H.stringTypeCheck(propertyName);
      $function = functions[0];
      callName = $function.$callName;
      H.boolConversionCheck(isStatic);
      $prototype = isStatic ? Object.create(H.StaticClosure$().constructor.prototype) : Object.create(H.BoundClosure$(_null, _null, _null, _null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else if (H.boolConversionCheck(H.Closure_isCsp())) {
        t1 = function tear_off(a, b, c, d) {
          this.$initialize(a, b, c, d);
        };
        $constructor = t1;
      } else {
        t1 = $.Closure_functionCounter;
        $.Closure_functionCounter = J.$add$ansx(t1, 1);
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      if (typeof reflectionInfo == "number")
        signatureFunction = function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getType, reflectionInfo);
      else if (typeof reflectionInfo == "function")
        if (isStatic)
          signatureFunction = reflectionInfo;
        else {
          getReceiver = H.boolConversionCheck(isIntercepted) ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
          signatureFunction = function(f, r) {
            return function() {
              return f.apply({$receiver: r(this)}, arguments);
            };
          }(reflectionInfo, getReceiver);
        }
      else
        throw H.wrapException("Error in reflectionInfo.");
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      t1 = J.getInterceptor$asx(functions);
      applyTrampoline = trampoline;
      i = 1;
      while (true) {
        t2 = t1.get$length(functions);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        stub = t1.$index(functions, i);
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
        ++i;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf;
      H.intTypeCheck(arity);
      H.boolTypeCheck(isSuperCall);
      H.stringTypeCheck(stubName);
      getSelf = H.BoundClosure_selfOf;
      switch (H.boolConversionCheck(isSuperCall) ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_isCsp: function() {
      return true;
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, selfName, $arguments;
      if (H.boolConversionCheck(H.boolTypeCheck(isIntercepted)))
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      if (H.boolConversionCheck(H.Closure_isCsp()) || !t1 || arity >= 27)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        $.Closure_functionCounter = J.$add$ansx(t1, 1);
        selfName = "self" + H.S(t1);
        return new Function("return function(){var " + selfName + " = this." + H.S(H.BoundClosure_selfFieldName()) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ansx(t1, 1);
      $arguments += H.S(t1);
      return new Function("return function(" + H.S($arguments) + "){return this." + H.S(H.BoundClosure_selfFieldName()) + "." + H.S(stubName) + "(" + H.S($arguments) + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf, getReceiver;
      H.intTypeCheck(arity);
      H.boolTypeCheck(isSuperCall);
      H.stringTypeCheck($name);
      getSelf = H.BoundClosure_selfOf;
      getReceiver = H.BoundClosure_receiverOf;
      switch (H.boolConversionCheck(isSuperCall) ? -1 : arity) {
        case 0:
          throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var stubName, arity, lookedUpFunction, t1;
      H.BoundClosure_selfFieldName();
      H.BoundClosure_receiverFieldName();
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = H.Closure_cspForwardInterceptedCall(arity, $function == null ? lookedUpFunction != null : $function !== lookedUpFunction, stubName, $function);
      return t1;
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, H.intTypeCheck(applyTrampolineIndex), reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    StaticClosure$: function() {
      return new H.StaticClosure([]);
    },
    BoundClosure$: function(_self, _target, _receiver, _name) {
      return new H.BoundClosure(_self, _target, _receiver, _name, []);
    },
    BoundClosure_selfOf: function(closure) {
      return H.interceptedTypeCheck(closure, "$isBoundClosure")._self;
    },
    BoundClosure_receiverOf: function(closure) {
      return H.interceptedTypeCheck(closure, "$isBoundClosure")._receiver;
    },
    BoundClosure_selfFieldName: function() {
      var t1 = $.BoundClosure_selfFieldNameCache;
      return t1 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t1;
    },
    BoundClosure_receiverFieldName: function() {
      var t1 = $.BoundClosure_receiverFieldNameCache;
      return t1 == null ? $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed("receiver") : t1;
    },
    BoundClosure_computeFieldNamed: function(fieldName) {
      var template, names, t1, i, t2, $name;
      H.stringTypeCheck(fieldName);
      template = H.BoundClosure$("self", "target", "receiver", "name");
      names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      t1 = J.getInterceptor$asx(names);
      i = 0;
      while (true) {
        t2 = t1.get$length(names);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        $name = t1.$index(names, i);
        if (template[$name] === fieldName)
          return $name;
        ++i;
      }
    },
    jsHasOwnProperty: function(jsObject, property) {
      return jsObject.hasOwnProperty(H.stringTypeCheck(property));
    },
    jsPropertyAccess: function(jsObject, property) {
      return jsObject[H.stringTypeCheck(property)];
    },
    boolConversionCheck: function(value) {
      if (value == null)
        H.assertThrow("boolean expression must not be null");
      return value;
    },
    stringTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "String"));
    },
    doubleTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "double"));
    },
    numTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "num"));
    },
    boolTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "boolean")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "bool"));
    },
    intTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number" && Math.floor(value) === value)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "int"));
    },
    propertyTypeError: function(value, property) {
      throw H.wrapException(H.TypeErrorImplementation$(value, H.unminifyOrTag(H.isCheckPropertyToJsConstructorName(H.stringTypeCheck(property)))));
    },
    propertyTypeCastError: function(value, property) {
      throw H.wrapException(H.CastErrorImplementation$(value, H.unminifyOrTag(H.isCheckPropertyToJsConstructorName(H.stringTypeCheck(property)))));
    },
    interceptedTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if ((typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    interceptedTypeCast: function(value, property) {
      var t1;
      if (value != null)
        t1 = (typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property];
      else
        t1 = true;
      if (t1)
        return value;
      H.propertyTypeCastError(value, property);
    },
    stringSuperNativeTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      if (J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    listTypeCheck: function(value) {
      if (value == null)
        return value;
      if (!!J.getInterceptor$(value).$isList)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "List<dynamic>"));
    },
    listSuperNativeTypeCheck: function(value, property) {
      var t1;
      if (value == null)
        return value;
      t1 = J.getInterceptor$(value);
      if (!!t1.$isList)
        return value;
      if (t1[property])
        return value;
      H.propertyTypeError(value, property);
    },
    extractFunctionTypeObjectFrom: function(o) {
      return H.extractFunctionTypeObjectFromInternal(J.getInterceptor$(o));
    },
    extractFunctionTypeObjectFromInternal: function(o) {
      var signature;
      if ("$signature" in o) {
        signature = o.$signature;
        if (typeof signature == "number")
          return H.getType(H.intTypeCheck(signature));
        else
          return o.$signature();
      }
      return;
    },
    functionTypeTest: function(value, functionTypeRti) {
      var functionTypeObject;
      if (value == null)
        return false;
      if (typeof value == "function")
        return true;
      functionTypeObject = H.extractFunctionTypeObjectFrom(value);
      if (functionTypeObject == null)
        return false;
      return H.isFunctionSubtype(functionTypeObject, functionTypeRti);
    },
    functionTypeCheck: function(value, functionTypeRti) {
      var $self, t1;
      if (value == null)
        return value;
      if (true === $._inTypeAssertion)
        return value;
      $._inTypeAssertion = true;
      try {
        if (H.boolConversionCheck(H.boolTypeCheck(H.functionTypeTest(value, functionTypeRti))))
          return value;
        $self = H.runtimeTypeToString(functionTypeRti);
        t1 = H.TypeErrorImplementation$(value, $self);
        throw H.wrapException(t1);
      } finally {
        $._inTypeAssertion = false;
      }
    },
    futureOrCheck: function(o, futureOrRti) {
      return H.assertSubtypeOfRuntimeType(o, futureOrRti);
    },
    TypeErrorImplementation$: function(value, type) {
      return new H.TypeErrorImplementation("TypeError: " + H.S(P.Error_safeToString(value)) + ": type '" + H.S(H._typeDescription(value)) + "' is not a subtype of type '" + H.S(type) + "'", []);
    },
    CastErrorImplementation$: function(value, type) {
      return new H.CastErrorImplementation("CastError: " + H.S(P.Error_safeToString(value)) + ": type '" + H.S(H._typeDescription(value)) + "' is not a subtype of type '" + H.S(type) + "'", []);
    },
    _typeDescription: function(value) {
      var functionTypeObject;
      if (value instanceof H.Closure) {
        functionTypeObject = H.extractFunctionTypeObjectFrom(value);
        if (functionTypeObject != null)
          return H.runtimeTypeToString(functionTypeObject);
        return "Closure";
      }
      return H.Primitives_objectTypeName(value);
    },
    assertThrow: function(message) {
      throw H.wrapException(H._AssertionError$(message));
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(P.CyclicInitializationError$(H.stringTypeCheck(staticName)));
    },
    RuntimeError$: function(message) {
      return new H.RuntimeError(message, []);
    },
    jsonEncodeNative: function(string) {
      return JSON.stringify(H.stringTypeCheck(string));
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag(H.stringTypeCheck($name));
    },
    _AssertionError$: function(message) {
      return new H._AssertionError(message, []);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target.$ti = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return;
      return target.$ti;
    },
    getRuntimeTypeArguments: function(interceptor, object, substitutionName) {
      return H.substitute(H.getField(interceptor, "$as" + H.S(substitutionName)), H.getRuntimeTypeInfo(object));
    },
    getRuntimeTypeArgumentIntercepted: function(interceptor, target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.getRuntimeTypeArguments(interceptor, target, substitutionName);
      return $arguments == null ? null : H.getIndex($arguments, index);
    },
    getRuntimeTypeArgument: function(target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.getRuntimeTypeArguments(target, target, substitutionName);
      return $arguments == null ? null : H.getIndex($arguments, index);
    },
    getTypeArgumentByIndex: function(target, index) {
      var rti;
      H.intTypeCheck(index);
      rti = H.getRuntimeTypeInfo(target);
      return rti == null ? null : H.getIndex(rti, index);
    },
    _getRuntimeTypeAsString: function(rti, genericContext) {
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      return H.S(H.unminifyOrTag(H.rawRtiToJsConstructorName(H.getIndex(rti, 0)))) + H.S(H._joinArguments(rti, 1, genericContext));
    },
    runtimeTypeToString: function(rti) {
      return H._runtimeTypeToString(rti, null);
    },
    _runtimeTypeToString: function(rti, genericContext) {
      var t1;
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (H.boolConversionCheck(H.isDartDynamicTypeRti(rti)))
        return "dynamic";
      if (H.boolConversionCheck(H.isDartVoidTypeRti(rti)))
        return "void";
      if (H.boolConversionCheck(H.isJsArray(rti)))
        return H._getRuntimeTypeAsString(rti, genericContext);
      if (H.boolConversionCheck(H.isJsFunction(rti)))
        return H.unminifyOrTag(H.rawRtiToJsConstructorName(rti));
      if (H.boolConversionCheck(H.isDartJsInteropTypeArgumentRti(rti)))
        return "dynamic";
      if (H.boolConversionCheck(H.isGenericFunctionTypeParameter(rti))) {
        H.intTypeCheck(rti);
        if (genericContext != null) {
          if (typeof rti !== "number")
            return rti.$lt();
          if (rti >= 0) {
            t1 = J.get$length$asx(genericContext);
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = rti >= t1;
          } else
            t1 = true;
        } else
          t1 = true;
        if (t1)
          return "unexpected-generic-index:" + H.S(rti);
        t1 = J.getInterceptor$asx(genericContext);
        return H.S(t1.$index(genericContext, J.$sub$n(J.$sub$n(t1.get$length(genericContext), rti), 1)));
      }
      if (H.boolConversionCheck(H.isDartFunctionType(rti)))
        return H._functionRtiToString(rti, genericContext);
      if (H.boolConversionCheck(H.isDartFutureOrType(rti)))
        return "FutureOr<" + H.S(H._runtimeTypeToString(H.getFutureOrArgument(rti), genericContext)) + ">";
      return "unknown-reified-type";
    },
    _functionRtiToString: function(rti, genericContext) {
      var boundsRti, outerContextLength, offset, i, i0, typeParameters, typeSep, boundRti, returnTypeText, argumentsText, sep, argument, optionalArguments, namedArguments, t2, _s2_ = ", ",
        t1 = [P.String];
      H.assertSubtype(genericContext, "$isList", t1, "$asList");
      if (H.boolConversionCheck(H.boolTypeCheck(H.hasField(rti, "bounds")))) {
        boundsRti = rti.bounds;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], t1);
          outerContextLength = null;
        } else
          outerContextLength = J.get$length$asx(genericContext);
        t1 = J.getInterceptor$asx(genericContext);
        offset = t1.get$length(genericContext);
        for (i = boundsRti.length, i0 = i; i0 > 0; --i0) {
          if (typeof offset !== "number")
            return offset.$add();
          t1.add$1(genericContext, "T" + (offset + i0));
        }
        for (typeParameters = "<", typeSep = "", i0 = 0; i0 < i; ++i0, typeSep = _s2_) {
          typeParameters = J.$add$ansx(J.$add$ansx(typeParameters, typeSep), t1.$index(genericContext, J.$sub$n(J.$sub$n(t1.get$length(genericContext), i0), 1)));
          boundRti = boundsRti[i0];
          if (H.boolConversionCheck(H.isInterestingBound(boundRti)))
            typeParameters = J.$add$ansx(typeParameters, C.JSString_methods.$add(" extends ", H._runtimeTypeToString(boundRti, genericContext)));
        }
        typeParameters = J.$add$ansx(typeParameters, ">");
      } else {
        typeParameters = "";
        outerContextLength = null;
      }
      returnTypeText = !!rti.v ? "void" : H._runtimeTypeToString(rti.ret, genericContext);
      if (H.boolConversionCheck(H.boolTypeCheck(H.hasField(rti, "args"))))
        for (t1 = C.JSArray_methods.get$iterator(rti.args), argumentsText = "", sep = ""; H.boolConversionCheck(t1.moveNext$0()); sep = _s2_) {
          argument = t1.get$current();
          argumentsText = J.$add$ansx(J.$add$ansx(argumentsText, sep), H._runtimeTypeToString(argument, genericContext));
        }
      else {
        argumentsText = "";
        sep = "";
      }
      if ("opt" in rti) {
        optionalArguments = rti.opt;
        argumentsText = J.$add$ansx(argumentsText, sep + "[");
        for (t1 = C.JSArray_methods.get$iterator(optionalArguments), sep = ""; H.boolConversionCheck(t1.moveNext$0()); sep = _s2_) {
          argument = t1.get$current();
          argumentsText = J.$add$ansx(J.$add$ansx(argumentsText, sep), H._runtimeTypeToString(argument, genericContext));
        }
        argumentsText = J.$add$ansx(argumentsText, "]");
      }
      if ("named" in rti) {
        namedArguments = rti.named;
        argumentsText = J.$add$ansx(argumentsText, sep + "{");
        for (t1 = J.get$iterator$ax(H.extractKeys(namedArguments)), sep = ""; H.boolConversionCheck(t1.moveNext$0()); sep = _s2_) {
          t2 = H.stringTypeCheck(t1.get$current());
          argumentsText = J.$add$ansx(J.$add$ansx(J.$add$ansx(argumentsText, sep), H._runtimeTypeToString(namedArguments[t2], genericContext)), " " + H.S(t2));
        }
        argumentsText = J.$add$ansx(argumentsText, "}");
      }
      if (outerContextLength != null)
        genericContext.length = outerContextLength;
      return H.S(typeParameters) + "(" + H.S(argumentsText) + ") => " + H.S(returnTypeText);
    },
    joinArguments: function(types, startIndex) {
      return H._joinArguments(types, H.intTypeCheck(startIndex), null);
    },
    _joinArguments: function(types, startIndex, genericContext) {
      var buffer, index, separator, allDynamic, t1, argument;
      H.intTypeCheck(startIndex);
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (types == null)
        return "";
      buffer = P.StringBuffer$("");
      index = startIndex;
      separator = "";
      allDynamic = true;
      while (true) {
        t1 = H.getLength(types);
        if (typeof index !== "number")
          return index.$lt();
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(index < t1))
          break;
        buffer.write$1(separator);
        argument = H.getIndex(types, index);
        if (argument != null)
          allDynamic = false;
        buffer.write$1(H._runtimeTypeToString(argument, genericContext));
        ++index;
        separator = ", ";
      }
      return "<" + H.S(buffer) + ">";
    },
    substitute: function(substitution, $arguments) {
      if (substitution == null)
        return $arguments;
      substitution = H.invoke(substitution, $arguments);
      if (substitution == null)
        return;
      if (H.boolConversionCheck(H.isJsArray(substitution)))
        return substitution;
      if (H.boolConversionCheck(H.isJsFunction(substitution)))
        return H.invoke(substitution, $arguments);
      return $arguments;
    },
    checkSubtype: function(object, isField, checks, asField) {
      var $arguments, interceptor;
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return false;
      $arguments = H.getRuntimeTypeInfo(object);
      interceptor = J.getInterceptor$(object);
      if (H.getField(interceptor, isField) == null)
        return false;
      return H.checkArguments(H.getField(interceptor, asField), $arguments, null, checks, null);
    },
    computeTypeName: function(isField, $arguments) {
      H.stringTypeCheck(isField);
      H.listTypeCheck($arguments);
      return H.Primitives_formatType(H.unminifyOrTag(H.isCheckPropertyToJsConstructorName(isField)), $arguments);
    },
    assertSubtype: function(object, isField, checks, asField) {
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return object;
      if (H.boolConversionCheck(H.checkSubtype(object, isField, checks, asField)))
        return object;
      throw H.wrapException(H.TypeErrorImplementation$(object, H.computeTypeName(isField, checks)));
    },
    checkArguments: function(substitution, $arguments, sEnv, checks, tEnv) {
      return H.areSubtypes(H.substitute(substitution, $arguments), sEnv, checks, tEnv);
    },
    areSubtypes: function(s, sEnv, t, tEnv) {
      var len, i;
      if (t == null)
        return true;
      if (s == null) {
        len = H.getLength(t);
        if (typeof len !== "number")
          return H.iae(len);
        i = 0;
        for (; i < len; ++i)
          if (!H.boolConversionCheck(H._isSubtype(null, null, H.getIndex(t, i), tEnv)))
            return false;
        return true;
      }
      len = H.getLength(s);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i)
        if (!H.boolConversionCheck(H._isSubtype(H.getIndex(s, i), sEnv, H.getIndex(t, i), tEnv)))
          return false;
      return true;
    },
    computeSignature: function(signature, context, contextName) {
      return H.invokeOn(signature, context, H.getRuntimeTypeArguments(J.getInterceptor$(context), context, contextName));
    },
    isTopType: function(type) {
      return H.boolConversionCheck(H.isDartDynamicTypeRti(type)) || H.boolConversionCheck(H.isDartVoidTypeRti(type)) || H.boolConversionCheck(H.isDartObjectTypeRti(type)) || H.boolConversionCheck(H.isDartJsInteropTypeArgumentRti(type));
    },
    isSupertypeOfNull: function(type) {
      return H.boolConversionCheck(H.isSupertypeOfNullBase(type)) || H.boolConversionCheck(H.isSupertypeOfNullRecursive(type));
    },
    isSupertypeOfNullBase: function(type) {
      return H.boolConversionCheck(H.isDartDynamicTypeRti(type)) || H.boolConversionCheck(H.isDartObjectTypeRti(type)) || H.boolConversionCheck(H.isNullTypeRti(type)) || H.boolConversionCheck(H.isDartVoidTypeRti(type)) || H.boolConversionCheck(H.isDartJsInteropTypeArgumentRti(type));
    },
    isSupertypeOfNullRecursive: function(type) {
      var typeArgument;
      if (H.boolConversionCheck(H.isGenericFunctionTypeParameter(type)))
        return false;
      if (H.boolConversionCheck(H.isDartFutureOrType(type))) {
        typeArgument = H.getFutureOrArgument(type);
        return H.boolConversionCheck(H.isSupertypeOfNullBase(type)) || H.boolConversionCheck(H.isSupertypeOfNullRecursive(typeArgument));
      }
      return false;
    },
    getFutureOrArgument: function(type) {
      return H.boolConversionCheck(H.boolTypeCheck(H.hasField(type, "type"))) ? H.getField(type, "type") : null;
    },
    checkSubtypeOfRuntimeType: function(o, t) {
      var type, rti;
      if (o == null)
        return H.isSupertypeOfNull(t);
      if (H.boolConversionCheck(H.isTopType(t)))
        return true;
      if (typeof t == "object") {
        if (H.boolConversionCheck(H.isDartFutureOrType(t)))
          if (H.boolConversionCheck(H.checkSubtypeOfRuntimeType(o, H.getFutureOrArgument(t))))
            return true;
        if (H.boolConversionCheck(H.isDartFunctionType(t)))
          return H.boolTypeCheck(H.functionTypeTest(o, t));
      }
      type = H.getRawRuntimeType(J.getInterceptor$(o));
      rti = H.getRuntimeTypeInfo(o);
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      return H.isSubtype(type, t);
    },
    assertSubtypeOfRuntimeType: function(object, type) {
      if (object != null && !H.boolConversionCheck(H.checkSubtypeOfRuntimeType(object, type)))
        throw H.wrapException(H.TypeErrorImplementation$(object, H.runtimeTypeToString(type)));
      return object;
    },
    getArguments: function(type) {
      return H.boolConversionCheck(H.isJsArray(type)) ? type.slice(1) : null;
    },
    isSubtype: function(s, t) {
      return H._isSubtype(s, null, t, null);
    },
    _isSubtype: function(s, sEnv, t, tEnv) {
      var typeOfS, tTypeArgument, futureArguments, typeOfT, typeOfTString, substitution;
      if (H.boolConversionCheck(H.isIdentical(s, t)))
        return true;
      if (H.boolConversionCheck(H.isTopType(t)))
        return true;
      if (H.boolConversionCheck(H.isDartJsInteropTypeArgumentRti(s)))
        return true;
      if (H.boolConversionCheck(H.isTopType(s))) {
        if (H.boolConversionCheck(H.isGenericFunctionTypeParameter(t)))
          return false;
        if (H.boolConversionCheck(H.isDartFutureOrType(t)))
          return H._isSubtype(s, sEnv, H.getFutureOrArgument(t), tEnv);
        return false;
      }
      if (H.boolConversionCheck(H.isGenericFunctionTypeParameter(s)))
        return false;
      if (H.boolConversionCheck(H.isGenericFunctionTypeParameter(t)))
        return false;
      if (H.boolConversionCheck(H.isNullType(s)))
        return true;
      if (H.boolConversionCheck(H.isDartFunctionType(t)))
        return H._isFunctionSubtype(s, sEnv, t, tEnv);
      if (H.boolConversionCheck(H.isDartFunctionType(s)))
        return H.isDartFunctionTypeRti(t);
      typeOfS = H.boolConversionCheck(H.isJsArray(s)) ? H.getIndex(s, 0) : s;
      if (H.boolConversionCheck(H.isDartFutureOrType(t))) {
        tTypeArgument = H.getFutureOrArgument(t);
        if (H.boolConversionCheck(H.isDartFutureOrType(s)))
          return H._isSubtype(H.getFutureOrArgument(s), sEnv, tTypeArgument, tEnv);
        else if (H.boolConversionCheck(H._isSubtype(s, sEnv, tTypeArgument, tEnv)))
          return true;
        else {
          if (!H.boolConversionCheck(H.builtinIsSubtype(typeOfS, "Future")))
            return false;
          futureArguments = H.substitute(H.getField(typeOfS.prototype, "$as" + "Future"), H.getArguments(s));
          return H._isSubtype(H.boolConversionCheck(H.isJsArray(futureArguments)) ? H.getIndex(futureArguments, 0) : null, sEnv, tTypeArgument, tEnv);
        }
      }
      typeOfT = H.boolConversionCheck(H.isJsArray(t)) ? H.getIndex(t, 0) : t;
      if (H.boolConversionCheck(H.isNotIdentical(typeOfT, typeOfS))) {
        typeOfTString = H.rawRtiToJsConstructorName(typeOfT);
        if (!H.boolConversionCheck(H.builtinIsSubtype(typeOfS, typeOfTString)))
          return false;
        substitution = H.getField(typeOfS.prototype, "$as" + H.S(typeOfTString));
      } else
        substitution = null;
      if (!H.boolConversionCheck(H.isJsArray(t)))
        return true;
      return H.checkArguments(substitution, H.getArguments(s), sEnv, H.getArguments(t), tEnv);
    },
    isFunctionSubtype: function(s, t) {
      return H._isFunctionSubtype(s, null, t, null);
    },
    _isFunctionSubtype: function(s, sEnv, t, tEnv) {
      var sBounds, tBounds, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, tPos, sPos, sNamedParameters, tNamedParameters;
      if (!H.boolConversionCheck(H.isDartFunctionType(s)))
        return false;
      if (H.boolConversionCheck(H.boolTypeCheck(H.hasField(s, "bounds")))) {
        if (H.boolConversionCheck(H.boolTypeCheck(H.hasNoField(t, "bounds"))))
          return false;
        sBounds = H.getField(s, "bounds");
        tBounds = H.getField(t, "bounds");
        if (H.getLength(sBounds) != H.getLength(tBounds))
          return false;
      } else if (H.boolConversionCheck(H.boolTypeCheck(H.hasField(t, "bounds"))))
        return false;
      if (!H.boolConversionCheck(H._isSubtype(H.getField(s, "ret"), sEnv, H.getField(t, "ret"), tEnv)))
        return false;
      sParameterTypes = H.getField(s, "args");
      tParameterTypes = H.getField(t, "args");
      sOptionalParameterTypes = H.getField(s, "opt");
      tOptionalParameterTypes = H.getField(t, "opt");
      sParametersLen = sParameterTypes != null ? H.getLength(sParameterTypes) : 0;
      tParametersLen = tParameterTypes != null ? H.getLength(tParameterTypes) : 0;
      sOptionalParametersLen = sOptionalParameterTypes != null ? H.getLength(sOptionalParameterTypes) : 0;
      tOptionalParametersLen = tOptionalParameterTypes != null ? H.getLength(tOptionalParameterTypes) : 0;
      if (typeof sParametersLen !== "number")
        return sParametersLen.$gt();
      if (typeof tParametersLen !== "number")
        return H.iae(tParametersLen);
      if (sParametersLen > tParametersLen)
        return false;
      if (typeof sOptionalParametersLen !== "number")
        return H.iae(sOptionalParametersLen);
      if (typeof tOptionalParametersLen !== "number")
        return H.iae(tOptionalParametersLen);
      if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
        return false;
      for (pos = 0; pos < sParametersLen; ++pos)
        if (!H.boolConversionCheck(H._isSubtype(H.getIndex(tParameterTypes, pos), tEnv, H.getIndex(sParameterTypes, pos), sEnv)))
          return false;
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos)
        if (!H.boolConversionCheck(H._isSubtype(H.getIndex(tParameterTypes, tPos), tEnv, H.getIndex(sOptionalParameterTypes, sPos), sEnv)))
          return false;
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos)
        if (!H.boolConversionCheck(H._isSubtype(H.getIndex(tOptionalParameterTypes, tPos), tEnv, H.getIndex(sOptionalParameterTypes, sPos), sEnv)))
          return false;
      sNamedParameters = H.getField(s, "named");
      tNamedParameters = H.getField(t, "named");
      if (tNamedParameters == null)
        return true;
      if (sNamedParameters == null)
        return false;
      return H.namedParametersSubtypeCheck(sNamedParameters, sEnv, tNamedParameters, tEnv);
    },
    namedParametersSubtypeCheck: function(s, sEnv, t, tEnv) {
      var t1, i, $name,
        names = Object.getOwnPropertyNames(t);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (!Object.hasOwnProperty.call(s, $name))
          return false;
        if (!H.boolConversionCheck(H._isSubtype(t[$name], tEnv, s[$name], sEnv)))
          return false;
      }
      return true;
    },
    isGenericFunctionTypeParameter: function(type) {
      return typeof type === "number";
    },
    invoke: function($function, $arguments) {
      return H.invokeOn($function, null, $arguments);
    },
    invokeOn: function($function, receiver, $arguments) {
      return $function.apply(receiver, $arguments);
    },
    getField: function(object, $name) {
      return object[H.stringTypeCheck($name)];
    },
    getIndex: function(array, index) {
      return array[H.intTypeCheck(index)];
    },
    getLength: function(array) {
      return array.length;
    },
    isJsArray: function(value) {
      return typeof value === "object" && value !== null && value.constructor === Array;
    },
    hasField: function(object, $name) {
      return $name in object;
    },
    hasNoField: function(object, $name) {
      return !H.boolConversionCheck(H.boolTypeCheck(H.hasField(object, $name)));
    },
    isJsFunction: function(o) {
      return typeof o == "function";
    },
    isIdentical: function(s, t) {
      return s === t;
    },
    isNotIdentical: function(s, t) {
      return s !== t;
    },
    isInterestingBound: function(rti) {
      return rti != null && H.boolConversionCheck(H.isNotIdentical(rti, P.Object));
    },
    JsLinkedHashMap$: function($K, $V) {
      return new H.JsLinkedHashMap([$K, $V]);
    },
    JsLinkedHashMap_JsLinkedHashMap$es6: function($K, $V) {
      var t1 = H.JsLinkedHashMap$($K, $V);
      return t1;
    },
    JsLinkedHashMap__isStringKey: function(key) {
      return typeof key === "string";
    },
    JsLinkedHashMap__isNumericKey: function(key) {
      return typeof key === "number" && (key & 0x3ffffff) === key;
    },
    LinkedHashMapCell$: function(hashMapCellKey, hashMapCellValue) {
      return new H.LinkedHashMapCell(hashMapCellKey, hashMapCellValue, []);
    },
    LinkedHashMapKeyIterable$: function(_map, $E) {
      return new H.LinkedHashMapKeyIterable(_map, [$E]);
    },
    LinkedHashMapKeyIterator$: function(_map, _modifications, $E) {
      var t1 = new H.LinkedHashMapKeyIterator(_map, _modifications, [$E]);
      t1.LinkedHashMapKeyIterator$2(_map, _modifications, $E);
      return t1;
    },
    contains: function(userAgent, $name) {
      return H.stringTypeCheck(userAgent).indexOf(H.stringTypeCheck($name)) !== -1;
    },
    propertyGet: function(object, property) {
      return object[H.stringTypeCheck(property)];
    },
    propertySet: function(object, property, value) {
      object[H.stringTypeCheck(property)] = value;
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, H.stringTypeCheck(property), {value: value, enumerable: false, writable: true, configurable: true});
    },
    interceptorsByTag: function() {
      return init.interceptorsByTag;
    },
    leafTags: function() {
      return init.leafTags;
    },
    lookupInterceptor: function(tag) {
      H.stringTypeCheck(tag);
      return H.propertyGet(H.interceptorsByTag(), tag);
    },
    lookupAndCacheInterceptor: function(obj) {
      var interceptor, interceptorClass, mark,
        tag = H.stringTypeCheck($.getTagFunction.call$1(obj)),
        record = H.propertyGet($.dispatchRecordsForInstanceTags, tag);
      if (record != null)
        return H.patchInstance(obj, record);
      interceptor = H.propertyGet($.interceptorsForUncacheableTags, tag);
      if (interceptor != null)
        return interceptor;
      interceptorClass = H.lookupInterceptor(tag);
      if (interceptorClass == null) {
        tag = H.stringTypeCheck($.alternateTagFunction.call$2(obj, tag));
        if (tag != null) {
          record = H.propertyGet($.dispatchRecordsForInstanceTags, tag);
          if (record != null)
            return H.patchInstance(obj, record);
          interceptor = H.propertyGet($.interceptorsForUncacheableTags, tag);
          if (interceptor != null)
            return interceptor;
          interceptorClass = H.lookupInterceptor(tag);
        }
      }
      if (interceptorClass == null)
        return;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        H.propertySet($.dispatchRecordsForInstanceTags, tag, record);
        return H.patchInstance(obj, record);
      }
      if (mark === "~") {
        H.propertySet($.interceptorsForUncacheableTags, tag, interceptor);
        return interceptor;
      }
      if (mark === "-")
        return H.patchProto(obj, H.makeLeafDispatchRecord(interceptor));
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (H.leafTags()[tag] === true)
        return H.patchProto(obj, H.makeLeafDispatchRecord(interceptor));
      else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInstance: function(obj, record) {
      J.setDispatchProperty(obj, record);
      return J.dispatchRecordInterceptor(record);
    },
    patchProto: function(obj, record) {
      J.setDispatchProperty(Object.getPrototypeOf(obj), record);
      return J.dispatchRecordInterceptor(record);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      J.setDispatchProperty(proto, J.makeDispatchRecord(interceptor, proto, null, null));
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (H.leafTags()[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    constructorNameFallback: function(object) {
      return C.C_JS_CONST(object);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = H.interceptorsByTag();
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              J.setDispatchProperty(proto, record);
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = H.propertyGet(map, tag);
          H.propertySet(map, "!" + tag, interceptorClass);
          H.propertySet(map, "~" + tag, interceptorClass);
          H.propertySet(map, "-" + tag, interceptorClass);
          H.propertySet(map, "+" + tag, interceptorClass);
          H.propertySet(map, "*" + tag, interceptorClass);
        }
      }
    },
    initHooks: function() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = C.C_JS_CONST0();
      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = H.applyHooksTransformer(transformer, hooks);
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    stringIndexOfStringUnchecked: function(receiver, other, startIndex) {
      return receiver.indexOf(other, startIndex);
    },
    stringContainsStringUnchecked: function(receiver, other, startIndex) {
      return J.$ge$n(H.stringIndexOfStringUnchecked(receiver, other, startIndex), 0);
    },
    StringMatch$: function(start, input, pattern) {
      return new H.StringMatch(pattern, []);
    },
    allMatchesInStringUnchecked: function(pattern, string, startIndex) {
      H.stringTypeCheck(pattern);
      return H._StringAllMatchesIterable$(H.stringTypeCheck(string), pattern, H.intTypeCheck(startIndex));
    },
    _StringAllMatchesIterable$: function(_input, _pattern, _index) {
      return new H._StringAllMatchesIterable(_input, _pattern, _index, []);
    },
    _StringAllMatchesIterator$: function(_input, _pattern, _index) {
      return new H._StringAllMatchesIterator(_input, _pattern, _index, []);
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1;
      if (typeof other === "string")
        return H.stringContainsStringUnchecked(receiver, other, startIndex);
      else {
        t1 = J.get$isNotEmpty$asx(J.allMatches$1$s(other, J.substring$1$s(receiver, startIndex)));
        return t1;
      }
    },
    quoteStringForRegExp: function(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    Native: function Native() {
    },
    _Patch: function _Patch() {
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _.__js_helper$_jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    ConstantProtoMap: function ConstantProtoMap() {
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    GeneralConstantMap: function GeneralConstantMap() {
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1() {
    },
    Instantiation2: function Instantiation2() {
    },
    Instantiation3: function Instantiation3() {
    },
    Instantiation4: function Instantiation4() {
    },
    Instantiation5: function Instantiation5() {
    },
    Instantiation6: function Instantiation6() {
    },
    Instantiation7: function Instantiation7() {
    },
    Instantiation8: function Instantiation8() {
    },
    Instantiation9: function Instantiation9() {
    },
    Instantiation10: function Instantiation10() {
    },
    Instantiation11: function Instantiation11() {
    },
    Instantiation12: function Instantiation12() {
    },
    Instantiation13: function Instantiation13() {
    },
    Instantiation14: function Instantiation14() {
    },
    Instantiation15: function Instantiation15() {
    },
    Instantiation16: function Instantiation16() {
    },
    Instantiation17: function Instantiation17() {
    },
    Instantiation18: function Instantiation18() {
    },
    Instantiation19: function Instantiation19() {
    },
    Instantiation20: function Instantiation20() {
    },
    InternalMap: function InternalMap() {
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.__js_helper$_memberName = t0;
      _._kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
      _.$ti = t5;
    },
    Primitives: function Primitives() {
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.namedArgumentList = t1;
      _.$arguments = t2;
      _.$ti = t3;
    },
    JsCache: function JsCache() {
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
      _.$ti = t6;
    },
    NullError: function NullError(t0, t1, t2) {
      this._message = t0;
      this._method = t1;
      this.$ti = t2;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._message = t0;
      _._method = t1;
      _._receiver = t2;
      _.$ti = t3;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0, t1) {
      this._message = t0;
      this.$ti = t1;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace() {
    },
    unwrapException_saveStackTrace: function unwrapException_saveStackTrace(t0, t1) {
      this.ex = t0;
      this.$ti = t1;
    },
    _StackTrace: function _StackTrace(t0, t1) {
      this._exception = t0;
      this._trace = null;
      this.$ti = t1;
    },
    Closure: function Closure() {
    },
    Closure_fromTearOff_closure: function Closure_fromTearOff_closure() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure(t0) {
      this.$ti = t0;
    },
    BoundClosure: function BoundClosure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._self = t0;
      _._target = t1;
      _._receiver = t2;
      _.__js_helper$_name = t3;
      _.$ti = t4;
    },
    Creates: function Creates() {
    },
    Returns: function Returns() {
    },
    JSName: function JSName() {
    },
    JavaScriptIndexingBehavior: function JavaScriptIndexingBehavior() {
    },
    TypeErrorImplementation: function TypeErrorImplementation(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    CastErrorImplementation: function CastErrorImplementation(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    FallThroughErrorImplementation: function FallThroughErrorImplementation() {
    },
    RuntimeError: function RuntimeError(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    DeferredNotLoadedError: function DeferredNotLoadedError() {
    },
    UnimplementedNoSuchMethodError: function UnimplementedNoSuchMethodError() {
    },
    MainError: function MainError() {
    },
    _AssertionError: function _AssertionError(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    _UnreachableError: function _UnreachableError() {
    },
    TypeImpl: function TypeImpl() {
    },
    TypeVariable: function TypeVariable() {
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _._rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    Es6LinkedHashMap: function Es6LinkedHashMap() {
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1, t2) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._next = null;
      _.$ti = t2;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0, t1) {
      this.getTag = t0;
      this.$ti = t1;
    },
    initHooks_closure0: function initHooks_closure0(t0, t1) {
      this.getUnknownTag = t0;
      this.$ti = t1;
    },
    initHooks_closure1: function initHooks_closure1(t0, t1) {
      this.prototypeForTag = t0;
      this.$ti = t1;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp() {
    },
    _MatchImplementation: function _MatchImplementation() {
    },
    _AllMatchesIterable: function _AllMatchesIterable() {
    },
    _AllMatchesIterator: function _AllMatchesIterator() {
    },
    StringMatch: function StringMatch(t0, t1) {
      this.pattern = t0;
      this.$ti = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2, t3) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.$ti = t3;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2, t3) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    extractKeys: function(victim) {
      return J.JSArray_JSArray$markFixed(victim ? Object.keys(victim) : [], null);
    },
    unmangleGlobalNameIfPreservedAnyways: function($name) {
      return H.stringTypeCheck(H.JsCache_fetch(init.mangledGlobalNames, H.stringTypeCheck($name)));
    },
    unmangleAllIdentifiersIfPreservedAnyways: function(str) {
      return function(str, names) {
        return str.replace(/[^<,> ]+/g, function(m) {
          return names[m] || m;
        });
      }(H.stringTypeCheck(str), init.mangledGlobalNames);
    },
    _LazyMangledNamesMap: function _LazyMangledNamesMap() {
    },
    _LazyMangledInstanceNamesMap: function _LazyMangledInstanceNamesMap() {
    },
    _LazyReflectiveNamesMap: function _LazyReflectiveNamesMap() {
    },
    SupportedBrowser: function SupportedBrowser() {
    },
    Experimental: function Experimental() {
    },
    DomName: function DomName() {
    },
    DocsEditable: function DocsEditable() {
    },
    Unstable: function Unstable() {
    },
    _isInvalidArrayIndex: function(index) {
      H.intTypeCheck(index);
      return index >>> 0 !== index;
    },
    _checkValidIndex: function(index, list, $length) {
      var t1;
      H.intTypeCheck(index);
      H.listTypeCheck(list);
      H.intTypeCheck($length);
      if (!H.boolConversionCheck(H._isInvalidArrayIndex(index))) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeFloat32x4List: function NativeFloat32x4List() {
    },
    NativeInt32x4List: function NativeInt32x4List() {
    },
    NativeFloat64x2List: function NativeFloat64x2List() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    NativeFloat32x4: function NativeFloat32x4() {
    },
    NativeInt32x4: function NativeInt32x4() {
    },
    NativeFloat64x2: function NativeFloat64x2() {
    },
    _NativeFloat32x4List_Object_ListMixin: function _NativeFloat32x4List_Object_ListMixin() {
    },
    _NativeFloat32x4List_Object_ListMixin_FixedLengthListMixin: function _NativeFloat32x4List_Object_ListMixin_FixedLengthListMixin() {
    },
    _NativeFloat64x2List_Object_ListMixin: function _NativeFloat64x2List_Object_ListMixin() {
    },
    _NativeFloat64x2List_Object_ListMixin_FixedLengthListMixin: function _NativeFloat64x2List_Object_ListMixin_FixedLengthListMixin() {
    },
    _NativeInt32x4List_Object_ListMixin: function _NativeInt32x4List_Object_ListMixin() {
    },
    _NativeInt32x4List_Object_ListMixin_FixedLengthListMixin: function _NativeInt32x4List_Object_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    isBrowserObject: function(o) {
      var t1 = J.getInterceptor$(o);
      return !!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isWindow || !!t1.$isWorkerGlobalScope;
    },
    convertFromBrowserObject: function(o) {
      return o;
    },
    printString: function(string) {
      H.stringTypeCheck(string);
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  },
  J = {
    getDispatchProperty: function(object) {
      return object[init.dispatchPropertyName];
    },
    setDispatchProperty: function(object, value) {
      H.defineProperty(object, init.dispatchPropertyName, value);
    },
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    dispatchRecordInterceptor: function(record) {
      return record.i;
    },
    dispatchRecordProto: function(record) {
      return record.p;
    },
    dispatchRecordExtension: function(record) {
      return record.e;
    },
    dispatchRecordIndexability: function(record) {
      return record.x;
    },
    getNativeInterceptor: function(object) {
      var proto, objectProto, $constructor, interceptor,
        record = J.getDispatchProperty(object);
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = J.getDispatchProperty(object);
        }
      if (record != null) {
        proto = J.dispatchRecordProto(record);
        if (false === proto)
          return J.dispatchRecordInterceptor(record);
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return J.dispatchRecordInterceptor(record);
        if (J.dispatchRecordExtension(record) === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = J.lookupInterceptorByConstructor($constructor);
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        J.cacheInterceptorOnConstructor($constructor, C.UnknownJavaScriptObject_methods);
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    lookupInterceptorByConstructor: function($constructor) {
      return $constructor == null ? null : $constructor[$.$get$JS_INTEROP_INTERCEPTOR_TAG()];
    },
    cacheInterceptorOnConstructor: function($constructor, interceptor) {
      H.defineProperty($constructor, $.$get$JS_INTEROP_INTERCEPTOR_TAG(), interceptor);
    },
    JSArray_JSArray$typed: function(allocation, $E) {
      return allocation;
    },
    JSArray_JSArray$markFixed: function(allocation, $E) {
      return J.JSArray_markFixedList(H.setRuntimeTypeInfo(J.JSArray_JSArray$typed(allocation, $E), [$E]));
    },
    JSArray_JSArray$markGrowable: function(allocation, $E) {
      return H.setRuntimeTypeInfo(J.JSArray_JSArray$typed(allocation, $E), [$E]);
    },
    JSArray_markFixedList: function(list) {
      H.listTypeCheck(list);
      list.fixed$length = Array;
      return list;
    },
    JSArray_markUnmodifiableList: function(list) {
      H.listTypeCheck(list);
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    ArrayIterator$: function(iterable, $E) {
      return new J.ArrayIterator(iterable, iterable.length, [$E]);
    },
    getInterceptor$: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSDouble.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax: function(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$in: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumber.prototype;
      }
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x: function(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z: function(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$text$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$text(receiver, value);
    },
    get$_firstElementChild$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$_firstElementChild(receiver);
    },
    get$_lastElementChild$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$_lastElementChild(receiver);
    },
    get$childNodes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$childNodes(receiver);
    },
    get$children$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$error$z: function(receiver) {
      return J.getInterceptor$z(receiver).get$error(receiver);
    },
    get$hashCode$: function(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$id$z: function(receiver) {
      return J.getInterceptor$z(receiver).get$id(receiver);
    },
    get$isEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$last$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$last(receiver);
    },
    get$length$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$name$z: function(receiver) {
      return J.getInterceptor$z(receiver).get$name(receiver);
    },
    get$nodes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$nodes(receiver);
    },
    get$stream$z: function(receiver) {
      return J.getInterceptor$z(receiver).get$stream(receiver);
    },
    get$window$z: function(receiver) {
      return J.getInterceptor$z(receiver).get$window(receiver);
    },
    $add$ansx: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $and$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver & a0) >>> 0;
      return J.getInterceptor$n(receiver).$and(receiver, a0);
    },
    $eq$: function(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $ge$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver >= a0;
      return J.getInterceptor$n(receiver).$ge(receiver, a0);
    },
    $gt$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver > a0;
      return J.getInterceptor$n(receiver).$gt(receiver, a0);
    },
    $index$asx: function(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax: function(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    $le$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver <= a0;
      return J.getInterceptor$n(receiver).$le(receiver, a0);
    },
    $lt$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver < a0;
      return J.getInterceptor$n(receiver).$lt(receiver, a0);
    },
    $or$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver | a0) >>> 0;
      return J.getInterceptor$n(receiver).$or(receiver, a0);
    },
    $sub$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver - a0;
      return J.getInterceptor$n(receiver).$sub(receiver, a0);
    },
    $tdiv$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).$tdiv(receiver, a0);
    },
    $xor$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver ^ a0) >>> 0;
      return J.getInterceptor$n(receiver).$xor(receiver, a0);
    },
    _clearChildren$0$x: function(receiver) {
      return J.getInterceptor$x(receiver)._clearChildren$0(receiver);
    },
    _removeChild$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver)._removeChild$1(receiver, a0);
    },
    _replaceChild$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    abs$0$in: function(receiver) {
      if (typeof receiver === "number")
        return Math.abs(receiver);
      return J.getInterceptor$in(receiver).abs$0(receiver);
    },
    add$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addAll$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
    },
    addEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    allMatches$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    append$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).append$1(receiver, a0);
    },
    clear$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).clear$0(receiver);
    },
    close$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).close$0(receiver);
    },
    complete$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).complete$0(receiver);
    },
    complete$1$z: function(receiver, a0) {
      return J.getInterceptor$z(receiver).complete$1(receiver, a0);
    },
    contains$1$asx: function(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    elementAt$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    forEach$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    join$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    map$1$1$ax: function(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    noSuchMethod$1$: function(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    querySelector$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).querySelector$1(receiver, a0);
    },
    readEntries$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).readEntries$0(receiver);
    },
    remainder$1$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).remainder$1(receiver, a0);
    },
    remove$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).remove$0(receiver);
    },
    removeLast$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).removeLast$0(receiver);
    },
    replaceWith$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    requestFileSystem$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).requestFileSystem$0(receiver);
    },
    skip$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    substring$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).substring$1(receiver, a0);
    },
    take$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toList$1$growable$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).toList$1$growable(receiver, a0);
    },
    toString$0$: function(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    where$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool(t0) {
      this.$ti = t0;
    },
    JSNull: function JSNull(t0) {
      this.$ti = t0;
    },
    JSIndexable: function JSIndexable() {
    },
    JSMutableIndexable: function JSMutableIndexable() {
    },
    JSObject: function JSObject() {
    },
    JavaScriptObject: function JavaScriptObject(t0) {
      this.$ti = t0;
    },
    PlainJavaScriptObject: function PlainJavaScriptObject(t0) {
      this.$ti = t0;
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject(t0) {
      this.$ti = t0;
    },
    JavaScriptFunction: function JavaScriptFunction(t0) {
      this.$ti = t0;
    },
    _Growable: function _Growable() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _.__interceptors$_iterable = t0;
      _.__interceptors$_length = t1;
      _.__interceptors$_index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber(t0) {
      this.$ti = t0;
    },
    JSInt: function JSInt(t0) {
      this.$ti = t0;
    },
    JSDouble: function JSDouble(t0) {
      this.$ti = t0;
    },
    JSString: function JSString(t0) {
      this.$ti = t0;
    }
  },
  P = {
    _AsyncRun__scheduleImmediate: function(callback) {
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      $.$get$_AsyncRun__scheduleImmediateClosure().call$1(callback);
    },
    _AsyncRun__initializeScheduleImmediate: function() {
      var div, span, t1 = {};
      H.requiresPreamble();
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate: function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer: function(callback) {
      P.Timer__createTimer(C.Duration_0, H.functionTypeCheck(callback, {func: 1, ret: -1}));
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds;
      H.interceptedTypeCheck(duration, "$isDuration");
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      milliseconds = duration.get$inMilliseconds();
      if (typeof milliseconds !== "number")
        return milliseconds.$lt();
      if (milliseconds < 0)
        milliseconds = 0;
      return P._TimerImpl$(milliseconds, callback);
    },
    _TimerImpl$: function(milliseconds, callback) {
      var t1 = new P._TimerImpl([]);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _hasTimer: function() {
      H.requiresPreamble();
      return self.setTimeout != null;
    },
    _rethrow: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      error = H.wrapException(error);
      error.stack = J.toString$0$(stackTrace);
      throw error;
    },
    _BroadcastStream$: function(controller, $T) {
      return new P._BroadcastStream(controller, [$T]);
    },
    _BroadcastSubscription$: function(controller, onData, onError, onDone, cancelOnError, $T) {
      var t2,
        t1 = P.Zone_current();
      H.boolConversionCheck(cancelOnError);
      t2 = cancelOnError ? 1 : 0;
      t2 = new P._BroadcastSubscription(controller, t1, t2, [$T]);
      t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
      t2._BroadcastSubscription$5(controller, onData, onError, onDone, cancelOnError, $T);
      return t2;
    },
    _SyncBroadcastStreamController$: function(onListen, onCancel, $T) {
      return new P._SyncBroadcastStreamController(onListen, onCancel, [$T]);
    },
    _AsyncBroadcastStreamController$: function(onListen, onCancel, $T) {
      return new P._AsyncBroadcastStreamController(onListen, onCancel, [$T]);
    },
    Completer_Completer: function($T) {
      return P._AsyncCompleter$($T);
    },
    _nonNullError: function(error) {
      return error == null ? P.NullThrownError$() : error;
    },
    _AsyncCompleter$: function($T) {
      return new P._AsyncCompleter(P._Future$($T), [$T]);
    },
    _FutureListener$then: function(result, onValue, errorCallback, $S, $T) {
      var t1 = errorCallback == null ? 1 : 3;
      return new P._FutureListener(result, t1, onValue, errorCallback, [$S, $T]);
    },
    _FutureListener$catchError: function(result, errorCallback, callback, $S, $T) {
      var t1 = callback == null ? 2 : 6;
      return new P._FutureListener(result, t1, callback, errorCallback, [$S, $T]);
    },
    _Future$: function($T) {
      return new P._Future(P.Zone_current(), [$T]);
    },
    _Future__chainForeignFuture: function(source, target) {
      var e, s, exception;
      H.interceptedTypeCheck(source, "$isFuture");
      H.interceptedTypeCheck(target, "$is_Future");
      target._setPendingComplete$0();
      try {
        source.then$1$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), null);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
      }
    },
    _Future__chainCoreFuture: function(source, target) {
      var listeners;
      H.interceptedTypeCheck(source, "$is_Future");
      H.interceptedTypeCheck(target, "$is_Future");
      for (; H.boolConversionCheck(source.get$_isChained());)
        source = source.get$_chainSource();
      if (H.boolConversionCheck(source.get$_isComplete())) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        P._Future__propagateToListeners(target, listeners);
      } else {
        listeners = H.interceptedTypeCheck(target._resultOrListeners, "$is_FutureListener");
        target._setChained$1(source);
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners: function(source, listeners) {
      var t1, _box_0, hasError, asyncError, listeners0, sourceResult, zone, t2, oldZone, result, _box_1 = {};
      _box_1.source = source;
      H.interceptedTypeCheck(source, "$is_Future");
      H.interceptedTypeCheck(listeners, "$is_FutureListener");
      for (t1 = source; true;) {
        _box_0 = {};
        hasError = t1.get$_hasError();
        if (listeners == null) {
          if (H.boolConversionCheck(hasError)) {
            asyncError = _box_1.source.get$_error();
            _box_1.source.get$_zone().handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        for (; listeners0 = listeners._nextListener, listeners0 != null; listeners = listeners0) {
          listeners._nextListener = null;
          P._Future__propagateToListeners(_box_1.source, listeners);
        }
        sourceResult = _box_1.source.get$_resultOrListeners();
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        H.boolConversionCheck(hasError);
        t1 = !hasError;
        if (!t1 || H.boolConversionCheck(listeners.get$handlesValue()) || H.boolConversionCheck(listeners.get$handlesComplete())) {
          zone = listeners.get$_zone();
          if (hasError && !H.boolConversionCheck(_box_1.source.get$_zone().inSameErrorZone$1(zone))) {
            asyncError = _box_1.source.get$_error();
            _box_1.source.get$_zone().handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
            return;
          }
          t2 = P.Zone_current();
          oldZone = (t2 == null ? zone != null : t2 !== zone) ? P.Zone__enter(zone) : null;
          if (H.boolConversionCheck(listeners.get$handlesComplete()))
            new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_1, _box_0, listeners, hasError).call$0();
          else if (t1) {
            if (H.boolConversionCheck(listeners.get$handlesValue()))
              new P._Future__propagateToListeners_handleValueCallback(_box_0, listeners, sourceResult).call$0();
          } else if (H.boolConversionCheck(listeners.get$handlesError()))
            new P._Future__propagateToListeners_handleError(_box_1, _box_0, listeners).call$0();
          if (oldZone != null)
            P.Zone__leave(oldZone);
          t1 = _box_0.listenerValueOrError;
          if (!!J.getInterceptor$(t1).$isFuture) {
            result = listeners.result;
            if (H.boolConversionCheck(t1.get$_isComplete())) {
              listeners = result._removeListeners$0();
              result._cloneResult$1(t1);
              _box_1.source = t1;
              continue;
            } else
              P._Future__chainCoreFuture(t1, result);
            return;
          }
        }
        result = listeners.result;
        listeners = result._removeListeners$0();
        t1 = H.boolConversionCheck(_box_0.listenerHasError);
        t2 = _box_0.listenerValueOrError;
        if (!t1)
          result._setValue$1(t2);
        else
          result._setErrorObject$1(H.interceptedTypeCheck(t2, "$isAsyncError"));
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler: function(errorHandler, zone) {
      H.interceptedTypeCheck(errorHandler, "$isFunction");
      H.interceptedTypeCheck(zone, "$isZone");
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object, P.StackTrace]}))
        return zone.registerBinaryCallback$3$1(errorHandler, null, P.Object, P.StackTrace);
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object]}))
        return zone.registerUnaryCallback$2$1(errorHandler, null, P.Object);
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result"));
    },
    _AsyncCallbackEntry$: function(callback) {
      return new P._AsyncCallbackEntry(callback, []);
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.next;
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        t1.callback.call$0();
      }
    },
    _startMicrotaskLoop: function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          P._AsyncRun__scheduleImmediate(P.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback: function(callback) {
      var newEntry = P._AsyncCallbackEntry$(H.functionTypeCheck(callback, {func: 1, ret: -1}));
      if ($._nextCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!H.boolConversionCheck($._isInCallbackLoop))
          P._AsyncRun__scheduleImmediate(P.async___startMicrotaskLoop$closure());
      } else {
        $._lastCallback.set$next(newEntry);
        $._lastCallback = newEntry;
      }
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var entry, t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      if ($._nextCallback == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = P._AsyncCallbackEntry$(callback);
      t1 = $._lastPriorityCallback;
      if (t1 == null) {
        entry.next = H.interceptedTypeCheck($._nextCallback, "$is_AsyncCallbackEntry");
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        entry.next = H.interceptedTypeCheck(t1.get$next(), "$is_AsyncCallbackEntry");
        $._lastPriorityCallback.set$next(entry);
        $._lastPriorityCallback = entry;
        if (entry.next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var currentZone, _null = null;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      currentZone = H.interceptedTypeCheck(P.Zone_current(), "$is_Zone");
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(_null, _null, C.C__RootZone, callback);
        return;
      }
      if (C.C__RootZone === currentZone.get$_scheduleMicrotask().zone && H.boolConversionCheck(C.C__RootZone.inSameErrorZone$1(currentZone))) {
        P._rootScheduleMicrotask(_null, _null, currentZone, currentZone.registerCallback$1$1(callback, -1));
        return;
      }
      P.Zone_current().scheduleMicrotask$1(P.Zone_current().bindCallbackGuarded$1(callback));
    },
    StreamController_StreamController$broadcast: function(onCancel, onListen, sync, $T) {
      var t1 = {func: 1, ret: -1};
      H.functionTypeCheck(onListen, t1);
      H.functionTypeCheck(onCancel, t1);
      return H.boolConversionCheck(H.boolTypeCheck(sync)) ? P._SyncBroadcastStreamController$(onListen, onCancel, $T) : P._AsyncBroadcastStreamController$(onListen, onCancel, $T);
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception;
      H.functionTypeCheck(notificationHandler, {func: 1});
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P.Zone_current().handleUncaughtError$2(e, s);
      }
    },
    _nullDataHandler: function(value) {
    },
    _nullErrorHandler: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      P.Zone_current().handleUncaughtError$2(error, stackTrace);
    },
    _nullDoneHandler: function() {
    },
    _DelayedData$: function(value, $T) {
      return new P._DelayedData(value, [$T]);
    },
    _StreamImplEvents$: function($T) {
      return new P._StreamImplEvents([$T]);
    },
    _DoneStreamSubscription$: function(_onDone, $T) {
      var t1 = new P._DoneStreamSubscription(P.Zone_current(), _onDone, [$T]);
      t1._DoneStreamSubscription$1(_onDone, $T);
      return t1;
    },
    AsyncError$: function(error, stackTrace) {
      return new P.AsyncError(error, stackTrace, []);
    },
    Zone_current: function() {
      return $.Zone__current;
    },
    Zone__enter: function(zone) {
      var previous;
      H.interceptedTypeCheck(zone, "$isZone");
      previous = $.Zone__current;
      $.Zone__current = zone;
      return previous;
    },
    Zone__leave: function(previous) {
      $.Zone__current = H.interceptedTypeCheck(previous, "$isZone");
    },
    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
      var t1 = {};
      t1.error = error;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(t1, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
    },
    _rootRun: function($self, $parent, zone, f, $R) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R});
      if (H.boolConversionCheck(J.$eq$($.Zone__current, zone)))
        return f.call$0();
      old = P.Zone__enter(zone);
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        P.Zone__leave(old);
      }
    },
    _rootRunUnary: function($self, $parent, zone, f, arg, $R, $T) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      if (H.boolConversionCheck(J.$eq$($.Zone__current, zone)))
        return f.call$1(arg);
      old = P.Zone__enter(zone);
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        P.Zone__leave(old);
      }
    },
    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      if (H.boolConversionCheck(J.$eq$($.Zone__current, zone)))
        return f.call$2(arg1, arg2);
      old = P.Zone__enter(zone);
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        P.Zone__leave(old);
      }
    },
    _rootScheduleMicrotask: function($self, $parent, zone, f) {
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: -1});
      if (C.C__RootZone !== zone)
        f = !H.boolConversionCheck(C.C__RootZone.inSameErrorZone$1(zone)) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, -1);
      P._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0, t1) {
      this._box_0 = t0;
      this.$ti = t1;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.div = t1;
      _.span = t2;
      _.$ti = t3;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0, t1) {
      this.callback = t0;
      this.$ti = t1;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0, t1) {
      this.callback = t0;
      this.$ti = t1;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this.$ti = t0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1, t2) {
      this.$this = t0;
      this.callback = t1;
      this.$ti = t2;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter() {
    },
    _AsyncStarStreamController: function _AsyncStarStreamController() {
    },
    _IterationMarker: function _IterationMarker() {
    },
    _SyncStarIterator: function _SyncStarIterator() {
    },
    _SyncStarIterable: function _SyncStarIterable() {
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._async$_controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._eventState = 0;
      _._previous = _._async$_next = null;
      _._async$_controller = t0;
      _._onData = null;
      _._zone = t1;
      _._state = t2;
      _._pending = null;
      _.$ti = t3;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1, t2) {
      this.$this = t0;
      this.data = t1;
      this.$ti = t2;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _AsBroadcastStreamController: function _AsBroadcastStreamController() {
    },
    DeferredLibrary: function DeferredLibrary() {
    },
    DeferredLoadException: function DeferredLoadException() {
    },
    FutureOr: function FutureOr() {
    },
    Future: function Future() {
    },
    TimeoutException: function TimeoutException() {
    },
    Completer: function Completer() {
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _SyncCompleter: function _SyncCompleter() {
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.listener = t1;
      this.$ti = t2;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.$ti = t2;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0, t1) {
      this.target = t0;
      this.$ti = t1;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0, t1) {
      this.target = t0;
      this.$ti = t1;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.target = t0;
      _.e = t1;
      _.s = t2;
      _.$ti = t3;
    },
    _Future__asyncComplete_closure: function _Future__asyncComplete_closure(t0, t1, t2) {
      this.$this = t0;
      this.value = t1;
      this.$ti = t2;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1, t2) {
      this.$this = t0;
      this.value = t1;
      this.$ti = t2;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.error = t1;
      _.stackTrace = t2;
      _.$ti = t3;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.listener = t2;
      _.hasError = t3;
      _.$ti = t4;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0, t1) {
      this.originalSource = t0;
      this.$ti = t1;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.listener = t1;
      _.sourceResult = t2;
      _.$ti = t3;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.listener = t2;
      _.$ti = t3;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0, t1) {
      this.callback = t0;
      this.next = null;
      this.$ti = t1;
    },
    _AsyncRun: function _AsyncRun() {
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.$ti = t2;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.future = t1;
      this.$ti = t2;
    },
    StreamSubscription: function StreamSubscription() {
    },
    EventSink: function EventSink() {
    },
    StreamView: function StreamView() {
    },
    StreamConsumer: function StreamConsumer() {
    },
    StreamSink: function StreamSink() {
    },
    StreamTransformer: function StreamTransformer() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    StreamIterator: function StreamIterator() {
    },
    _ControllerEventSinkWrapper: function _ControllerEventSinkWrapper() {
    },
    StreamController: function StreamController() {
    },
    SynchronousStreamController: function SynchronousStreamController() {
    },
    _StreamControllerLifecycle: function _StreamControllerLifecycle() {
    },
    _StreamControllerBase: function _StreamControllerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController() {
    },
    _SyncStreamController: function _SyncStreamController() {
    },
    _ControllerStream: function _ControllerStream() {
    },
    _ControllerSubscription: function _ControllerSubscription() {
    },
    _StreamSinkWrapper: function _StreamSinkWrapper() {
    },
    _AddStreamState: function _AddStreamState() {
    },
    _StreamControllerAddStreamState: function _StreamControllerAddStreamState() {
    },
    _EventSink: function _EventSink() {
    },
    _EventDispatch: function _EventDispatch() {
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _StreamImpl: function _StreamImpl() {
    },
    _GeneratedStreamImpl: function _GeneratedStreamImpl() {
    },
    _IterablePendingEvents: function _IterablePendingEvents() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedError: function _DelayedError() {
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1, t2) {
      this.$this = t0;
      this.dispatch = t1;
      this.$ti = t2;
    },
    _StreamImplEvents: function _StreamImplEvents(t0) {
      var _ = this;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _._state = 0;
      _.$ti = t0;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._zone = t0;
      _._state = 0;
      _._onDone = t1;
      _.$ti = t2;
    },
    _AsBroadcastStream: function _AsBroadcastStream() {
    },
    _BroadcastSubscriptionWrapper: function _BroadcastSubscriptionWrapper() {
    },
    _StreamIterator: function _StreamIterator() {
    },
    _EmptyStream: function _EmptyStream() {
    },
    _ForwardingStream: function _ForwardingStream() {
    },
    _ForwardingStreamSubscription: function _ForwardingStreamSubscription() {
    },
    _WhereStream: function _WhereStream() {
    },
    _MapStream: function _MapStream() {
    },
    _ExpandStream: function _ExpandStream() {
    },
    _HandleErrorStream: function _HandleErrorStream() {
    },
    _TakeStream: function _TakeStream() {
    },
    _StateStreamSubscription: function _StateStreamSubscription() {
    },
    _TakeWhileStream: function _TakeWhileStream() {
    },
    _SkipStream: function _SkipStream() {
    },
    _SkipWhileStream: function _SkipWhileStream() {
    },
    _DistinctStream: function _DistinctStream() {
    },
    _EventSinkWrapper: function _EventSinkWrapper() {
    },
    _SinkTransformerStreamSubscription: function _SinkTransformerStreamSubscription() {
    },
    _StreamSinkTransformer: function _StreamSinkTransformer() {
    },
    _BoundSinkStream: function _BoundSinkStream() {
    },
    _HandlerEventSink: function _HandlerEventSink() {
    },
    _StreamHandlerTransformer: function _StreamHandlerTransformer() {
    },
    _StreamBindTransformer: function _StreamBindTransformer() {
    },
    _StreamSubscriptionTransformer: function _StreamSubscriptionTransformer() {
    },
    _BoundSubscriptionStream: function _BoundSubscriptionStream() {
    },
    Timer: function Timer() {
    },
    AsyncError: function AsyncError(t0, t1, t2) {
      this.error = t0;
      this.stackTrace = t1;
      this.$ti = t2;
    },
    _ZoneFunction: function _ZoneFunction(t0, t1) {
      this.zone = t0;
      this.$ti = t1;
    },
    ZoneSpecification: function ZoneSpecification() {
    },
    _ZoneSpecification: function _ZoneSpecification() {
    },
    ZoneDelegate: function ZoneDelegate() {
    },
    Zone: function Zone() {
    },
    _ZoneDelegate: function _ZoneDelegate() {
    },
    _Zone: function _Zone() {
    },
    _CustomZone: function _CustomZone() {
    },
    _rootHandleUncaughtError_closure: function _rootHandleUncaughtError_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.stackTrace = t1;
      this.$ti = t2;
    },
    _RootZone: function _RootZone(t0) {
      this.$ti = t0;
    },
    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.f = t1;
      _.R = t2;
      _.$ti = t3;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.$ti = t2;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.f = t1;
      _.T = t2;
      _.$ti = t3;
    },
    _HashMap__isStringKey: function(key) {
      return typeof key === "string" && key !== "__proto__";
    },
    _HashMap__isNumericKey: function(key) {
      return typeof key === "number" && (key & 1073741823) === key;
    },
    _HashMap__hasTableEntry: function(table, key) {
      return table[key] != null;
    },
    _HashMap__getTableEntry: function(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry: function(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__deleteTableEntry: function(table, key) {
      delete table[key];
    },
    _HashMap__newHashTable: function() {
      var _s20_ = "<non-identifier-key>",
        table = Object.create(null);
      P._HashMap__setTableEntry(table, _s20_, table);
      P._HashMap__deleteTableEntry(table, _s20_);
      return table;
    },
    _IdentityHashMap$: function($K, $V) {
      return new P._IdentityHashMap([$K, $V]);
    },
    _HashMapKeyIterable$: function(_map, $E) {
      return new P._HashMapKeyIterable(_map, [$E]);
    },
    _HashMapKeyIterator$: function(_map, _keys, $E) {
      return new P._HashMapKeyIterator(_map, _keys, [$E]);
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      return H.assertSubtype(H.fillLiteralMap(H.listTypeCheck(keyValuePairs), H.JsLinkedHashMap_JsLinkedHashMap$es6($K, $V)), "$isLinkedHashMap", [$K, $V], "$asLinkedHashMap");
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6($K, $V);
    },
    LinkedHashMap__makeEmpty: function() {
      return H.JsLinkedHashMap$(null, null);
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      H.listSuperNativeTypeCheck(iterable, "$isIterable");
      H.stringTypeCheck(leftDelimiter);
      H.stringTypeCheck(rightDelimiter);
      if (H.boolConversionCheck(P._isToStringVisiting(iterable))) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
      }
      parts = H.setRuntimeTypeInfo([], [P.String]);
      t1 = J.getInterceptor$ax($._toStringVisiting);
      t1.add$1($._toStringVisiting, iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        t1.removeLast$0($._toStringVisiting);
      }
      t1 = P.StringBuffer$(leftDelimiter);
      t1.writeAll$2(parts, ", ");
      t1.write$1(rightDelimiter);
      return t1.toString$0(0);
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      H.listSuperNativeTypeCheck(iterable, "$isIterable");
      H.stringTypeCheck(leftDelimiter);
      H.stringTypeCheck(rightDelimiter);
      if (H.boolConversionCheck(P._isToStringVisiting(iterable)))
        return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
      buffer = P.StringBuffer$(leftDelimiter);
      t1 = J.getInterceptor$ax($._toStringVisiting);
      t1.add$1($._toStringVisiting, iterable);
      try {
        buffer.writeAll$2(iterable, ", ");
      } finally {
        t1.removeLast$0($._toStringVisiting);
      }
      buffer.write$1(rightDelimiter);
      return J.toString$0$(buffer);
    },
    _isToStringVisiting: function(o) {
      var t2,
        t1 = J.getInterceptor$asx($._toStringVisiting),
        i = 0;
      while (true) {
        t2 = t1.get$length($._toStringVisiting);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        t2 = t1.$index($._toStringVisiting, i);
        if (o == null ? t2 == null : o === t2)
          return true;
        ++i;
      }
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var it, t1, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, t2, elision;
      H.listSuperNativeTypeCheck(iterable, "$isIterable");
      H.assertSubtype(parts, "$isList", [P.String], "$asList");
      it = J.get$iterator$ax(iterable);
      t1 = J.getInterceptor$asx(parts);
      $length = 0;
      count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!H.boolConversionCheck(it.moveNext$0()))
          return;
        next = H.S(it.get$current());
        t1.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!H.boolConversionCheck(it.moveNext$0())) {
        if (count <= 5)
          return;
        ultimateString = t1.removeLast$0(parts);
        penultimateString = t1.removeLast$0(parts);
      } else {
        penultimate = it.get$current();
        ++count;
        if (!H.boolConversionCheck(it.moveNext$0())) {
          if (count <= 4) {
            t1.add$1(parts, H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          penultimateString = t1.removeLast$0(parts);
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; H.boolConversionCheck(it.moveNext$0()); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                t2 = J.$add$ansx(J.get$length$asx(t1.removeLast$0(parts)), 2);
                if (typeof t2 !== "number")
                  return H.iae(t2);
                $length -= t2;
                --count;
              }
              t1.add$1(parts, "...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      t2 = J.$add$ansx(t1.get$length(parts), 2);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (count > t2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && H.boolConversionCheck(J.$gt$n(t1.get$length(parts), 3))))
          break;
        t2 = J.$add$ansx(J.get$length$asx(t1.removeLast$0(parts)), 2);
        if (typeof t2 !== "number")
          return H.iae(t2);
        $length -= t2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        t1.add$1(parts, elision);
      t1.add$1(parts, penultimateString);
      t1.add$1(parts, ultimateString);
    },
    ListBase_listToString: function(list) {
      return P.IterableBase_iterableToFullString(H.listTypeCheck(list), "[", "]");
    },
    MapBase_mapToString: function(m) {
      var result, t1 = {};
      H.interceptedTypeCheck(m, "$isMap");
      if (H.boolConversionCheck(P._isToStringVisiting(m)))
        return "{...}";
      result = P.StringBuffer$("");
      try {
        J.add$1$ax($._toStringVisiting, m);
        result.write$1("{");
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        result.write$1("}");
      } finally {
        J.removeLast$0$ax($._toStringVisiting);
      }
      return J.toString$0$(result);
    },
    _HashMap: function _HashMap() {
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _CustomHashMap: function _CustomHashMap() {
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedIdentityHashMap: function _LinkedIdentityHashMap() {
    },
    _Es6LinkedIdentityHashMap: function _Es6LinkedIdentityHashMap() {
    },
    _Es6MapIterable: function _Es6MapIterable() {
    },
    _Es6MapIterator: function _Es6MapIterator() {
    },
    _LinkedCustomHashMap: function _LinkedCustomHashMap() {
    },
    _HashSet: function _HashSet() {
    },
    _IdentityHashSet: function _IdentityHashSet() {
    },
    _CustomHashSet: function _CustomHashSet() {
    },
    _HashSetIterator: function _HashSetIterator() {
    },
    _LinkedHashSet: function _LinkedHashSet() {
    },
    _LinkedIdentityHashSet: function _LinkedIdentityHashSet() {
    },
    _LinkedCustomHashSet: function _LinkedCustomHashSet() {
    },
    _LinkedHashSetCell: function _LinkedHashSetCell() {
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator() {
    },
    UnmodifiableListView: function UnmodifiableListView() {
    },
    HashMap: function HashMap() {
    },
    HashSet: function HashSet() {
    },
    IterableMixin: function IterableMixin() {
    },
    IterableBase: function IterableBase() {
    },
    HasNextIterator: function HasNextIterator() {
    },
    LinkedHashMap: function LinkedHashMap() {
    },
    LinkedHashSet: function LinkedHashSet() {
    },
    LinkedList0: function LinkedList0() {
    },
    _LinkedListIterator0: function _LinkedListIterator0() {
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.result = t1;
      this.$ti = t2;
    },
    MapMixin: function MapMixin() {
    },
    UnmodifiableMapBase: function UnmodifiableMapBase() {
    },
    _MapBaseValueIterable: function _MapBaseValueIterable() {
    },
    _MapBaseValueIterator: function _MapBaseValueIterator() {
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView() {
    },
    Queue: function Queue() {
    },
    _DoubleLink: function _DoubleLink() {
    },
    DoubleLinkedQueueEntry: function DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueEntry: function _DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueElement: function _DoubleLinkedQueueElement() {
    },
    _DoubleLinkedQueueSentinel: function _DoubleLinkedQueueSentinel() {
    },
    DoubleLinkedQueue: function DoubleLinkedQueue() {
    },
    _DoubleLinkedQueueIterator: function _DoubleLinkedQueueIterator() {
    },
    ListQueue: function ListQueue() {
    },
    _ListQueueIterator: function _ListQueueIterator() {
    },
    SetMixin: function SetMixin() {
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _UnmodifiableSet: function _UnmodifiableSet() {
    },
    _SplayTreeNode: function _SplayTreeNode() {
    },
    _SplayTreeMapNode: function _SplayTreeMapNode() {
    },
    _SplayTree: function _SplayTree() {
    },
    _TypeTest: function _TypeTest() {
    },
    SplayTreeMap: function SplayTreeMap() {
    },
    _SplayTreeIterator: function _SplayTreeIterator() {
    },
    _SplayTreeKeyIterable: function _SplayTreeKeyIterable() {
    },
    _SplayTreeValueIterable: function _SplayTreeValueIterable() {
    },
    _SplayTreeKeyIterator: function _SplayTreeKeyIterator() {
    },
    _SplayTreeValueIterator: function _SplayTreeValueIterator() {
    },
    _SplayTreeNodeIterator: function _SplayTreeNodeIterator() {
    },
    SplayTreeSet: function SplayTreeSet() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _SetBase_Object_SetMixin: function _SetBase_Object_SetMixin() {
    },
    _SplayTreeMap__SplayTree_MapMixin: function _SplayTreeMap__SplayTree_MapMixin() {
    },
    _SplayTreeSet__SplayTree_IterableMixin: function _SplayTreeSet__SplayTree_IterableMixin() {
    },
    _SplayTreeSet__SplayTree_IterableMixin_SetMixin: function _SplayTreeSet__SplayTree_IterableMixin_SetMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson: function(source, reviver) {
      var parsed, e, t1, exception;
      H.stringTypeCheck(source);
      H.functionTypeCheck(reviver, {func: 1, args: [,,]});
      t1 = source;
      if (typeof t1 !== "string")
        throw H.wrapException(H.argumentErrorValue(source));
      parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.FormatException$(String(e));
        throw H.wrapException(t1);
      }
      if (reviver == null)
        return P._convertJsonToDartLazy(parsed);
      else
        return P._convertJsonToDart(parsed, reviver);
    },
    _convertJsonToDart: function(json, reviver) {
      H.functionTypeCheck(reviver, {func: 1, args: [,,]});
      return reviver.call$2(null, new P._convertJsonToDart_walk(reviver).call$1(json));
    },
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return P._JsonMap$(object);
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    _JsonMap$: function(_original) {
      return new P._JsonMap(_original, P._JsonMap__newJavaScriptObject(), []);
    },
    _JsonMap__hasProperty: function(object, key) {
      return Object.prototype.hasOwnProperty.call(object, H.stringTypeCheck(key));
    },
    _JsonMap__getProperty: function(object, key) {
      return object[H.stringTypeCheck(key)];
    },
    _JsonMap__setProperty: function(object, key, value) {
      return object[H.stringTypeCheck(key)] = value;
    },
    _JsonMap__getPropertyNames: function(object) {
      return Object.keys(object);
    },
    _JsonMap__isUnprocessed: function(object) {
      return typeof object == "undefined";
    },
    _JsonMap__newJavaScriptObject: function() {
      return Object.create(null);
    },
    _JsonMapKeyIterable$: function(_parent) {
      return new P._JsonMapKeyIterable(_parent, []);
    },
    jsonDecode: function(source) {
      return C.C_JsonCodec.decode$2$reviver(0, H.stringTypeCheck(source), null);
    },
    JsonDecoder$: function(reviver) {
      return new P.JsonDecoder(reviver, []);
    },
    _convertJsonToDart_walk: function _convertJsonToDart_walk(t0, t1) {
      this.reviver = t0;
      this.$ti = t1;
    },
    _JsonMap: function _JsonMap(t0, t1, t2) {
      var _ = this;
      _._original = t0;
      _._processed = t1;
      _._data = null;
      _.$ti = t2;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0, t1) {
      this._parent = t0;
      this.$ti = t1;
    },
    _JsonDecoderSink: function _JsonDecoderSink() {
    },
    AsciiCodec: function AsciiCodec() {
    },
    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {
    },
    AsciiEncoder: function AsciiEncoder() {
    },
    _UnicodeSubsetEncoderSink: function _UnicodeSubsetEncoderSink() {
    },
    _UnicodeSubsetDecoder: function _UnicodeSubsetDecoder() {
    },
    AsciiDecoder: function AsciiDecoder() {
    },
    _ErrorHandlingAsciiDecoderSink: function _ErrorHandlingAsciiDecoderSink() {
    },
    _SimpleAsciiDecoderSink: function _SimpleAsciiDecoderSink() {
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder() {
    },
    _BufferCachingBase64Encoder: function _BufferCachingBase64Encoder() {
    },
    _Base64EncoderSink: function _Base64EncoderSink() {
    },
    _AsciiBase64EncoderSink: function _AsciiBase64EncoderSink() {
    },
    _Utf8Base64EncoderSink: function _Utf8Base64EncoderSink() {
    },
    Base64Decoder: function Base64Decoder() {
    },
    _Base64Decoder: function _Base64Decoder() {
    },
    _Base64DecoderSink: function _Base64DecoderSink() {
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    ByteConversionSinkBase: function ByteConversionSinkBase() {
    },
    _ByteAdapterSink: function _ByteAdapterSink() {
    },
    _ByteCallbackSink: function _ByteCallbackSink() {
    },
    ChunkedConversionSink: function ChunkedConversionSink() {
    },
    _SimpleCallbackSink: function _SimpleCallbackSink() {
    },
    _ConverterStreamEventSink: function _ConverterStreamEventSink() {
    },
    Codec: function Codec() {
    },
    _FusedCodec: function _FusedCodec() {
    },
    _InvertedCodec: function _InvertedCodec() {
    },
    Converter: function Converter() {
    },
    _FusedConverter: function _FusedConverter() {
    },
    Encoding: function Encoding() {
    },
    HtmlEscapeMode: function HtmlEscapeMode() {
    },
    HtmlEscape: function HtmlEscape() {
    },
    _HtmlEscapeSink: function _HtmlEscapeSink() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError() {
    },
    JsonCyclicError: function JsonCyclicError() {
    },
    JsonCodec: function JsonCodec(t0) {
      this.$ti = t0;
    },
    JsonEncoder: function JsonEncoder() {
    },
    JsonUtf8Encoder: function JsonUtf8Encoder() {
    },
    _JsonEncoderSink: function _JsonEncoderSink() {
    },
    _JsonUtf8EncoderSink: function _JsonUtf8EncoderSink() {
    },
    JsonDecoder: function JsonDecoder(t0, t1) {
      this._reviver = t0;
      this.$ti = t1;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonPrettyPrintMixin: function _JsonPrettyPrintMixin() {
    },
    _JsonStringStringifier: function _JsonStringStringifier() {
    },
    _JsonStringStringifierPretty: function _JsonStringStringifierPretty() {
    },
    _JsonUtf8Stringifier: function _JsonUtf8Stringifier() {
    },
    _JsonUtf8StringifierPretty: function _JsonUtf8StringifierPretty() {
    },
    Latin1Codec: function Latin1Codec() {
    },
    Latin1Encoder: function Latin1Encoder() {
    },
    Latin1Decoder: function Latin1Decoder() {
    },
    _Latin1DecoderSink: function _Latin1DecoderSink() {
    },
    _Latin1AllowInvalidDecoderSink: function _Latin1AllowInvalidDecoderSink() {
    },
    LineSplitter: function LineSplitter() {
    },
    _LineSplitterSink: function _LineSplitterSink() {
    },
    _LineSplitterEventSink: function _LineSplitterEventSink() {
    },
    StringConversionSink: function StringConversionSink() {
    },
    ClosableStringSink: function ClosableStringSink() {
    },
    _ClosableStringSink: function _ClosableStringSink() {
    },
    _StringConversionSinkAsStringSinkAdapter: function _StringConversionSinkAsStringSinkAdapter() {
    },
    StringConversionSinkBase: function StringConversionSinkBase() {
    },
    StringConversionSinkMixin: function StringConversionSinkMixin() {
    },
    _StringSinkConversionSink: function _StringSinkConversionSink() {
    },
    _StringCallbackSink: function _StringCallbackSink() {
    },
    _StringAdapterSink: function _StringAdapterSink() {
    },
    _Utf8StringSinkAdapter: function _Utf8StringSinkAdapter() {
    },
    _Utf8ConversionSink: function _Utf8ConversionSink() {
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder() {
    },
    _Utf8EncoderSink: function _Utf8EncoderSink() {
    },
    Utf8Decoder: function Utf8Decoder() {
    },
    _Utf8Decoder: function _Utf8Decoder() {
    },
    __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin: function __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin() {
    },
    __JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin: function __JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin() {
    },
    __Utf8EncoderSink__Utf8Encoder_StringConversionSinkMixin: function __Utf8EncoderSink__Utf8Encoder_StringConversionSinkMixin() {
    },
    _symbolToString: function(symbol) {
      return H.Symbol_getName(H.interceptedTypeCheck(symbol, "$isSymbol0"));
    },
    identityHashCode: function(object) {
      return H.objectHashCode(object);
    },
    Function_apply: function($function, positionalArguments) {
      H.interceptedTypeCheck($function, "$isFunction");
      H.listTypeCheck(positionalArguments);
      return H.Primitives_applyFunction($function, positionalArguments, null);
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return H.Primitives_objectToHumanReadableString(object);
    },
    Error__stringToSafeString: function(string) {
      return H.jsonEncodeNative(H.stringTypeCheck(string));
    },
    DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch) {
      var t1;
      if (typeof millisecondsSinceEpoch !== "number")
        return H.iae(millisecondsSinceEpoch);
      t1 = new P.DateTime(millisecondsSinceEpoch, false, []);
      t1.DateTime$_withValue$2$isUtc(millisecondsSinceEpoch, false);
      return t1;
    },
    List_List$from: function(elements, growable, $E) {
      var list, t1;
      H.listSuperNativeTypeCheck(elements, "$isIterable");
      H.boolTypeCheck(growable);
      list = H.setRuntimeTypeInfo([], [$E]);
      for (t1 = J.get$iterator$ax(elements); H.boolConversionCheck(t1.moveNext$0());)
        C.JSArray_methods.add$1(list, H.assertSubtypeOfRuntimeType(t1.get$current(), $E));
      if (H.boolConversionCheck(growable))
        return list;
      return H.makeListFixedLength(list, $E);
    },
    StringBuffer$: function($content) {
      return new P.StringBuffer(H.S($content), []);
    },
    StringBuffer__writeAll: function(string, objects, separator) {
      var iterator;
      H.stringTypeCheck(string);
      H.listSuperNativeTypeCheck(objects, "$isIterable");
      H.stringTypeCheck(separator);
      iterator = J.get$iterator$ax(objects);
      if (!H.boolConversionCheck(iterator.moveNext$0()))
        return string;
      if (H.boolConversionCheck(J.get$isEmpty$asx(separator))) {
        do
          string = P.StringBuffer__writeOne(string, iterator.get$current());
        while (H.boolConversionCheck(iterator.moveNext$0()));
      } else {
        string = P.StringBuffer__writeOne(string, iterator.get$current());
        for (; H.boolConversionCheck(iterator.moveNext$0());)
          string = P.StringBuffer__writeOne(P.StringBuffer__writeOne(string, separator), iterator.get$current());
      }
      return string;
    },
    StringBuffer__writeOne: function(string, obj) {
      return H.Primitives_stringConcatUnchecked(H.stringTypeCheck(string), H.S(obj));
    },
    NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments) {
      return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, []);
    },
    DateTime__fourDigits: function(n) {
      var absN, sign;
      H.intTypeCheck(n);
      if (typeof n !== "number")
        return n.abs$0();
      absN = Math.abs(n);
      sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits: function(n) {
      H.intTypeCheck(n);
      if (typeof n !== "number")
        return n.$ge();
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits: function(n) {
      H.intTypeCheck(n);
      if (typeof n !== "number")
        return n.$ge();
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$_microseconds: function(_duration) {
      return new P.Duration(_duration, []);
    },
    Error_safeToString: function(object) {
      if (typeof object === "number" || typeof object === "boolean" || null == object)
        return J.toString$0$(object);
      if (typeof object === "string")
        return P.Error__stringToSafeString(object);
      return P.Error__objectToString(object);
    },
    NullThrownError$: function() {
      return new P.NullThrownError([]);
    },
    ArgumentError$: function(message) {
      return new P.ArgumentError(false, null, null, message, []);
    },
    ArgumentError$value: function(value, $name, message) {
      return new P.ArgumentError(true, value, $name, message, []);
    },
    ArgumentError$notNull: function($name) {
      return new P.ArgumentError(false, null, $name, "Must not be null", []);
    },
    ArgumentError_checkNotNull: function(argument, $name) {
      H.stringTypeCheck($name);
      if (argument == null)
        throw H.wrapException(P.ArgumentError$notNull($name));
    },
    RangeError$: function(message) {
      var _null = null;
      return new P.RangeError(_null, _null, false, _null, _null, message, []);
    },
    RangeError$value: function(value, $name) {
      return new P.RangeError(null, null, true, value, $name, "Value not in range", []);
    },
    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
      var t1 = message != null ? message : "Invalid value";
      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, t1, []);
    },
    RangeError_checkValidRange: function(start, end, $length) {
      var t1;
      H.intTypeCheck(start);
      H.intTypeCheck(end);
      H.intTypeCheck($length);
      if (typeof start !== "number")
        return H.iae(start);
      if (0 <= start) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = start > $length;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (!(start > end)) {
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = end > $length;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative: function(value, $name) {
      H.intTypeCheck(value);
      H.stringTypeCheck($name);
      if (typeof value !== "number")
        return value.$lt();
      if (value < 0)
        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));
    },
    IndexError$: function(invalidValue, indexable, $name, message, $length) {
      var t1 = H.intTypeCheck($length == null ? J.get$length$asx(indexable) : $length),
        t2 = message != null ? message : "Index out of range";
      return new P.IndexError(t1, true, invalidValue, $name, t2, []);
    },
    UnsupportedError$: function(message) {
      return new P.UnsupportedError(message, []);
    },
    UnimplementedError$: function(message) {
      return new P.UnimplementedError(message, []);
    },
    StateError$: function(message) {
      return new P.StateError(message, []);
    },
    ConcurrentModificationError$: function(modifiedObject) {
      return new P.ConcurrentModificationError(modifiedObject, []);
    },
    StackOverflowError$: function() {
      return new P.StackOverflowError([]);
    },
    CyclicInitializationError$: function(variableName) {
      return new P.CyclicInitializationError(variableName, []);
    },
    Exception_Exception: function(message) {
      return P._Exception$(message);
    },
    _Exception$: function(message) {
      return new P._Exception(message, []);
    },
    FormatException$: function(message) {
      return new P.FormatException(message, []);
    },
    print: function(object) {
      H.printToConsole(H.S(object));
    },
    _symbolMapToStringMap_closure: function _symbolMapToStringMap_closure() {
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.sb = t1;
      this.$ti = t2;
    },
    _CompileTimeError: function _CompileTimeError() {
    },
    _DuplicatedFieldInitializerError: function _DuplicatedFieldInitializerError() {
    },
    _BigIntImpl: function _BigIntImpl() {
    },
    _BigIntReduction: function _BigIntReduction() {
    },
    _BigIntClassic: function _BigIntClassic() {
    },
    Deprecated: function Deprecated() {
    },
    _Override: function _Override() {
    },
    Provisional: function Provisional() {
    },
    _Proxy0: function _Proxy0() {
    },
    pragma: function pragma() {
    },
    BigInt: function BigInt() {
    },
    bool: function bool(t0) {
      this.$ti = t0;
    },
    Comparable: function Comparable() {
    },
    DateTime: function DateTime(t0, t1, t2) {
      this._value = t0;
      this.isUtc = t1;
      this.$ti = t2;
    },
    double: function double() {
    },
    Duration: function Duration(t0, t1) {
      this._duration = t0;
      this.$ti = t1;
    },
    Duration_toString_sixDigits: function Duration_toString_sixDigits(t0) {
      this.$ti = t0;
    },
    Duration_toString_twoDigits: function Duration_toString_twoDigits(t0) {
      this.$ti = t0;
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError() {
    },
    TypeError: function TypeError() {
    },
    CastError: function CastError() {
    },
    NullThrownError: function NullThrownError(t0) {
      this.$ti = t0;
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3, t4) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
      _.$ti = t4;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
      _.$ti = t6;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
      _.$ti = t5;
    },
    FallThroughError: function FallThroughError() {
    },
    AbstractClassInstantiationError: function AbstractClassInstantiationError() {
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3, t4) {
      var _ = this;
      _._core$_receiver = t0;
      _._memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
      _.$ti = t4;
    },
    UnsupportedError: function UnsupportedError(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    UnimplementedError: function UnimplementedError(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    StateError: function StateError(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0, t1) {
      this.modifiedObject = t0;
      this.$ti = t1;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError(t0) {
      this.$ti = t0;
    },
    CyclicInitializationError: function CyclicInitializationError(t0, t1) {
      this.variableName = t0;
      this.$ti = t1;
    },
    Exception: function Exception() {
    },
    _Exception: function _Exception(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    FormatException: function FormatException(t0, t1) {
      this.message = t0;
      this.$ti = t1;
    },
    IntegerDivisionByZeroException: function IntegerDivisionByZeroException() {
    },
    Expando: function Expando() {
    },
    Function: function Function() {
    },
    int: function int() {
    },
    Invocation: function Invocation() {
    },
    _Invocation: function _Invocation() {
    },
    Iterable: function Iterable() {
    },
    _GeneratorIterable: function _GeneratorIterable() {
    },
    BidirectionalIterator: function BidirectionalIterator() {
    },
    Iterator: function Iterator() {
    },
    List: function List() {
    },
    Map: function Map() {
    },
    MapEntry: function MapEntry() {
    },
    Null: function Null(t0) {
      this.$ti = t0;
    },
    num: function num() {
    },
    Object: function Object(t0) {
      this.$ti = t0;
    },
    Pattern: function Pattern() {
    },
    Match: function Match() {
    },
    RegExp: function RegExp() {
    },
    RegExpMatch: function RegExpMatch() {
    },
    Set: function Set() {
    },
    Sink: function Sink() {
    },
    StackTrace: function StackTrace() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    Stopwatch: function Stopwatch() {
    },
    String: function String() {
    },
    Runes: function Runes() {
    },
    RuneIterator: function RuneIterator() {
    },
    StringBuffer: function StringBuffer(t0, t1) {
      this._contents = t0;
      this.$ti = t1;
    },
    StringSink: function StringSink() {
    },
    Symbol0: function Symbol0() {
    },
    Type: function Type() {
    },
    Uri: function Uri() {
    },
    _Uri: function _Uri() {
    },
    UriData: function UriData() {
    },
    _SimpleUri: function _SimpleUri() {
    },
    _DataUri: function _DataUri() {
    },
    _FakeUserTag: function _FakeUserTag() {
    },
    ServiceExtensionResponse: function ServiceExtensionResponse() {
    },
    UserTag: function UserTag() {
    },
    Metric: function Metric() {
    },
    Gauge: function Gauge() {
    },
    Counter: function Counter() {
    },
    Metrics: function Metrics() {
    },
    ServiceProtocolInfo: function ServiceProtocolInfo() {
    },
    Service: function Service() {
    },
    Flow: function Flow() {
    },
    Timeline: function Timeline() {
    },
    TimelineTask: function TimelineTask() {
    },
    _AsyncBlock: function _AsyncBlock() {
    },
    _SyncBlock: function _SyncBlock() {
    },
    FilteredElementList$: function(node) {
      return new P.FilteredElementList(node, J.get$nodes$x(node), []);
    },
    _StructuredClone: function _StructuredClone() {
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    ContextAttributes: function ContextAttributes() {
    },
    _TypedImageData: function _TypedImageData() {
    },
    _StructuredCloneDart2Js: function _StructuredCloneDart2Js() {
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js() {
    },
    CssClassSetImpl: function CssClassSetImpl() {
    },
    Device: function Device() {
    },
    FilteredElementList: function FilteredElementList(t0, t1, t2) {
      this._node = t0;
      this._childNodes = t1;
      this.$ti = t2;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure(t0) {
      this.$ti = t0;
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0(t0) {
      this.$ti = t0;
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure(t0) {
      this.$ti = t0;
    },
    Lists: function Lists() {
    },
    NodeListWrapper: function NodeListWrapper() {
    },
    _KeyRangeFactoryProvider: function _KeyRangeFactoryProvider() {
    },
    Cursor: function Cursor() {
    },
    CursorWithValue: function CursorWithValue() {
    },
    Database: function Database() {
    },
    IdbFactory: function IdbFactory() {
    },
    Index: function Index() {
    },
    KeyRange: function KeyRange() {
    },
    ObjectStore: function ObjectStore() {
    },
    Observation: function Observation() {
    },
    Observer: function Observer() {
    },
    ObserverChanges: function ObserverChanges() {
    },
    OpenDBRequest: function OpenDBRequest() {
    },
    Request: function Request() {
    },
    Transaction: function Transaction() {
    },
    VersionChangeEvent: function VersionChangeEvent() {
    },
    BytesBuilder: function BytesBuilder() {
    },
    _CopyingBytesBuilder0: function _CopyingBytesBuilder0() {
    },
    _BytesBuilder: function _BytesBuilder() {
    },
    IOException: function IOException() {
    },
    OSError: function OSError() {
    },
    _BufferAndStart: function _BufferAndStart() {
    },
    _IOCrypto: function _IOCrypto() {
    },
    ZLibOption: function ZLibOption() {
    },
    ZLibCodec: function ZLibCodec() {
    },
    GZipCodec: function GZipCodec() {
    },
    ZLibEncoder: function ZLibEncoder() {
    },
    ZLibDecoder: function ZLibDecoder() {
    },
    RawZLibFilter: function RawZLibFilter() {
    },
    _BufferSink: function _BufferSink() {
    },
    _ZLibEncoderSink: function _ZLibEncoderSink() {
    },
    _ZLibDecoderSink: function _ZLibDecoderSink() {
    },
    _FilterSink: function _FilterSink() {
    },
    Directory: function Directory() {
    },
    _Directory: function _Directory() {
    },
    _AsyncDirectoryListerOps: function _AsyncDirectoryListerOps() {
    },
    _AsyncDirectoryLister: function _AsyncDirectoryLister() {
    },
    _EmbedderConfig: function _EmbedderConfig() {
    },
    _EventHandler: function _EventHandler() {
    },
    FileMode: function FileMode() {
    },
    FileLock: function FileLock() {
    },
    File0: function File0() {
    },
    RandomAccessFile: function RandomAccessFile() {
    },
    FileSystemException: function FileSystemException() {
    },
    _FileStream: function _FileStream() {
    },
    _FileStreamConsumer: function _FileStreamConsumer() {
    },
    _File: function _File() {
    },
    _RandomAccessFileOps: function _RandomAccessFileOps() {
    },
    _RandomAccessFile: function _RandomAccessFile() {
    },
    FileSystemEntityType: function FileSystemEntityType() {
    },
    FileStat: function FileStat() {
    },
    FileSystemEntity: function FileSystemEntity() {
    },
    FileSystemEvent: function FileSystemEvent() {
    },
    FileSystemCreateEvent: function FileSystemCreateEvent() {
    },
    FileSystemModifyEvent: function FileSystemModifyEvent() {
    },
    FileSystemDeleteEvent: function FileSystemDeleteEvent() {
    },
    FileSystemMoveEvent: function FileSystemMoveEvent() {
    },
    _FileSystemWatcher: function _FileSystemWatcher() {
    },
    _IOResourceInfo: function _IOResourceInfo() {
    },
    _ReadWriteResourceInfo: function _ReadWriteResourceInfo() {
    },
    _FileResourceInfo: function _FileResourceInfo() {
    },
    _ProcessResourceInfo: function _ProcessResourceInfo() {
    },
    _SocketResourceInfo: function _SocketResourceInfo() {
    },
    _IOService: function _IOService() {
    },
    IOSink: function IOSink() {
    },
    _StreamSinkImpl0: function _StreamSinkImpl0() {
    },
    _IOSinkImpl0: function _IOSinkImpl0() {
    },
    Link: function Link() {
    },
    _Link: function _Link() {
    },
    _Namespace: function _Namespace() {
    },
    IOOverrides: function IOOverrides() {
    },
    _IOOverridesScope: function _IOOverridesScope() {
    },
    Platform0: function Platform0() {
    },
    _Platform: function _Platform() {
    },
    _CaseInsensitiveStringMap: function _CaseInsensitiveStringMap() {
    },
    _ProcessUtils: function _ProcessUtils() {
    },
    ProcessInfo: function ProcessInfo() {
    },
    ProcessStartMode: function ProcessStartMode() {
    },
    Process: function Process() {
    },
    ProcessResult: function ProcessResult() {
    },
    ProcessSignal: function ProcessSignal() {
    },
    SignalException: function SignalException() {
    },
    ProcessException: function ProcessException() {
    },
    SecureServerSocket: function SecureServerSocket() {
    },
    RawSecureServerSocket: function RawSecureServerSocket() {
    },
    SecureSocket: function SecureSocket() {
    },
    RawSecureSocket: function RawSecureSocket() {
    },
    X509Certificate: function X509Certificate() {
    },
    _FilterStatus: function _FilterStatus() {
    },
    _RawSecureSocket: function _RawSecureSocket() {
    },
    _ExternalBuffer: function _ExternalBuffer() {
    },
    _SecureFilter: function _SecureFilter() {
    },
    TlsException: function TlsException() {
    },
    HandshakeException: function HandshakeException() {
    },
    CertificateException: function CertificateException() {
    },
    SecurityContext: function SecurityContext() {
    },
    _ServiceObject0: function _ServiceObject0() {
    },
    InternetAddressType: function InternetAddressType() {
    },
    InternetAddress: function InternetAddress() {
    },
    NetworkInterface: function NetworkInterface() {
    },
    RawServerSocket: function RawServerSocket() {
    },
    ServerSocket: function ServerSocket() {
    },
    SocketDirection: function SocketDirection() {
    },
    SocketOption: function SocketOption() {
    },
    _RawSocketOptions: function _RawSocketOptions() {
    },
    RawSocketOption: function RawSocketOption() {
    },
    RawSocketEvent: function RawSocketEvent() {
    },
    ConnectionTask: function ConnectionTask() {
    },
    RawSocket: function RawSocket() {
    },
    Socket: function Socket() {
    },
    Datagram: function Datagram() {
    },
    RawDatagramSocket: function RawDatagramSocket() {
    },
    SocketException: function SocketException() {
    },
    _StdStream: function _StdStream() {
    },
    Stdin: function Stdin() {
    },
    Stdout: function Stdout() {
    },
    StdoutException: function StdoutException() {
    },
    StdinException: function StdinException() {
    },
    _StdConsumer: function _StdConsumer() {
    },
    _StdSink: function _StdSink() {
    },
    StdioType: function StdioType() {
    },
    _StdIOUtils: function _StdIOUtils() {
    },
    SystemEncoding: function SystemEncoding() {
    },
    _WindowsCodePageEncoder: function _WindowsCodePageEncoder() {
    },
    _WindowsCodePageEncoderSink: function _WindowsCodePageEncoderSink() {
    },
    _WindowsCodePageDecoder: function _WindowsCodePageDecoder() {
    },
    _WindowsCodePageDecoderSink: function _WindowsCodePageDecoderSink() {
    },
    RawSynchronousSocket: function RawSynchronousSocket() {
    },
    _ReceivePortImpl: function _ReceivePortImpl() {
    },
    Capability: function Capability() {
    },
    IsolateSpawnException: function IsolateSpawnException() {
    },
    Isolate: function Isolate() {
    },
    SendPort: function SendPort() {
    },
    ReceivePort: function ReceivePort() {
    },
    RawReceivePort: function RawReceivePort() {
    },
    RemoteError: function RemoteError() {
    },
    _convertDartFunction: function(f) {
      return function(_call, f, captureThis) {
        return function() {
          return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunction, H.interceptedTypeCheck(f, "$isFunction"), false);
    },
    _callDartFunction: function(callback, captureThis, $self, $arguments) {
      var arguments0, dartArgs;
      H.boolTypeCheck(captureThis);
      H.listTypeCheck($arguments);
      if (H.boolConversionCheck(captureThis)) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      dartArgs = P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), null), true, null);
      return P._convertToJS(P.Function_apply(H.interceptedTypeCheck(callback, "$isFunction"), dartArgs));
    },
    JsObject$_fromJs: function(_jsObject) {
      var t1 = new P.JsObject(_jsObject, []);
      t1.JsObject$_fromJs$1(_jsObject);
      return t1;
    },
    JsObject_JsObject: function($constructor, $arguments) {
      var constr, args, factoryFunction;
      H.interceptedTypeCheck($constructor, "$isJsFunction");
      H.listTypeCheck($arguments);
      constr = P._convertToJS($constructor);
      if ($arguments == null)
        return H.interceptedTypeCheck(P._wrapToDart(new constr()), "$isJsObject");
      if ($arguments instanceof Array)
        switch ($arguments.length) {
          case 0:
            return H.interceptedTypeCheck(P._wrapToDart(new constr()), "$isJsObject");
          case 1:
            return H.interceptedTypeCheck(P._wrapToDart(new constr(P._convertToJS($arguments[0]))), "$isJsObject");
          case 2:
            return H.interceptedTypeCheck(P._wrapToDart(new constr(P._convertToJS($arguments[0]), P._convertToJS($arguments[1]))), "$isJsObject");
          case 3:
            return H.interceptedTypeCheck(P._wrapToDart(new constr(P._convertToJS($arguments[0]), P._convertToJS($arguments[1]), P._convertToJS($arguments[2]))), "$isJsObject");
          case 4:
            return H.interceptedTypeCheck(P._wrapToDart(new constr(P._convertToJS($arguments[0]), P._convertToJS($arguments[1]), P._convertToJS($arguments[2]), P._convertToJS($arguments[3]))), "$isJsObject");
        }
      args = [null];
      C.JSArray_methods.addAll$1(args, J.map$1$1$ax($arguments, P.js___convertToJS$closure(), null));
      factoryFunction = constr.bind.apply(constr, args);
      String(factoryFunction);
      return H.interceptedTypeCheck(P._wrapToDart(new factoryFunction()), "$isJsObject");
    },
    JsObject_JsObject$fromBrowserObject: function(object) {
      if (typeof object === "number" || typeof object === "string" || typeof object === "boolean" || object == null)
        throw H.wrapException(P.ArgumentError$("object cannot be a num, string, bool, or null"));
      return H.interceptedTypeCheck(P._wrapToDart(P._convertToJS(object)), "$isJsObject");
    },
    JsObject_JsObject$jsify: function(object) {
      var t1 = J.getInterceptor$(object);
      if (!t1.$isMap && !t1.$isIterable)
        throw H.wrapException(P.ArgumentError$("object must be a Map or Iterable"));
      return H.interceptedTypeCheck(P._wrapToDart(P.JsObject__convertDataTree(object)), "$isJsObject");
    },
    JsObject__convertDataTree: function(data) {
      return new P.JsObject__convertDataTree__convert(P._IdentityHashMap$(null, null)).call$1(data);
    },
    JsFunction$_fromJs: function(jsObject) {
      var t1 = new P.JsFunction(jsObject, []);
      t1.JsObject$_fromJs$1(jsObject);
      return t1;
    },
    JsArray$from: function(other, $E) {
      var t2, t1 = [];
      C.JSArray_methods.addAll$1(t1, J.map$1$1$ax(other, P.js___convertToJS$closure(), null));
      t2 = new P.JsArray(t1, [$E]);
      t2.JsObject$_fromJs$1(t1);
      return t2;
    },
    JsArray$_fromJs: function(jsObject, $E) {
      var t1 = new P.JsArray(jsObject, [$E]);
      t1.JsObject$_fromJs$1(jsObject);
      return t1;
    },
    _defineProperty: function(o, $name, value) {
      var exception;
      H.stringTypeCheck($name);
      try {
        if (H.boolConversionCheck(P._isExtensible(o)) && !H.boolConversionCheck(P._hasOwnProperty(o, $name))) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _hasOwnProperty: function(o, $name) {
      return Object.prototype.hasOwnProperty.call(o, H.stringTypeCheck($name));
    },
    _isExtensible: function(o) {
      return Object.isExtensible(o);
    },
    _getOwnProperty: function(o, $name) {
      H.stringTypeCheck($name);
      if (H.boolConversionCheck(P._hasOwnProperty(o, $name)))
        return o[$name];
      return;
    },
    _isLocalObject: function(o) {
      return o instanceof Object;
    },
    _convertToJS: function(o) {
      var t1;
      if (o == null || typeof o === "string" || typeof o === "number" || typeof o === "boolean")
        return o;
      t1 = J.getInterceptor$(o);
      if (!!t1.$isJsObject)
        return o._jsObject;
      if (H.boolConversionCheck(H.isBrowserObject(o)))
        return o;
      if (!!t1.$isTypedData)
        return o;
      if (!!t1.$isDateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (!!t1.$isFunction)
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    },
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy;
      H.stringTypeCheck(propertyName);
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: function(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (H.boolConversionCheck(P._isLocalObject(o)) && H.boolConversionCheck(H.isBrowserObject(o)))
        return H.convertFromBrowserObject(o);
      else if (H.boolConversionCheck(P._isLocalObject(o)) && !!J.getInterceptor$(o).$isTypedData)
        return o;
      else if (o instanceof Date)
        return P.DateTime$fromMillisecondsSinceEpoch(H.intTypeCheck(o.getTime()));
      else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    },
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy;
      H.stringTypeCheck(propertyName);
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !H.boolConversionCheck(P._isLocalObject(o))) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    JsObject: function JsObject(t0, t1) {
      this._jsObject = t0;
      this.$ti = t1;
    },
    JsObject__convertDataTree__convert: function JsObject__convertDataTree__convert(t0, t1) {
      this._convertedObjects = t0;
      this.$ti = t1;
    },
    JsFunction: function JsFunction(t0, t1) {
      this._jsObject = t0;
      this.$ti = t1;
    },
    JsArray: function JsArray(t0, t1) {
      this._jsObject = t0;
      this.$ti = t1;
    },
    _convertToJS_closure: function _convertToJS_closure(t0) {
      this.$ti = t0;
    },
    _convertToJS_closure0: function _convertToJS_closure0(t0, t1) {
      this.ctor = t0;
      this.$ti = t1;
    },
    _wrapToDart_closure: function _wrapToDart_closure(t0) {
      this.$ti = t0;
    },
    _wrapToDart_closure0: function _wrapToDart_closure0(t0) {
      this.$ti = t0;
    },
    _wrapToDart_closure1: function _wrapToDart_closure1(t0) {
      this.$ti = t0;
    },
    _JsArray_JsObject_ListMixin: function _JsArray_JsObject_ListMixin() {
    },
    _JSRandom: function _JSRandom() {
    },
    _Random: function _Random() {
    },
    _JSSecureRandom: function _JSSecureRandom() {
    },
    _JenkinsSmiHash0: function _JenkinsSmiHash0() {
    },
    Point: function Point() {
    },
    Random: function Random() {
    },
    _RectangleBase: function _RectangleBase() {
    },
    Rectangle: function Rectangle() {
    },
    MutableRectangle: function MutableRectangle() {
    },
    MirrorSystem: function MirrorSystem() {
    },
    Mirror: function Mirror() {
    },
    IsolateMirror: function IsolateMirror() {
    },
    DeclarationMirror: function DeclarationMirror() {
    },
    ObjectMirror: function ObjectMirror() {
    },
    InstanceMirror: function InstanceMirror() {
    },
    ClosureMirror: function ClosureMirror() {
    },
    LibraryMirror: function LibraryMirror() {
    },
    LibraryDependencyMirror: function LibraryDependencyMirror() {
    },
    CombinatorMirror: function CombinatorMirror() {
    },
    TypeMirror: function TypeMirror() {
    },
    ClassMirror: function ClassMirror() {
    },
    FunctionTypeMirror: function FunctionTypeMirror() {
    },
    TypeVariableMirror: function TypeVariableMirror() {
    },
    TypedefMirror: function TypedefMirror() {
    },
    MethodMirror: function MethodMirror() {
    },
    VariableMirror: function VariableMirror() {
    },
    ParameterMirror: function ParameterMirror() {
    },
    SourceLocation: function SourceLocation() {
    },
    Comment0: function Comment0() {
    },
    MirrorsUsed: function MirrorsUsed() {
    },
    _SvgElementFactoryProvider: function _SvgElementFactoryProvider() {
    },
    AElement: function AElement() {
    },
    Angle: function Angle() {
    },
    AnimateElement: function AnimateElement() {
    },
    AnimateMotionElement: function AnimateMotionElement() {
    },
    AnimateTransformElement: function AnimateTransformElement() {
    },
    AnimatedAngle: function AnimatedAngle() {
    },
    AnimatedBoolean: function AnimatedBoolean() {
    },
    AnimatedEnumeration: function AnimatedEnumeration() {
    },
    AnimatedInteger: function AnimatedInteger() {
    },
    AnimatedLength: function AnimatedLength() {
    },
    AnimatedLengthList: function AnimatedLengthList() {
    },
    AnimatedNumber: function AnimatedNumber() {
    },
    AnimatedNumberList: function AnimatedNumberList() {
    },
    AnimatedPreserveAspectRatio: function AnimatedPreserveAspectRatio() {
    },
    AnimatedRect: function AnimatedRect() {
    },
    AnimatedString: function AnimatedString() {
    },
    AnimatedTransformList: function AnimatedTransformList() {
    },
    AnimationElement: function AnimationElement() {
    },
    CircleElement: function CircleElement() {
    },
    ClipPathElement: function ClipPathElement() {
    },
    DefsElement: function DefsElement() {
    },
    DescElement: function DescElement() {
    },
    DiscardElement: function DiscardElement() {
    },
    EllipseElement: function EllipseElement() {
    },
    FEBlendElement: function FEBlendElement() {
    },
    FEColorMatrixElement: function FEColorMatrixElement() {
    },
    FEComponentTransferElement: function FEComponentTransferElement() {
    },
    FECompositeElement: function FECompositeElement() {
    },
    FEConvolveMatrixElement: function FEConvolveMatrixElement() {
    },
    FEDiffuseLightingElement: function FEDiffuseLightingElement() {
    },
    FEDisplacementMapElement: function FEDisplacementMapElement() {
    },
    FEDistantLightElement: function FEDistantLightElement() {
    },
    FEFloodElement: function FEFloodElement() {
    },
    FEFuncAElement: function FEFuncAElement() {
    },
    FEFuncBElement: function FEFuncBElement() {
    },
    FEFuncGElement: function FEFuncGElement() {
    },
    FEFuncRElement: function FEFuncRElement() {
    },
    FEGaussianBlurElement: function FEGaussianBlurElement() {
    },
    FEImageElement: function FEImageElement() {
    },
    FEMergeElement: function FEMergeElement() {
    },
    FEMergeNodeElement: function FEMergeNodeElement() {
    },
    FEMorphologyElement: function FEMorphologyElement() {
    },
    FEOffsetElement: function FEOffsetElement() {
    },
    FEPointLightElement: function FEPointLightElement() {
    },
    FESpecularLightingElement: function FESpecularLightingElement() {
    },
    FESpotLightElement: function FESpotLightElement() {
    },
    FETileElement: function FETileElement() {
    },
    FETurbulenceElement: function FETurbulenceElement() {
    },
    FilterElement: function FilterElement() {
    },
    FilterPrimitiveStandardAttributes: function FilterPrimitiveStandardAttributes() {
    },
    FitToViewBox: function FitToViewBox() {
    },
    ForeignObjectElement: function ForeignObjectElement() {
    },
    GElement: function GElement() {
    },
    GeometryElement: function GeometryElement() {
    },
    GraphicsElement: function GraphicsElement() {
    },
    ImageElement0: function ImageElement0() {
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    LineElement: function LineElement() {
    },
    LinearGradientElement: function LinearGradientElement() {
    },
    MarkerElement: function MarkerElement() {
    },
    MaskElement: function MaskElement() {
    },
    Matrix: function Matrix() {
    },
    MetadataElement: function MetadataElement() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PathElement: function PathElement() {
    },
    PatternElement: function PatternElement() {
    },
    Point0: function Point0() {
    },
    PointList: function PointList() {
    },
    PolygonElement: function PolygonElement() {
    },
    PolylineElement: function PolylineElement() {
    },
    PreserveAspectRatio: function PreserveAspectRatio() {
    },
    RadialGradientElement: function RadialGradientElement() {
    },
    Rect: function Rect() {
    },
    RectElement: function RectElement() {
    },
    ScriptElement0: function ScriptElement0() {
    },
    SetElement: function SetElement() {
    },
    StopElement: function StopElement() {
    },
    StringList: function StringList() {
    },
    StyleElement0: function StyleElement0() {
    },
    AttributeClassSet: function AttributeClassSet() {
    },
    SvgElement: function SvgElement() {
    },
    SvgSvgElement: function SvgSvgElement() {
    },
    SwitchElement: function SwitchElement() {
    },
    SymbolElement: function SymbolElement() {
    },
    TSpanElement: function TSpanElement() {
    },
    Tests: function Tests() {
    },
    TextContentElement: function TextContentElement() {
    },
    TextElement: function TextElement() {
    },
    TextPathElement: function TextPathElement() {
    },
    TextPositioningElement: function TextPositioningElement() {
    },
    TitleElement0: function TitleElement0() {
    },
    Transform: function Transform() {
    },
    TransformList: function TransformList() {
    },
    UnitTypes: function UnitTypes() {
    },
    UriReference: function UriReference() {
    },
    UseElement: function UseElement() {
    },
    ViewElement: function ViewElement() {
    },
    ZoomAndPan: function ZoomAndPan() {
    },
    _GradientElement: function _GradientElement() {
    },
    _SVGComponentTransferFunctionElement: function _SVGComponentTransferFunctionElement() {
    },
    _SVGFEDropShadowElement: function _SVGFEDropShadowElement() {
    },
    _SVGMPathElement: function _SVGMPathElement() {
    },
    _LengthList_Interceptor_ListMixin: function _LengthList_Interceptor_ListMixin() {
    },
    _LengthList_Interceptor_ListMixin_ImmutableListMixin: function _LengthList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NumberList_Interceptor_ListMixin: function _NumberList_Interceptor_ListMixin() {
    },
    _NumberList_Interceptor_ListMixin_ImmutableListMixin: function _NumberList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _StringList_Interceptor_ListMixin: function _StringList_Interceptor_ListMixin() {
    },
    _StringList_Interceptor_ListMixin_ImmutableListMixin: function _StringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TransformList_Interceptor_ListMixin: function _TransformList_Interceptor_ListMixin() {
    },
    _TransformList_Interceptor_ListMixin_ImmutableListMixin: function _TransformList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    ByteBuffer: function ByteBuffer() {
    },
    TypedData: function TypedData() {
    },
    _TypedIntList: function _TypedIntList() {
    },
    _TypedFloatList: function _TypedFloatList() {
    },
    Endian: function Endian() {
    },
    ByteData: function ByteData() {
    },
    Int8List: function Int8List() {
    },
    Uint8List: function Uint8List() {
    },
    Uint8ClampedList: function Uint8ClampedList() {
    },
    Int16List: function Int16List() {
    },
    Uint16List: function Uint16List() {
    },
    Int32List: function Int32List() {
    },
    Uint32List: function Uint32List() {
    },
    Int64List: function Int64List() {
    },
    Uint64List: function Uint64List() {
    },
    Float32List: function Float32List() {
    },
    Float64List: function Float64List() {
    },
    Float32x4List: function Float32x4List() {
    },
    Int32x4List: function Int32x4List() {
    },
    Float64x2List: function Float64x2List() {
    },
    Float32x4: function Float32x4() {
    },
    Int32x4: function Int32x4() {
    },
    Float64x2: function Float64x2() {
    },
    UnmodifiableByteBufferView: function UnmodifiableByteBufferView() {
    },
    UnmodifiableByteDataView: function UnmodifiableByteDataView() {
    },
    _UnmodifiableListMixin: function _UnmodifiableListMixin() {
    },
    UnmodifiableUint8ListView: function UnmodifiableUint8ListView() {
    },
    UnmodifiableInt8ListView: function UnmodifiableInt8ListView() {
    },
    UnmodifiableUint8ClampedListView: function UnmodifiableUint8ClampedListView() {
    },
    UnmodifiableUint16ListView: function UnmodifiableUint16ListView() {
    },
    UnmodifiableInt16ListView: function UnmodifiableInt16ListView() {
    },
    UnmodifiableUint32ListView: function UnmodifiableUint32ListView() {
    },
    UnmodifiableInt32ListView: function UnmodifiableInt32ListView() {
    },
    UnmodifiableUint64ListView: function UnmodifiableUint64ListView() {
    },
    UnmodifiableInt64ListView: function UnmodifiableInt64ListView() {
    },
    UnmodifiableInt32x4ListView: function UnmodifiableInt32x4ListView() {
    },
    UnmodifiableFloat32x4ListView: function UnmodifiableFloat32x4ListView() {
    },
    UnmodifiableFloat64x2ListView: function UnmodifiableFloat64x2ListView() {
    },
    UnmodifiableFloat32ListView: function UnmodifiableFloat32ListView() {
    },
    UnmodifiableFloat64ListView: function UnmodifiableFloat64ListView() {
    },
    _UnmodifiableFloat32ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableFloat32ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableFloat32x4ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableFloat32x4ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableFloat64ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableFloat64ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableFloat64x2ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableFloat64x2ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableInt16ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableInt16ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableInt32ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableInt32ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableInt32x4ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableInt32x4ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableInt64ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableInt64ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableInt8ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableInt8ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableUint16ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableUint16ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableUint32ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableUint32ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableUint64ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableUint64ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableUint8ClampedListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableUint8ClampedListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    _UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    },
    AnalyserNode: function AnalyserNode() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioBufferSourceNode: function AudioBufferSourceNode() {
    },
    AudioContext: function AudioContext() {
    },
    AudioDestinationNode: function AudioDestinationNode() {
    },
    AudioListener: function AudioListener() {
    },
    AudioNode: function AudioNode() {
    },
    AudioParam: function AudioParam() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioProcessingEvent: function AudioProcessingEvent() {
    },
    AudioScheduledSourceNode: function AudioScheduledSourceNode() {
    },
    AudioTrack: function AudioTrack() {
    },
    AudioTrackList: function AudioTrackList() {
    },
    AudioWorkletGlobalScope: function AudioWorkletGlobalScope() {
    },
    AudioWorkletNode: function AudioWorkletNode() {
    },
    AudioWorkletProcessor: function AudioWorkletProcessor() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    BiquadFilterNode: function BiquadFilterNode() {
    },
    ChannelMergerNode: function ChannelMergerNode() {
    },
    ChannelSplitterNode: function ChannelSplitterNode() {
    },
    ConstantSourceNode: function ConstantSourceNode() {
    },
    ConvolverNode: function ConvolverNode() {
    },
    DelayNode: function DelayNode() {
    },
    DynamicsCompressorNode: function DynamicsCompressorNode() {
    },
    GainNode: function GainNode() {
    },
    IirFilterNode: function IirFilterNode() {
    },
    MediaElementAudioSourceNode: function MediaElementAudioSourceNode() {
    },
    MediaStreamAudioDestinationNode: function MediaStreamAudioDestinationNode() {
    },
    MediaStreamAudioSourceNode: function MediaStreamAudioSourceNode() {
    },
    OfflineAudioCompletionEvent: function OfflineAudioCompletionEvent() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    OscillatorNode: function OscillatorNode() {
    },
    PannerNode: function PannerNode() {
    },
    PeriodicWave: function PeriodicWave() {
    },
    ScriptProcessorNode: function ScriptProcessorNode() {
    },
    StereoPannerNode: function StereoPannerNode() {
    },
    WaveShaperNode: function WaveShaperNode() {
    },
    _AudioParamMap_Interceptor_MapMixin: function _AudioParamMap_Interceptor_MapMixin() {
    },
    ActiveInfo: function ActiveInfo() {
    },
    AngleInstancedArrays: function AngleInstancedArrays() {
    },
    Buffer: function Buffer() {
    },
    Canvas: function Canvas() {
    },
    ColorBufferFloat: function ColorBufferFloat() {
    },
    CompressedTextureAstc: function CompressedTextureAstc() {
    },
    CompressedTextureAtc: function CompressedTextureAtc() {
    },
    CompressedTextureETC1: function CompressedTextureETC1() {
    },
    CompressedTextureEtc: function CompressedTextureEtc() {
    },
    CompressedTexturePvrtc: function CompressedTexturePvrtc() {
    },
    CompressedTextureS3TC: function CompressedTextureS3TC() {
    },
    CompressedTextureS3TCsRgb: function CompressedTextureS3TCsRgb() {
    },
    ContextEvent: function ContextEvent() {
    },
    DebugRendererInfo: function DebugRendererInfo() {
    },
    DebugShaders: function DebugShaders() {
    },
    DepthTexture: function DepthTexture() {
    },
    DrawBuffers: function DrawBuffers() {
    },
    EXTsRgb: function EXTsRgb() {
    },
    ExtBlendMinMax: function ExtBlendMinMax() {
    },
    ExtColorBufferFloat: function ExtColorBufferFloat() {
    },
    ExtColorBufferHalfFloat: function ExtColorBufferHalfFloat() {
    },
    ExtDisjointTimerQuery: function ExtDisjointTimerQuery() {
    },
    ExtDisjointTimerQueryWebGL2: function ExtDisjointTimerQueryWebGL2() {
    },
    ExtFragDepth: function ExtFragDepth() {
    },
    ExtShaderTextureLod: function ExtShaderTextureLod() {
    },
    ExtTextureFilterAnisotropic: function ExtTextureFilterAnisotropic() {
    },
    Framebuffer: function Framebuffer() {
    },
    GetBufferSubDataAsync: function GetBufferSubDataAsync() {
    },
    LoseContext: function LoseContext() {
    },
    OesElementIndexUint: function OesElementIndexUint() {
    },
    OesStandardDerivatives: function OesStandardDerivatives() {
    },
    OesTextureFloat: function OesTextureFloat() {
    },
    OesTextureFloatLinear: function OesTextureFloatLinear() {
    },
    OesTextureHalfFloat: function OesTextureHalfFloat() {
    },
    OesTextureHalfFloatLinear: function OesTextureHalfFloatLinear() {
    },
    OesVertexArrayObject: function OesVertexArrayObject() {
    },
    Program: function Program() {
    },
    Query: function Query() {
    },
    Renderbuffer: function Renderbuffer() {
    },
    RenderingContext: function RenderingContext() {
    },
    RenderingContext2: function RenderingContext2() {
    },
    Sampler: function Sampler() {
    },
    Shader: function Shader() {
    },
    ShaderPrecisionFormat: function ShaderPrecisionFormat() {
    },
    Sync: function Sync() {
    },
    Texture: function Texture() {
    },
    TimerQueryExt: function TimerQueryExt() {
    },
    TransformFeedback: function TransformFeedback() {
    },
    UniformLocation: function UniformLocation() {
    },
    VertexArrayObject: function VertexArrayObject() {
    },
    VertexArrayObjectOes: function VertexArrayObjectOes() {
    },
    WebGL: function WebGL() {
    },
    _WebGL2RenderingContextBase: function _WebGL2RenderingContextBase() {
    },
    _WebGLRenderingContextBase: function _WebGLRenderingContextBase() {
    },
    SqlDatabase: function SqlDatabase() {
    },
    SqlError: function SqlError() {
    },
    SqlResultSet: function SqlResultSet() {
    },
    SqlResultSetRowList: function SqlResultSetRowList() {
    },
    SqlTransaction: function SqlTransaction() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin: function _SqlResultSetRowList_Interceptor_ListMixin() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin: function _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  W = {
    document: function() {
      return document;
    },
    BRElement_BRElement: function() {
      return W.document().createElement("br");
    },
    ButtonElement_ButtonElement: function() {
      return W.document().createElement("button");
    },
    _ChildrenElementList$_wrap: function(element) {
      return new W._ChildrenElementList(element, element.children, []);
    },
    _ChildNodeListLazy$: function(_this) {
      return new W._ChildNodeListLazy(_this, []);
    },
    SpanElement_SpanElement: function() {
      return W.document().createElement("span");
    },
    _ElementEventStreamImpl$: function(target, eventType, useCapture, $T) {
      return new W._ElementEventStreamImpl(H.interceptedTypeCheck(target, "$isEventTarget"), H.stringTypeCheck(eventType), H.boolTypeCheck(useCapture), [$T]);
    },
    _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
      var t1 = onData == null ? null : W._wrapZone(new W._EventStreamSubscription_closure(onData), W.Event);
      t1 = new W._EventStreamSubscription(_target, _eventType, t1, _useCapture, [$T]);
      t1._EventStreamSubscription$4(_target, _eventType, onData, _useCapture, $T);
      return t1;
    },
    FixedSizeListIterator$: function(array, $T) {
      return new W.FixedSizeListIterator(array, J.get$length$asx(array), [$T]);
    },
    _wrapZone: function(callback, $T) {
      H.functionTypeCheck(callback, {func: 1, ret: -1, args: [$T]});
      if (H.boolConversionCheck(J.$eq$(P.Zone_current(), C.C__RootZone)))
        return callback;
      if (callback == null)
        return;
      return P.Zone_current().bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    querySelector: function(selectors) {
      H.stringTypeCheck(selectors);
      return J.querySelector$1$x(W.document(), selectors);
    },
    HtmlElement: function HtmlElement() {
    },
    AbortPaymentEvent: function AbortPaymentEvent() {
    },
    AbsoluteOrientationSensor: function AbsoluteOrientationSensor() {
    },
    AbstractWorker: function AbstractWorker() {
    },
    Accelerometer: function Accelerometer() {
    },
    AccessibleNode: function AccessibleNode() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AmbientLightSensor: function AmbientLightSensor() {
    },
    AnchorElement: function AnchorElement() {
    },
    Animation: function Animation() {
    },
    AnimationEffectReadOnly: function AnimationEffectReadOnly() {
    },
    AnimationEffectTiming: function AnimationEffectTiming() {
    },
    AnimationEffectTimingReadOnly: function AnimationEffectTimingReadOnly() {
    },
    AnimationEvent: function AnimationEvent() {
    },
    AnimationPlaybackEvent: function AnimationPlaybackEvent() {
    },
    AnimationTimeline: function AnimationTimeline() {
    },
    AnimationWorkletGlobalScope: function AnimationWorkletGlobalScope() {
    },
    ApplicationCache: function ApplicationCache() {
    },
    ApplicationCacheErrorEvent: function ApplicationCacheErrorEvent() {
    },
    AreaElement: function AreaElement() {
    },
    AudioElement: function AudioElement() {
    },
    AuthenticatorAssertionResponse: function AuthenticatorAssertionResponse() {
    },
    AuthenticatorAttestationResponse: function AuthenticatorAttestationResponse() {
    },
    AuthenticatorResponse: function AuthenticatorResponse() {
    },
    BRElement: function BRElement() {
    },
    BackgroundFetchClickEvent: function BackgroundFetchClickEvent() {
    },
    BackgroundFetchEvent: function BackgroundFetchEvent() {
    },
    BackgroundFetchFailEvent: function BackgroundFetchFailEvent() {
    },
    BackgroundFetchFetch: function BackgroundFetchFetch() {
    },
    BackgroundFetchManager: function BackgroundFetchManager() {
    },
    BackgroundFetchRegistration: function BackgroundFetchRegistration() {
    },
    BackgroundFetchSettledFetch: function BackgroundFetchSettledFetch() {
    },
    BackgroundFetchedEvent: function BackgroundFetchedEvent() {
    },
    BarProp: function BarProp() {
    },
    BarcodeDetector: function BarcodeDetector() {
    },
    BaseElement: function BaseElement() {
    },
    BatteryManager: function BatteryManager() {
    },
    BeforeInstallPromptEvent: function BeforeInstallPromptEvent() {
    },
    BeforeUnloadEvent: function BeforeUnloadEvent() {
    },
    Blob: function Blob() {
    },
    BlobEvent: function BlobEvent() {
    },
    BluetoothRemoteGattDescriptor: function BluetoothRemoteGattDescriptor() {
    },
    Body: function Body() {
    },
    BodyElement: function BodyElement() {
    },
    BroadcastChannel: function BroadcastChannel() {
    },
    BudgetState: function BudgetState() {
    },
    ButtonElement: function ButtonElement() {
    },
    CDataSection: function CDataSection() {
    },
    CacheStorage: function CacheStorage() {
    },
    CanMakePaymentEvent: function CanMakePaymentEvent() {
    },
    CanvasCaptureMediaStreamTrack: function CanvasCaptureMediaStreamTrack() {
    },
    CanvasElement: function CanvasElement() {
    },
    CanvasGradient: function CanvasGradient() {
    },
    CanvasPattern: function CanvasPattern() {
    },
    CanvasRenderingContext: function CanvasRenderingContext() {
    },
    CanvasRenderingContext2D: function CanvasRenderingContext2D() {
    },
    CharacterData: function CharacterData() {
    },
    ChildNode: function ChildNode() {
    },
    Client: function Client() {
    },
    Clients: function Clients() {
    },
    ClipboardEvent: function ClipboardEvent() {
    },
    CloseEvent: function CloseEvent() {
    },
    Comment: function Comment() {
    },
    CompositionEvent: function CompositionEvent() {
    },
    ContentElement: function ContentElement() {
    },
    CookieStore: function CookieStore() {
    },
    Coordinates: function Coordinates() {
    },
    Credential: function Credential() {
    },
    CredentialUserData: function CredentialUserData() {
    },
    CredentialsContainer: function CredentialsContainer() {
    },
    Crypto: function Crypto() {
    },
    CryptoKey: function CryptoKey() {
    },
    Css: function Css() {
    },
    CssCharsetRule: function CssCharsetRule() {
    },
    CssConditionRule: function CssConditionRule() {
    },
    CssFontFaceRule: function CssFontFaceRule() {
    },
    CssGroupingRule: function CssGroupingRule() {
    },
    CssImageValue: function CssImageValue() {
    },
    CssImportRule: function CssImportRule() {
    },
    CssKeyframeRule: function CssKeyframeRule() {
    },
    CssKeyframesRule: function CssKeyframesRule() {
    },
    CssKeywordValue: function CssKeywordValue() {
    },
    CssMatrixComponent: function CssMatrixComponent() {
    },
    CssMediaRule: function CssMediaRule() {
    },
    CssNamespaceRule: function CssNamespaceRule() {
    },
    CssNumericValue: function CssNumericValue() {
    },
    CssPageRule: function CssPageRule() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssPositionValue: function CssPositionValue() {
    },
    CssResourceValue: function CssResourceValue() {
    },
    CssRotation: function CssRotation() {
    },
    CssRule: function CssRule() {
    },
    CssScale: function CssScale() {
    },
    CssSkew: function CssSkew() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    _CssStyleDeclarationSet: function _CssStyleDeclarationSet() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleRule: function CssStyleRule() {
    },
    CssStyleSheet: function CssStyleSheet() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssSupportsRule: function CssSupportsRule() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssTranslation: function CssTranslation() {
    },
    CssUnitValue: function CssUnitValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    CssVariableReferenceValue: function CssVariableReferenceValue() {
    },
    CssViewportRule: function CssViewportRule() {
    },
    CssurlImageValue: function CssurlImageValue() {
    },
    CustomElementRegistry: function CustomElementRegistry() {
    },
    CustomEvent: function CustomEvent() {
    },
    DListElement: function DListElement() {
    },
    DataElement: function DataElement() {
    },
    DataListElement: function DataListElement() {
    },
    DataTransfer: function DataTransfer() {
    },
    DataTransferItem: function DataTransferItem() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DedicatedWorkerGlobalScope: function DedicatedWorkerGlobalScope() {
    },
    DeprecatedStorageInfo: function DeprecatedStorageInfo() {
    },
    DeprecatedStorageQuota: function DeprecatedStorageQuota() {
    },
    DeprecationReport: function DeprecationReport() {
    },
    DetailsElement: function DetailsElement() {
    },
    DetectedBarcode: function DetectedBarcode() {
    },
    DetectedFace: function DetectedFace() {
    },
    DetectedText: function DetectedText() {
    },
    DeviceAcceleration: function DeviceAcceleration() {
    },
    DeviceMotionEvent: function DeviceMotionEvent() {
    },
    DeviceOrientationEvent: function DeviceOrientationEvent() {
    },
    DeviceRotationRate: function DeviceRotationRate() {
    },
    DialogElement: function DialogElement() {
    },
    DirectoryEntry: function DirectoryEntry() {
    },
    DirectoryReader: function DirectoryReader() {
    },
    DivElement: function DivElement() {
    },
    Document: function Document() {
    },
    DocumentFragment: function DocumentFragment() {
    },
    DocumentOrShadowRoot: function DocumentOrShadowRoot() {
    },
    DocumentTimeline: function DocumentTimeline() {
    },
    DomError: function DomError() {
    },
    DomException: function DomException() {
    },
    DomImplementation: function DomImplementation() {
    },
    DomIterator: function DomIterator() {
    },
    DomMatrix: function DomMatrix() {
    },
    DomMatrixReadOnly: function DomMatrixReadOnly() {
    },
    DomParser: function DomParser() {
    },
    DomPoint: function DomPoint() {
    },
    DomPointReadOnly: function DomPointReadOnly() {
    },
    DomQuad: function DomQuad() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    DomStringList: function DomStringList() {
    },
    DomStringMap: function DomStringMap() {
    },
    DomTokenList: function DomTokenList() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1, t2) {
      this._element = t0;
      this._childElements = t1;
      this.$ti = t2;
    },
    ElementList: function ElementList() {
    },
    _FrozenElementList: function _FrozenElementList() {
    },
    Element: function Element() {
    },
    _ElementFactoryProvider: function _ElementFactoryProvider() {
    },
    ScrollAlignment: function ScrollAlignment() {
    },
    EmbedElement: function EmbedElement() {
    },
    Entry: function Entry() {
    },
    ErrorEvent: function ErrorEvent() {
    },
    Event: function Event() {
    },
    EventSource: function EventSource() {
    },
    Events: function Events() {
    },
    ElementEvents: function ElementEvents() {
    },
    EventTarget: function EventTarget() {
    },
    ExtendableEvent: function ExtendableEvent() {
    },
    ExtendableMessageEvent: function ExtendableMessageEvent() {
    },
    External: function External() {
    },
    FaceDetector: function FaceDetector() {
    },
    FederatedCredential: function FederatedCredential() {
    },
    FetchEvent: function FetchEvent() {
    },
    FieldSetElement: function FieldSetElement() {
    },
    File: function File() {
    },
    FileEntry: function FileEntry() {
    },
    FileList: function FileList() {
    },
    FileReader: function FileReader() {
    },
    FileSystem: function FileSystem() {
    },
    FileWriter: function FileWriter() {
    },
    FocusEvent: function FocusEvent() {
    },
    FontFace: function FontFace() {
    },
    FontFaceSet: function FontFaceSet() {
    },
    FontFaceSetLoadEvent: function FontFaceSetLoadEvent() {
    },
    FontFaceSource: function FontFaceSource() {
    },
    ForeignFetchEvent: function ForeignFetchEvent() {
    },
    FormData: function FormData() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    GamepadButton: function GamepadButton() {
    },
    GamepadEvent: function GamepadEvent() {
    },
    GamepadPose: function GamepadPose() {
    },
    Geolocation: function Geolocation() {
    },
    _GeopositionWrapper: function _GeopositionWrapper() {
    },
    Geoposition: function Geoposition() {
    },
    GlobalEventHandlers: function GlobalEventHandlers() {
    },
    Gyroscope: function Gyroscope() {
    },
    HRElement: function HRElement() {
    },
    HashChangeEvent: function HashChangeEvent() {
    },
    HeadElement: function HeadElement() {
    },
    Headers: function Headers() {
    },
    HeadingElement: function HeadingElement() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HtmlDocument: function HtmlDocument() {
    },
    HtmlFormControlsCollection: function HtmlFormControlsCollection() {
    },
    HtmlHtmlElement: function HtmlHtmlElement() {
    },
    HtmlHyperlinkElementUtils: function HtmlHyperlinkElementUtils() {
    },
    HtmlOptionsCollection: function HtmlOptionsCollection() {
    },
    HttpRequest0: function HttpRequest0() {
    },
    HttpRequestEventTarget: function HttpRequestEventTarget() {
    },
    HttpRequestUpload: function HttpRequestUpload() {
    },
    IFrameElement: function IFrameElement() {
    },
    IdleDeadline: function IdleDeadline() {
    },
    ImageBitmap: function ImageBitmap() {
    },
    ImageBitmapRenderingContext: function ImageBitmapRenderingContext() {
    },
    ImageCapture: function ImageCapture() {
    },
    ImageData: function ImageData() {
    },
    ImageElement: function ImageElement() {
    },
    InputDeviceCapabilities: function InputDeviceCapabilities() {
    },
    InputElement: function InputElement() {
    },
    InputElementBase: function InputElementBase() {
    },
    HiddenInputElement: function HiddenInputElement() {
    },
    TextInputElementBase: function TextInputElementBase() {
    },
    SearchInputElement: function SearchInputElement() {
    },
    TextInputElement: function TextInputElement() {
    },
    UrlInputElement: function UrlInputElement() {
    },
    TelephoneInputElement: function TelephoneInputElement() {
    },
    EmailInputElement: function EmailInputElement() {
    },
    PasswordInputElement: function PasswordInputElement() {
    },
    RangeInputElementBase: function RangeInputElementBase() {
    },
    DateInputElement: function DateInputElement() {
    },
    MonthInputElement: function MonthInputElement() {
    },
    WeekInputElement: function WeekInputElement() {
    },
    TimeInputElement: function TimeInputElement() {
    },
    LocalDateTimeInputElement: function LocalDateTimeInputElement() {
    },
    NumberInputElement: function NumberInputElement() {
    },
    RangeInputElement: function RangeInputElement() {
    },
    CheckboxInputElement: function CheckboxInputElement() {
    },
    RadioButtonInputElement: function RadioButtonInputElement() {
    },
    FileUploadInputElement: function FileUploadInputElement() {
    },
    SubmitButtonInputElement: function SubmitButtonInputElement() {
    },
    ImageButtonInputElement: function ImageButtonInputElement() {
    },
    ResetButtonInputElement: function ResetButtonInputElement() {
    },
    ButtonInputElement: function ButtonInputElement() {
    },
    InstallEvent: function InstallEvent() {
    },
    IntersectionObserver: function IntersectionObserver() {
    },
    IntersectionObserverEntry: function IntersectionObserverEntry() {
    },
    InterventionReport: function InterventionReport() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    KeyframeEffect: function KeyframeEffect() {
    },
    KeyframeEffectReadOnly: function KeyframeEffectReadOnly() {
    },
    LIElement: function LIElement() {
    },
    LabelElement: function LabelElement() {
    },
    LegendElement: function LegendElement() {
    },
    LinearAccelerationSensor: function LinearAccelerationSensor() {
    },
    LinkElement: function LinkElement() {
    },
    Location: function Location() {
    },
    Magnetometer: function Magnetometer() {
    },
    MapElement: function MapElement() {
    },
    MediaCapabilities: function MediaCapabilities() {
    },
    MediaCapabilitiesInfo: function MediaCapabilitiesInfo() {
    },
    MediaDeviceInfo: function MediaDeviceInfo() {
    },
    MediaDevices: function MediaDevices() {
    },
    MediaElement: function MediaElement() {
    },
    MediaEncryptedEvent: function MediaEncryptedEvent() {
    },
    MediaError: function MediaError() {
    },
    MediaKeyMessageEvent: function MediaKeyMessageEvent() {
    },
    MediaKeySession: function MediaKeySession() {
    },
    MediaKeyStatusMap: function MediaKeyStatusMap() {
    },
    MediaKeySystemAccess: function MediaKeySystemAccess() {
    },
    MediaKeys: function MediaKeys() {
    },
    MediaKeysPolicy: function MediaKeysPolicy() {
    },
    MediaList: function MediaList() {
    },
    MediaMetadata: function MediaMetadata() {
    },
    MediaQueryList: function MediaQueryList() {
    },
    MediaQueryListEvent: function MediaQueryListEvent() {
    },
    MediaRecorder: function MediaRecorder() {
    },
    MediaSession: function MediaSession() {
    },
    MediaSettingsRange: function MediaSettingsRange() {
    },
    MediaSource: function MediaSource() {
    },
    MediaStream: function MediaStream() {
    },
    MediaStreamEvent: function MediaStreamEvent() {
    },
    MediaStreamTrack: function MediaStreamTrack() {
    },
    MediaStreamTrackEvent: function MediaStreamTrackEvent() {
    },
    MemoryInfo0: function MemoryInfo0() {
    },
    MenuElement: function MenuElement() {
    },
    MessageChannel: function MessageChannel() {
    },
    MessageEvent: function MessageEvent() {
    },
    MessagePort: function MessagePort() {
    },
    MetaElement: function MetaElement() {
    },
    Metadata: function Metadata() {
    },
    MeterElement: function MeterElement() {
    },
    MidiAccess: function MidiAccess() {
    },
    MidiConnectionEvent: function MidiConnectionEvent() {
    },
    MidiInput: function MidiInput() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiMessageEvent: function MidiMessageEvent() {
    },
    MidiOutput: function MidiOutput() {
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiPort: function MidiPort() {
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    ModElement: function ModElement() {
    },
    MouseEvent: function MouseEvent() {
    },
    MutationEvent: function MutationEvent() {
    },
    MutationObserver: function MutationObserver() {
    },
    MutationRecord: function MutationRecord() {
    },
    NavigationPreloadManager: function NavigationPreloadManager() {
    },
    Navigator: function Navigator() {
    },
    NavigatorAutomationInformation: function NavigatorAutomationInformation() {
    },
    NavigatorConcurrentHardware: function NavigatorConcurrentHardware() {
    },
    NavigatorCookies: function NavigatorCookies() {
    },
    NavigatorID: function NavigatorID() {
    },
    NavigatorLanguage: function NavigatorLanguage() {
    },
    NavigatorOnLine: function NavigatorOnLine() {
    },
    NavigatorUserMediaError: function NavigatorUserMediaError() {
    },
    NetworkInformation: function NetworkInformation() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0, t1) {
      this._this = t0;
      this.$ti = t1;
    },
    Node: function Node() {
    },
    NodeFilter: function NodeFilter() {
    },
    NodeIterator: function NodeIterator() {
    },
    NodeList: function NodeList() {
    },
    NonDocumentTypeChildNode: function NonDocumentTypeChildNode() {
    },
    NonElementParentNode: function NonElementParentNode() {
    },
    NoncedElement: function NoncedElement() {
    },
    Notification: function Notification() {
    },
    NotificationEvent: function NotificationEvent() {
    },
    OListElement: function OListElement() {
    },
    ObjectElement: function ObjectElement() {
    },
    OffscreenCanvas: function OffscreenCanvas() {
    },
    OffscreenCanvasRenderingContext2D: function OffscreenCanvasRenderingContext2D() {
    },
    OptGroupElement: function OptGroupElement() {
    },
    OptionElement: function OptionElement() {
    },
    OrientationSensor: function OrientationSensor() {
    },
    OutputElement: function OutputElement() {
    },
    OverconstrainedError: function OverconstrainedError() {
    },
    PageTransitionEvent: function PageTransitionEvent() {
    },
    PaintRenderingContext2D: function PaintRenderingContext2D() {
    },
    PaintSize: function PaintSize() {
    },
    PaintWorkletGlobalScope: function PaintWorkletGlobalScope() {
    },
    ParagraphElement: function ParagraphElement() {
    },
    ParamElement: function ParamElement() {
    },
    ParentNode: function ParentNode() {
    },
    PasswordCredential: function PasswordCredential() {
    },
    Path2D: function Path2D() {
    },
    PaymentAddress: function PaymentAddress() {
    },
    PaymentInstruments: function PaymentInstruments() {
    },
    PaymentManager: function PaymentManager() {
    },
    PaymentRequest: function PaymentRequest() {
    },
    PaymentRequestEvent: function PaymentRequestEvent() {
    },
    PaymentRequestUpdateEvent: function PaymentRequestUpdateEvent() {
    },
    PaymentResponse: function PaymentResponse() {
    },
    Performance: function Performance() {
    },
    PerformanceEntry: function PerformanceEntry() {
    },
    PerformanceLongTaskTiming: function PerformanceLongTaskTiming() {
    },
    PerformanceMark: function PerformanceMark() {
    },
    PerformanceMeasure: function PerformanceMeasure() {
    },
    PerformanceNavigation: function PerformanceNavigation() {
    },
    PerformanceNavigationTiming: function PerformanceNavigationTiming() {
    },
    PerformanceObserver: function PerformanceObserver() {
    },
    PerformanceObserverEntryList: function PerformanceObserverEntryList() {
    },
    PerformancePaintTiming: function PerformancePaintTiming() {
    },
    PerformanceResourceTiming: function PerformanceResourceTiming() {
    },
    PerformanceServerTiming: function PerformanceServerTiming() {
    },
    PerformanceTiming: function PerformanceTiming() {
    },
    PermissionStatus: function PermissionStatus() {
    },
    Permissions0: function Permissions0() {
    },
    PhotoCapabilities: function PhotoCapabilities() {
    },
    PictureElement: function PictureElement() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    PointerEvent: function PointerEvent() {
    },
    PopStateEvent: function PopStateEvent() {
    },
    PositionError: function PositionError() {
    },
    PreElement: function PreElement() {
    },
    Presentation: function Presentation() {
    },
    PresentationAvailability: function PresentationAvailability() {
    },
    PresentationConnection: function PresentationConnection() {
    },
    PresentationConnectionAvailableEvent: function PresentationConnectionAvailableEvent() {
    },
    PresentationConnectionCloseEvent: function PresentationConnectionCloseEvent() {
    },
    PresentationConnectionList: function PresentationConnectionList() {
    },
    PresentationReceiver: function PresentationReceiver() {
    },
    PresentationRequest: function PresentationRequest() {
    },
    ProcessingInstruction: function ProcessingInstruction() {
    },
    ProgressElement: function ProgressElement() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    PromiseRejectionEvent: function PromiseRejectionEvent() {
    },
    PublicKeyCredential: function PublicKeyCredential() {
    },
    PushEvent: function PushEvent() {
    },
    PushManager: function PushManager() {
    },
    PushMessageData: function PushMessageData() {
    },
    PushSubscription: function PushSubscription() {
    },
    PushSubscriptionOptions: function PushSubscriptionOptions() {
    },
    QuoteElement: function QuoteElement() {
    },
    Range: function Range() {
    },
    RelatedApplication: function RelatedApplication() {
    },
    RelativeOrientationSensor: function RelativeOrientationSensor() {
    },
    RemotePlayback: function RemotePlayback() {
    },
    ReportBody: function ReportBody() {
    },
    ReportingObserver: function ReportingObserver() {
    },
    ResizeObserver: function ResizeObserver() {
    },
    ResizeObserverEntry: function ResizeObserverEntry() {
    },
    RtcCertificate: function RtcCertificate() {
    },
    RtcDataChannel: function RtcDataChannel() {
    },
    RtcDataChannelEvent: function RtcDataChannelEvent() {
    },
    RtcDtmfSender: function RtcDtmfSender() {
    },
    RtcDtmfToneChangeEvent: function RtcDtmfToneChangeEvent() {
    },
    RtcIceCandidate: function RtcIceCandidate() {
    },
    RtcLegacyStatsReport: function RtcLegacyStatsReport() {
    },
    RtcPeerConnection: function RtcPeerConnection() {
    },
    RtcPeerConnectionIceEvent: function RtcPeerConnectionIceEvent() {
    },
    RtcRtpContributingSource: function RtcRtpContributingSource() {
    },
    RtcRtpReceiver: function RtcRtpReceiver() {
    },
    RtcRtpSender: function RtcRtpSender() {
    },
    RtcSessionDescription: function RtcSessionDescription() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsResponse: function RtcStatsResponse() {
    },
    RtcTrackEvent: function RtcTrackEvent() {
    },
    Screen: function Screen() {
    },
    ScreenOrientation: function ScreenOrientation() {
    },
    ScriptElement: function ScriptElement() {
    },
    ScrollState: function ScrollState() {
    },
    ScrollTimeline: function ScrollTimeline() {
    },
    SecurityPolicyViolationEvent: function SecurityPolicyViolationEvent() {
    },
    SelectElement: function SelectElement() {
    },
    Selection: function Selection() {
    },
    Sensor: function Sensor() {
    },
    SensorErrorEvent: function SensorErrorEvent() {
    },
    ServiceWorker: function ServiceWorker() {
    },
    ServiceWorkerContainer: function ServiceWorkerContainer() {
    },
    ServiceWorkerGlobalScope: function ServiceWorkerGlobalScope() {
    },
    ServiceWorkerRegistration: function ServiceWorkerRegistration() {
    },
    ShadowElement: function ShadowElement() {
    },
    ShadowRoot: function ShadowRoot() {
    },
    SharedArrayBuffer: function SharedArrayBuffer() {
    },
    SharedWorker: function SharedWorker() {
    },
    SharedWorkerGlobalScope: function SharedWorkerGlobalScope() {
    },
    SlotElement: function SlotElement() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SourceElement: function SourceElement() {
    },
    SpanElement: function SpanElement() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognition: function SpeechRecognition() {
    },
    SpeechRecognitionAlternative: function SpeechRecognitionAlternative() {
    },
    SpeechRecognitionError: function SpeechRecognitionError() {
    },
    SpeechRecognitionEvent: function SpeechRecognitionEvent() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    SpeechSynthesis: function SpeechSynthesis() {
    },
    SpeechSynthesisEvent: function SpeechSynthesisEvent() {
    },
    SpeechSynthesisUtterance: function SpeechSynthesisUtterance() {
    },
    SpeechSynthesisVoice: function SpeechSynthesisVoice() {
    },
    StaticRange: function StaticRange() {
    },
    Storage: function Storage() {
    },
    StorageEvent: function StorageEvent() {
    },
    StorageManager: function StorageManager() {
    },
    StyleElement: function StyleElement() {
    },
    StyleMedia: function StyleMedia() {
    },
    StylePropertyMap: function StylePropertyMap() {
    },
    StylePropertyMapReadonly: function StylePropertyMapReadonly() {
    },
    StyleSheet: function StyleSheet() {
    },
    SyncEvent: function SyncEvent() {
    },
    SyncManager: function SyncManager() {
    },
    TableCaptionElement: function TableCaptionElement() {
    },
    TableCellElement: function TableCellElement() {
    },
    TableColElement: function TableColElement() {
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TableSectionElement: function TableSectionElement() {
    },
    TaskAttributionTiming: function TaskAttributionTiming() {
    },
    TemplateElement: function TemplateElement() {
    },
    Text: function Text() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    TextDetector: function TextDetector() {
    },
    TextEvent: function TextEvent() {
    },
    TextMetrics: function TextMetrics() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeElement: function TimeElement() {
    },
    TimeRanges: function TimeRanges() {
    },
    TitleElement: function TitleElement() {
    },
    Touch: function Touch() {
    },
    TouchEvent: function TouchEvent() {
    },
    TouchList: function TouchList() {
    },
    TrackDefault: function TrackDefault() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    TrackElement: function TrackElement() {
    },
    TrackEvent: function TrackEvent() {
    },
    TransitionEvent: function TransitionEvent() {
    },
    TreeWalker: function TreeWalker() {
    },
    TrustedHtml: function TrustedHtml() {
    },
    TrustedScriptUrl: function TrustedScriptUrl() {
    },
    TrustedUrl: function TrustedUrl() {
    },
    UIEvent: function UIEvent() {
    },
    UListElement: function UListElement() {
    },
    UnderlyingSourceBase: function UnderlyingSourceBase() {
    },
    UnknownElement: function UnknownElement() {
    },
    Url: function Url() {
    },
    UrlSearchParams: function UrlSearchParams() {
    },
    UrlUtilsReadOnly: function UrlUtilsReadOnly() {
    },
    VR: function VR() {
    },
    VRCoordinateSystem: function VRCoordinateSystem() {
    },
    VRDevice: function VRDevice() {
    },
    VRDeviceEvent: function VRDeviceEvent() {
    },
    VRDisplay: function VRDisplay() {
    },
    VRDisplayCapabilities: function VRDisplayCapabilities() {
    },
    VRDisplayEvent: function VRDisplayEvent() {
    },
    VREyeParameters: function VREyeParameters() {
    },
    VRFrameData: function VRFrameData() {
    },
    VRFrameOfReference: function VRFrameOfReference() {
    },
    VRPose: function VRPose() {
    },
    VRSession: function VRSession() {
    },
    VRSessionEvent: function VRSessionEvent() {
    },
    VRStageBounds: function VRStageBounds() {
    },
    VRStageBoundsPoint: function VRStageBoundsPoint() {
    },
    VRStageParameters: function VRStageParameters() {
    },
    ValidityState: function ValidityState() {
    },
    VideoElement: function VideoElement() {
    },
    VideoPlaybackQuality: function VideoPlaybackQuality() {
    },
    VideoTrack: function VideoTrack() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    VisualViewport: function VisualViewport() {
    },
    VttCue: function VttCue() {
    },
    VttRegion: function VttRegion() {
    },
    WebSocket0: function WebSocket0() {
    },
    WheelEvent: function WheelEvent() {
    },
    Window: function Window() {
    },
    _BeforeUnloadEvent: function _BeforeUnloadEvent() {
    },
    _BeforeUnloadEventStreamProvider: function _BeforeUnloadEventStreamProvider() {
    },
    WindowBase64: function WindowBase64() {
    },
    WindowClient: function WindowClient() {
    },
    WindowEventHandlers: function WindowEventHandlers() {
    },
    Worker: function Worker() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    WorkerPerformance: function WorkerPerformance() {
    },
    WorkletAnimation: function WorkletAnimation() {
    },
    WorkletGlobalScope: function WorkletGlobalScope() {
    },
    XPathEvaluator: function XPathEvaluator() {
    },
    XPathExpression: function XPathExpression() {
    },
    XPathNSResolver: function XPathNSResolver() {
    },
    XPathResult: function XPathResult() {
    },
    XmlDocument: function XmlDocument() {
    },
    XmlSerializer: function XmlSerializer() {
    },
    XsltProcessor: function XsltProcessor() {
    },
    _Attr: function _Attr() {
    },
    _Bluetooth: function _Bluetooth() {
    },
    _BluetoothCharacteristicProperties: function _BluetoothCharacteristicProperties() {
    },
    _BluetoothDevice: function _BluetoothDevice() {
    },
    _BluetoothRemoteGATTCharacteristic: function _BluetoothRemoteGATTCharacteristic() {
    },
    _BluetoothRemoteGATTServer: function _BluetoothRemoteGATTServer() {
    },
    _BluetoothRemoteGATTService: function _BluetoothRemoteGATTService() {
    },
    _BluetoothUUID: function _BluetoothUUID() {
    },
    _BudgetService: function _BudgetService() {
    },
    _Cache: function _Cache() {
    },
    _CanvasPath: function _CanvasPath() {
    },
    _Clipboard: function _Clipboard() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DOMFileSystemSync: function _DOMFileSystemSync() {
    },
    _DirectoryEntrySync: function _DirectoryEntrySync() {
    },
    _DirectoryReaderSync: function _DirectoryReaderSync() {
    },
    _DocumentType: function _DocumentType() {
    },
    _DomRect: function _DomRect() {
    },
    _JenkinsSmiHash: function _JenkinsSmiHash() {
    },
    _EntrySync: function _EntrySync() {
    },
    _FileEntrySync: function _FileEntrySync() {
    },
    _FileReaderSync: function _FileReaderSync() {
    },
    _FileWriterSync: function _FileWriterSync() {
    },
    _GamepadList: function _GamepadList() {
    },
    _HTMLAllCollection: function _HTMLAllCollection() {
    },
    _HTMLDirectoryElement: function _HTMLDirectoryElement() {
    },
    _HTMLFontElement: function _HTMLFontElement() {
    },
    _HTMLFrameElement: function _HTMLFrameElement() {
    },
    _HTMLFrameSetElement: function _HTMLFrameSetElement() {
    },
    _HTMLMarqueeElement: function _HTMLMarqueeElement() {
    },
    _Mojo: function _Mojo() {
    },
    _MojoHandle: function _MojoHandle() {
    },
    _MojoInterfaceInterceptor: function _MojoInterfaceInterceptor() {
    },
    _MojoInterfaceRequestEvent: function _MojoInterfaceRequestEvent() {
    },
    _MojoWatcher: function _MojoWatcher() {
    },
    _NFC: function _NFC() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _PagePopupController: function _PagePopupController() {
    },
    _Report: function _Report() {
    },
    _Request: function _Request() {
    },
    _ResourceProgressEvent: function _ResourceProgressEvent() {
    },
    _Response: function _Response() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    _SubtleCrypto: function _SubtleCrypto() {
    },
    _USB: function _USB() {
    },
    _USBAlternateInterface: function _USBAlternateInterface() {
    },
    _USBConfiguration: function _USBConfiguration() {
    },
    _USBConnectionEvent: function _USBConnectionEvent() {
    },
    _USBDevice: function _USBDevice() {
    },
    _USBEndpoint: function _USBEndpoint() {
    },
    _USBInTransferResult: function _USBInTransferResult() {
    },
    _USBInterface: function _USBInterface() {
    },
    _USBIsochronousInTransferPacket: function _USBIsochronousInTransferPacket() {
    },
    _USBIsochronousInTransferResult: function _USBIsochronousInTransferResult() {
    },
    _USBIsochronousOutTransferPacket: function _USBIsochronousOutTransferPacket() {
    },
    _USBIsochronousOutTransferResult: function _USBIsochronousOutTransferResult() {
    },
    _USBOutTransferResult: function _USBOutTransferResult() {
    },
    _WindowTimers: function _WindowTimers() {
    },
    _WorkerLocation: function _WorkerLocation() {
    },
    _WorkerNavigator: function _WorkerNavigator() {
    },
    _Worklet: function _Worklet() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap() {
    },
    _NamespacedAttributeMap: function _NamespacedAttributeMap() {
    },
    _DataAttributeMap: function _DataAttributeMap() {
    },
    CanvasImageSource: function CanvasImageSource() {
    },
    WindowBase: function WindowBase() {
    },
    LocationBase: function LocationBase() {
    },
    HistoryBase: function HistoryBase() {
    },
    CssClassSet: function CssClassSet() {
    },
    _ContentCssRect: function _ContentCssRect() {
    },
    _ContentCssListRect: function _ContentCssListRect() {
    },
    _PaddingCssRect: function _PaddingCssRect() {
    },
    _BorderCssRect: function _BorderCssRect() {
    },
    _MarginCssRect: function _MarginCssRect() {
    },
    CssRect: function CssRect() {
    },
    _MultiElementCssClassSet: function _MultiElementCssClassSet() {
    },
    _ElementCssClassSet: function _ElementCssClassSet() {
    },
    Dimension: function Dimension() {
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    ElementStream: function ElementStream() {
    },
    _EventStream: function _EventStream() {
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementListEventStreamImpl: function _ElementListEventStreamImpl() {
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._html$_onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0, t1) {
      this.onData = t0;
      this.$ti = t1;
    },
    CustomStream: function CustomStream() {
    },
    _CustomEventStreamImpl: function _CustomEventStreamImpl() {
    },
    _CustomKeyEventStreamImpl: function _CustomKeyEventStreamImpl() {
    },
    _StreamPool: function _StreamPool() {
    },
    _CustomEventStreamProvider: function _CustomEventStreamProvider() {
    },
    _Html5NodeValidator: function _Html5NodeValidator() {
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    KeyCode: function KeyCode() {
    },
    KeyLocation: function KeyLocation() {
    },
    _KeyName: function _KeyName() {
    },
    _KeyboardEventHandler: function _KeyboardEventHandler() {
    },
    KeyboardEventStream: function KeyboardEventStream() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder() {
    },
    _SimpleNodeValidator: function _SimpleNodeValidator() {
    },
    _CustomElementNodeValidator: function _CustomElementNodeValidator() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator() {
    },
    _SvgNodeValidator: function _SvgNodeValidator() {
    },
    ReadyState: function ReadyState() {
    },
    _WrappedList: function _WrappedList() {
    },
    _WrappedIterator: function _WrappedIterator() {
    },
    _HttpRequestUtils: function _HttpRequestUtils() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._length = t1;
      _._position = -1;
      _._current = null;
      _.$ti = t2;
    },
    _VariableSizeListIterator: function _VariableSizeListIterator() {
    },
    Console: function Console() {
    },
    _JSElementUpgrader: function _JSElementUpgrader() {
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame() {
    },
    _LocationCrossFrame: function _LocationCrossFrame() {
    },
    _HistoryCrossFrame: function _HistoryCrossFrame() {
    },
    KeyEvent: function KeyEvent() {
    },
    Platform: function Platform() {
    },
    _WrappedEvent: function _WrappedEvent() {
    },
    ElementUpgrader: function ElementUpgrader() {
    },
    NodeValidator: function NodeValidator() {
    },
    NodeTreeSanitizer: function NodeTreeSanitizer() {
    },
    _TrustedHtmlTreeSanitizer: function _TrustedHtmlTreeSanitizer() {
    },
    UriPolicy: function UriPolicy() {
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy() {
    },
    _ThrowsNodeValidator: function _ThrowsNodeValidator() {
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer() {
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: function _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase() {
    },
    _DomRectList_Interceptor_ListMixin: function _DomRectList_Interceptor_ListMixin() {
    },
    _DomRectList_Interceptor_ListMixin_ImmutableListMixin: function _DomRectList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_Interceptor_ListMixin: function _DomStringList_Interceptor_ListMixin() {
    },
    _DomStringList_Interceptor_ListMixin_ImmutableListMixin: function _DomStringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _FileList_Interceptor_ListMixin: function _FileList_Interceptor_ListMixin() {
    },
    _FileList_Interceptor_ListMixin_ImmutableListMixin: function _FileList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin: function _HtmlCollection_Interceptor_ListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: function _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_Interceptor_MapMixin: function _MidiInputMap_Interceptor_MapMixin() {
    },
    _MidiOutputMap_Interceptor_MapMixin: function _MidiOutputMap_Interceptor_MapMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin: function _MimeTypeArray_Interceptor_ListMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin: function _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NodeList_Interceptor_ListMixin: function _NodeList_Interceptor_ListMixin() {
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: function _NodeList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_Interceptor_ListMixin: function _PluginArray_Interceptor_ListMixin() {
    },
    _PluginArray_Interceptor_ListMixin_ImmutableListMixin: function _PluginArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_Interceptor_MapMixin: function _RtcStatsReport_Interceptor_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin: function _SpeechGrammarList_Interceptor_ListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin: function _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _Storage_Interceptor_MapMixin: function _Storage_Interceptor_MapMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin: function _TextTrackCueList_Interceptor_ListMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin: function _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_Interceptor_ListMixin: function _TouchList_Interceptor_ListMixin() {
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: function _TouchList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin: function __CssRuleList_Interceptor_ListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin_ImmutableListMixin: function __CssRuleList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __CssStyleDeclarationSet_Object_CssStyleDeclarationBase: function __CssStyleDeclarationSet_Object_CssStyleDeclarationBase() {
    },
    __GamepadList_Interceptor_ListMixin: function __GamepadList_Interceptor_ListMixin() {
    },
    __GamepadList_Interceptor_ListMixin_ImmutableListMixin: function __GamepadList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin: function __NamedNodeMap_Interceptor_ListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: function __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin: function __StyleSheetList_Interceptor_ListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin: function __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  L = {
    ChromeAlarms$_: function() {
      var t1 = new L.ChromeAlarms([]);
      t1.ChromeAlarms$_$0();
      return t1;
    },
    Alarm$fromProxy: function(jsProxy) {
      return new L.Alarm(jsProxy, []);
    },
    AlarmCreateInfo$: function(periodInMinutes) {
      var t1 = new L.AlarmCreateInfo(P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Object"), "$isJsFunction"), null), []);
      t1.AlarmCreateInfo$3$delayInMinutes$periodInMinutes$when(null, periodInMinutes, null);
      return t1;
    },
    _createAlarm: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : L.Alarm$fromProxy(jsProxy);
    },
    ChromeAlarms: function ChromeAlarms(t0) {
      this._onAlarm = null;
      this.$ti = t0;
    },
    ChromeAlarms$__closure: function ChromeAlarms$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    Alarm: function Alarm(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    AlarmCreateInfo: function AlarmCreateInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromeBluetoothSocket: function ChromeBluetoothSocket() {
    },
    AcceptError: function AcceptError() {
    },
    BluetoothReceiveError: function BluetoothReceiveError() {
    },
    BluetoothSocketProperties: function BluetoothSocketProperties() {
    },
    BluetoothCreateInfo: function BluetoothCreateInfo() {
    },
    ListenOptions: function ListenOptions() {
    },
    BluetoothSocketInfo: function BluetoothSocketInfo() {
    },
    BluetoothAcceptInfo: function BluetoothAcceptInfo() {
    },
    BluetoothAcceptErrorInfo: function BluetoothAcceptErrorInfo() {
    },
    BluetoothReceiveInfo: function BluetoothReceiveInfo() {
    },
    BluetoothReceiveErrorInfo: function BluetoothReceiveErrorInfo() {
    },
    ChromeEvents: function ChromeEvents() {
    },
    Rule0: function Rule0() {
    },
    ChromeEvent: function ChromeEvent() {
    },
    UrlFilter: function UrlFilter() {
    }
  },
  B = {
    ChromeApp$_: function() {
      return new B.ChromeApp(B.ChromeAppRuntime$_(), B.ChromeAppWindow$_(), []);
    },
    ChromeAppRuntime$_: function() {
      var t1 = new B.ChromeAppRuntime([]);
      t1.ChromeAppRuntime$_$0();
      return t1;
    },
    LaunchData$fromProxy: function(jsProxy) {
      return new B.LaunchData(jsProxy, []);
    },
    EmbedRequest$fromProxy: function(jsProxy) {
      return new B.EmbedRequest(jsProxy, []);
    },
    _createEmbedRequest: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : B.EmbedRequest$fromProxy(jsProxy);
    },
    _createLaunchData: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : B.LaunchData$fromProxy(jsProxy);
    },
    CreateWindowOptions$: function(height, width) {
      var _null = null,
        t1 = new B.CreateWindowOptions(P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Object"), "$isJsFunction"), _null), []);
      t1.CreateWindowOptions$29$alphaEnabled$alwaysOnTop$bounds$defaultHeight$defaultLeft$defaultTop$defaultWidth$focused$frame$height$hidden$icon$id$ime$innerBounds$left$maxHeight$maxWidth$minHeight$minWidth$outerBounds$resizable$showInShelf$singleton$state$top$type$visibleOnAllWorkspaces$width(_null, _null, _null, _null, _null, _null, _null, _null, _null, height, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, width);
      return t1;
    },
    _createAppWindow: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : B.AppWindow$fromProxy(jsProxy);
    },
    ChromeAppWindow$_: function() {
      var t1 = new B.ChromeAppWindow([]);
      t1._ChromeAppWindow$_$0();
      return t1;
    },
    AppWindow$fromProxy: function(jsProxy) {
      return new B.AppWindow(P.LinkedHashMap_LinkedHashMap$_empty(P.String, [P.Stream,,]), jsProxy, []);
    },
    ChromeApp: function ChromeApp(t0, t1, t2) {
      this.runtime = t0;
      this.window = t1;
      this.$ti = t2;
    },
    ChromeAppRuntime: function ChromeAppRuntime(t0) {
      this.$ti = t0;
    },
    ChromeAppRuntime$__closure: function ChromeAppRuntime$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    LaunchSource: function LaunchSource() {
    },
    AppRuntimeActionType: function AppRuntimeActionType() {
    },
    PlayStoreStatus: function PlayStoreStatus() {
    },
    LaunchItem: function LaunchItem() {
    },
    ActionData: function ActionData() {
    },
    LaunchData: function LaunchData(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    EmbedRequest: function EmbedRequest(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    _ChromeAppWindow: function _ChromeAppWindow() {
    },
    _ChromeAppWindow$__closure: function _ChromeAppWindow$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    State: function State() {
    },
    WindowType: function WindowType() {
    },
    ContentBounds: function ContentBounds() {
    },
    BoundsSpecification: function BoundsSpecification() {
    },
    FrameOptions: function FrameOptions() {
    },
    CreateWindowOptions: function CreateWindowOptions(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    _AppWindow: function _AppWindow() {
    },
    ChromeAppWindow: function ChromeAppWindow(t0) {
      var _ = this;
      _._onRestored = _._onMinimized = _._onMaximized = _._onFullscreened = _._onClosed = null;
      _.$ti = t0;
    },
    AppWindow: function AppWindow(t0, t1, t2) {
      var _ = this;
      _._streamMap = t0;
      _._onClosedStream = null;
      _.jsProxy = t1;
      _.$ti = t2;
    },
    AppWindow_onClosed_closure: function AppWindow_onClosed_closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    AppWindow__streamFor_closure: function AppWindow__streamFor_closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    ChromeMediaGalleries: function ChromeMediaGalleries() {
    },
    GalleryChangeType: function GalleryChangeType() {
    },
    GetMediaFileSystemsInteractivity: function GetMediaFileSystemsInteractivity() {
    },
    GetMetadataType: function GetMetadataType() {
    },
    ScanProgressType: function ScanProgressType() {
    },
    GalleryChangeDetails: function GalleryChangeDetails() {
    },
    MediaFileSystemsDetails: function MediaFileSystemsDetails() {
    },
    MediaMetadataOptions: function MediaMetadataOptions() {
    },
    MediaFileSystemMetadata: function MediaFileSystemMetadata() {
    },
    ScanProgressDetails: function ScanProgressDetails() {
    },
    StreamInfo: function StreamInfo() {
    },
    MediaMetadata0: function MediaMetadata0() {
    },
    AddGalleryWatchResult: function AddGalleryWatchResult() {
    },
    AddUserSelectedFolderResult: function AddUserSelectedFolderResult() {
    },
    ChromeVpnProvider: function ChromeVpnProvider() {
    },
    OnPlatformMessageEvent: function OnPlatformMessageEvent() {
    },
    OnConfigCreatedEvent: function OnConfigCreatedEvent() {
    },
    OnUIEventEvent: function OnUIEventEvent() {
    },
    PlatformMessage: function PlatformMessage() {
    },
    VpnConnectionState: function VpnConnectionState() {
    },
    UIEvent0: function UIEvent0() {
    },
    Parameters: function Parameters() {
    }
  },
  Q = {
    ChromeAudio$_: function() {
      var t1 = new Q.ChromeAudio([]);
      t1.ChromeAudio$_$0();
      return t1;
    },
    OutputDeviceInfo$fromProxy: function(jsProxy) {
      return new Q.OutputDeviceInfo(jsProxy, []);
    },
    InputDeviceInfo$fromProxy: function(jsProxy) {
      return new Q.InputDeviceInfo(jsProxy, []);
    },
    AudioDeviceInfo$fromProxy: function(jsProxy) {
      return new Q.AudioDeviceInfo(jsProxy, []);
    },
    MuteChangedEvent$fromProxy: function(jsProxy) {
      return new Q.MuteChangedEvent(jsProxy, []);
    },
    LevelChangedEvent$fromProxy: function(jsProxy) {
      return new Q.LevelChangedEvent(jsProxy, []);
    },
    GetInfoResult__create: function(outputInfo, inputInfo) {
      return Q.GetInfoResult$_(H.assertSubtype(F.toList(H.interceptedTypeCheck(outputInfo, "$isJsObject"), Q.audio___createOutputDeviceInfo$closure()), "$isList", [Q.OutputDeviceInfo], "$asList"), H.assertSubtype(F.toList(H.interceptedTypeCheck(inputInfo, "$isJsObject"), Q.audio___createInputDeviceInfo$closure()), "$isList", [Q.InputDeviceInfo], "$asList"));
    },
    GetInfoResult$_: function(outputInfo, inputInfo) {
      return new Q.GetInfoResult(outputInfo, inputInfo, []);
    },
    _createLevelChangedEvent: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.LevelChangedEvent$fromProxy(jsProxy);
    },
    _createMuteChangedEvent: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.MuteChangedEvent$fromProxy(jsProxy);
    },
    _createAudioDeviceInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.AudioDeviceInfo$fromProxy(jsProxy);
    },
    _createOutputDeviceInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.OutputDeviceInfo$fromProxy(jsProxy);
    },
    _createInputDeviceInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.InputDeviceInfo$fromProxy(jsProxy);
    },
    ChromeAudio: function ChromeAudio(t0) {
      this.$ti = t0;
    },
    ChromeAudio$__closure: function ChromeAudio$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    ChromeAudio$__closure0: function ChromeAudio$__closure0(t0) {
      this.$ti = t0;
    },
    StreamType: function StreamType() {
    },
    DeviceType: function DeviceType() {
    },
    OutputDeviceInfo: function OutputDeviceInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    InputDeviceInfo: function InputDeviceInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    AudioDeviceInfo: function AudioDeviceInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    DeviceFilter: function DeviceFilter() {
    },
    DeviceProperties: function DeviceProperties() {
    },
    DeviceIdLists: function DeviceIdLists() {
    },
    MuteChangedEvent: function MuteChangedEvent(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    LevelChangedEvent: function LevelChangedEvent(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    GetInfoResult: function GetInfoResult(t0, t1, t2) {
      this.outputInfo = t0;
      this.inputInfo = t1;
      this.$ti = t2;
    },
    ChromeBluetooth$_: function() {
      var t1 = new Q.ChromeBluetooth([]);
      t1.ChromeBluetooth$_$0();
      return t1;
    },
    AdapterState$fromProxy: function(jsProxy) {
      return new Q.AdapterState(jsProxy, []);
    },
    BluetoothDevice$fromProxy: function(jsProxy) {
      return new Q.BluetoothDevice(jsProxy, []);
    },
    _createAdapterState: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.AdapterState$fromProxy(jsProxy);
    },
    _createDevice: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.BluetoothDevice$fromProxy(jsProxy);
    },
    ChromeBluetooth: function ChromeBluetooth(t0) {
      this.$ti = t0;
    },
    ChromeBluetooth$__closure: function ChromeBluetooth$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    VendorIdSource: function VendorIdSource() {
    },
    BluetoothDeviceType: function BluetoothDeviceType() {
    },
    AdapterState: function AdapterState(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    BluetoothDevice: function BluetoothDevice(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromeCommands: function ChromeCommands() {
    },
    Command: function Command() {
    },
    ChromeIdentity$_: function() {
      var t1 = new Q.ChromeIdentity([]);
      t1.ChromeIdentity$_$0();
      return t1;
    },
    OnSignInChangedEvent$: function(account, signedIn) {
      return new Q.OnSignInChangedEvent([]);
    },
    AccountInfo$fromProxy: function(jsProxy) {
      return new Q.AccountInfo(jsProxy, []);
    },
    _createOnSignInChangedEvent: function(account, signedIn) {
      H.interceptedTypeCheck(account, "$isJsObject");
      H.boolTypeCheck(signedIn);
      return Q.OnSignInChangedEvent$(Q._createAccountInfo(account), signedIn);
    },
    _createAccountInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.AccountInfo$fromProxy(jsProxy);
    },
    ChromeIdentity: function ChromeIdentity(t0) {
      this.$ti = t0;
    },
    ChromeIdentity$__closure: function ChromeIdentity$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    OnSignInChangedEvent: function OnSignInChangedEvent(t0) {
      this.$ti = t0;
    },
    AccountInfo: function AccountInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ProfileUserInfo: function ProfileUserInfo() {
    },
    TokenDetails: function TokenDetails() {
    },
    InvalidTokenDetails: function InvalidTokenDetails() {
    },
    WebAuthFlowDetails: function WebAuthFlowDetails() {
    },
    ChromeSystem$_: function() {
      return new Q.ChromeSystem(Q.ChromeSystemCpu$_(), Q.ChromeSystemDisplay$_(), Q.ChromeSystemMemory$_(), Q.ChromeSystemNetwork$_(), Q.ChromeSystemStorage$_(), []);
    },
    ChromeSystemCpu$_: function() {
      return new Q.ChromeSystemCpu([]);
    },
    CpuInfo$fromProxy: function(jsProxy) {
      return new Q.CpuInfo(jsProxy, []);
    },
    _createCpuInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.CpuInfo$fromProxy(jsProxy);
    },
    ChromeSystemDisplay$_: function() {
      var t1 = new Q.ChromeSystemDisplay([]);
      t1.ChromeSystemDisplay$_$0();
      return t1;
    },
    ChromeSystemMemory$_: function() {
      return new Q.ChromeSystemMemory([]);
    },
    MemoryInfo$fromProxy: function(jsProxy) {
      return new Q.MemoryInfo(jsProxy, []);
    },
    _createMemoryInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.MemoryInfo$fromProxy(jsProxy);
    },
    ChromeSystemNetwork$_: function() {
      return new Q.ChromeSystemNetwork([]);
    },
    ChromeSystemStorage$_: function() {
      var t1 = new Q.ChromeSystemStorage([]);
      t1.ChromeSystemStorage$_$0();
      return t1;
    },
    StorageUnitInfo$fromProxy: function(jsProxy) {
      return new Q.StorageUnitInfo(jsProxy, []);
    },
    _createStorageUnitInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : Q.StorageUnitInfo$fromProxy(jsProxy);
    },
    ChromeSystem: function ChromeSystem(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.cpu = t0;
      _.display = t1;
      _.memory = t2;
      _.network = t3;
      _.storage = t4;
      _.$ti = t5;
    },
    ChromeSystemCpu: function ChromeSystemCpu(t0) {
      this.$ti = t0;
    },
    CpuTime: function CpuTime() {
    },
    ProcessorInfo: function ProcessorInfo() {
    },
    CpuInfo: function CpuInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromeSystemDisplay: function ChromeSystemDisplay(t0) {
      this.$ti = t0;
    },
    ChromeSystemDisplay$__closure: function ChromeSystemDisplay$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    LayoutPosition: function LayoutPosition() {
    },
    MirrorMode: function MirrorMode() {
    },
    Insets: function Insets() {
    },
    Point1: function Point1() {
    },
    TouchCalibrationPair: function TouchCalibrationPair() {
    },
    TouchCalibrationPairQuad: function TouchCalibrationPairQuad() {
    },
    DisplayMode: function DisplayMode() {
    },
    DisplayLayout: function DisplayLayout() {
    },
    DisplayUnitInfo: function DisplayUnitInfo() {
    },
    DisplayProperties: function DisplayProperties() {
    },
    GetInfoFlags: function GetInfoFlags() {
    },
    MirrorModeInfo: function MirrorModeInfo() {
    },
    ChromeSystemMemory: function ChromeSystemMemory(t0) {
      this.$ti = t0;
    },
    MemoryInfo: function MemoryInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromeSystemNetwork: function ChromeSystemNetwork(t0) {
      this.$ti = t0;
    },
    NetworkInterface0: function NetworkInterface0() {
    },
    ChromeSystemStorage: function ChromeSystemStorage(t0) {
      this.$ti = t0;
    },
    ChromeSystemStorage$__closure: function ChromeSystemStorage$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    StorageUnitType: function StorageUnitType() {
    },
    EjectDeviceResultCode: function EjectDeviceResultCode() {
    },
    StorageUnitInfo: function StorageUnitInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    StorageAvailableCapacityInfo: function StorageAvailableCapacityInfo() {
    }
  },
  R = {ChromeBluetoothLowEnergy: function ChromeBluetoothLowEnergy() {
    }, OnCharacteristicReadRequestEvent: function OnCharacteristicReadRequestEvent() {
    }, OnCharacteristicWriteRequestEvent: function OnCharacteristicWriteRequestEvent() {
    }, OnDescriptorReadRequestEvent: function OnDescriptorReadRequestEvent() {
    }, OnDescriptorWriteRequestEvent: function OnDescriptorWriteRequestEvent() {
    }, CharacteristicProperty: function CharacteristicProperty() {
    }, DescriptorPermission: function DescriptorPermission() {
    }, AdvertisementType: function AdvertisementType() {
    }, Device0: function Device0() {
    }, Service0: function Service0() {
    }, Characteristic: function Characteristic() {
    }, Descriptor: function Descriptor() {
    }, ConnectProperties: function ConnectProperties() {
    }, NotificationProperties: function NotificationProperties() {
    }, ManufacturerData: function ManufacturerData() {
    }, ServiceData: function ServiceData() {
    }, Advertisement: function Advertisement() {
    }, Request0: function Request0() {
    }, Response: function Response() {
    }, Notification0: function Notification0() {
    },
    ChromeI18N$_: function() {
      return new R.ChromeI18N([]);
    },
    LanguageCode$fromProxy: function(jsProxy) {
      return new R.LanguageCode(jsProxy, []);
    },
    _createLanguageCode: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : R.LanguageCode$fromProxy(jsProxy);
    },
    ChromeI18N: function ChromeI18N(t0) {
      this.$ti = t0;
    },
    ChromeI18N_getAcceptLanguages_closure: function ChromeI18N_getAcceptLanguages_closure(t0) {
      this.$ti = t0;
    },
    LanguageCode: function LanguageCode(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromePrinterProvider: function ChromePrinterProvider() {
    },
    OnGetUsbPrinterInfoRequestedEvent: function OnGetUsbPrinterInfoRequestedEvent() {
    },
    OnGetCapabilityRequestedEvent: function OnGetCapabilityRequestedEvent() {
    },
    OnPrintRequestedEvent: function OnPrintRequestedEvent() {
    },
    PrintError: function PrintError() {
    },
    PrinterInfo: function PrinterInfo() {
    },
    PrintJob: function PrintJob() {
    }
  },
  K = {
    ChromeBrowser$_: function() {
      return new K.ChromeBrowser([]);
    },
    OpenTabOptions$: function(url) {
      var t1 = new K.OpenTabOptions(P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Object"), "$isJsFunction"), null), []);
      t1.OpenTabOptions$1$url(url);
      return t1;
    },
    ChromeBrowser: function ChromeBrowser(t0) {
      this.$ti = t0;
    },
    OpenTabOptions: function OpenTabOptions(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    }
  },
  F = {ChromeContextMenus: function ChromeContextMenus() {
    }, ContextType: function ContextType() {
    }, ItemType: function ItemType() {
    }, ContextMenusCreateParams: function ContextMenusCreateParams() {
    }, ContextMenusUpdateParams: function ContextMenusUpdateParams() {
    },
    lastError: function() {
      var error = H.interceptedTypeCheck(J.$index$asx($.$get$_runtime(), "lastError"), "$isJsObject");
      return H.stringTypeCheck(error != null ? error.$index(0, "message") : null);
    },
    toList: function(obj, transformer) {
      var t1, l, t2, i;
      H.interceptedTypeCheck(obj, "$isJsObject");
      H.interceptedTypeCheck(transformer, "$isFunction");
      if (obj == null)
        return;
      else {
        t1 = H.intTypeCheck(obj.$index(0, "length"));
        if (typeof t1 !== "number")
          return H.iae(t1);
        l = new Array(t1);
        l.fixed$length = Array;
        for (t2 = transformer != null, i = 0; i < t1; ++i)
          if (t2)
            C.JSArray_methods.$indexSet(l, i, transformer.call$1(obj.$index(0, i)));
          else
            C.JSArray_methods.$indexSet(l, i, obj.$index(0, i));
        return l;
      }
    },
    toMap: function(obj) {
      H.interceptedTypeCheck(obj, "$isJsObject");
      if (obj == null)
        return;
      return H.interceptedTypeCheck(P.jsonDecode(H.stringTypeCheck($.$get$_jsJSON().callMethod$2("stringify", [obj]))), "$isMap");
    },
    toJS: function(obj) {
      var t1, m, key;
      if (obj == null || typeof obj === "number" || typeof obj === "string")
        return obj;
      else {
        t1 = J.getInterceptor$(obj);
        if (!!t1.$isChromeObject)
          return obj.jsProxy;
        else if (!!t1.$isChromeEnum)
          return obj.value;
        else if (!!t1.$isMap) {
          m = P.LinkedHashMap__makeEmpty();
          for (t1 = J.get$iterator$ax(obj.get$keys()); H.boolConversionCheck(t1.moveNext$0());) {
            key = t1.get$current();
            m.$indexSet(0, key, F.toJS(obj.$index(0, key)));
          }
          return P.JsObject_JsObject$jsify(m);
        } else if (!!t1.$isIterable) {
          t1 = P.JsArray$from(obj, null);
          return t1.map$1$1(t1, F.common__toJS$closure(), null);
        } else
          return obj;
      }
    },
    selfConverter: function(obj) {
      return obj;
    },
    ChromeCompleter$noArgs: function($T) {
      var t1 = new F.ChromeCompleter(P.Completer_Completer($T), [$T]);
      t1.ChromeCompleter$noArgs$0($T);
      return t1;
    },
    ChromeCompleter$oneArg: function(transformer, $T) {
      var t1 = new F.ChromeCompleter(P.Completer_Completer($T), [$T]);
      t1.ChromeCompleter$oneArg$1(transformer, $T);
      return t1;
    },
    ChromeCompleter$twoArgs: function(transformer, $T) {
      var t1 = new F.ChromeCompleter(P.Completer_Completer($T), [$T]);
      t1.ChromeCompleter$twoArgs$1(transformer, $T);
      return t1;
    },
    ChromeStreamController$noArgs: function(_apiProvider, _eventName, $T) {
      var t1 = new F.ChromeStreamController(_apiProvider, _eventName, P.StreamController_StreamController$broadcast(null, null, false, $T), [$T]);
      t1.ChromeStreamController$noArgs$2(_apiProvider, _eventName, $T);
      return t1;
    },
    ChromeStreamController$oneArg: function(_apiProvider, _eventName, transformer, $T) {
      var t1 = new F.ChromeStreamController(_apiProvider, _eventName, P.StreamController_StreamController$broadcast(null, null, false, $T), [$T]);
      t1.ChromeStreamController$oneArg$4(_apiProvider, _eventName, transformer, null, $T);
      return t1;
    },
    ChromeStreamController$twoArgs: function(_apiProvider, _eventName, transformer, $T) {
      var t1 = new F.ChromeStreamController(_apiProvider, _eventName, P.StreamController_StreamController$broadcast(null, null, false, $T), [$T]);
      t1.ChromeStreamController$twoArgs$4(_apiProvider, _eventName, transformer, null, $T);
      return t1;
    },
    ChromeStreamController$threeArgs: function(_apiProvider, _eventName, transformer, $T) {
      var t1 = new F.ChromeStreamController(_apiProvider, _eventName, P.StreamController_StreamController$broadcast(null, null, false, $T), [$T]);
      t1.ChromeStreamController$threeArgs$4(_apiProvider, _eventName, transformer, null, $T);
      return t1;
    },
    ChromeCompleter: function ChromeCompleter(t0, t1) {
      this._completer = t0;
      this._callback = null;
      this.$ti = t1;
    },
    ChromeCompleter$noArgs_closure: function ChromeCompleter$noArgs_closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    ChromeCompleter$oneArg_closure: function ChromeCompleter$oneArg_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.transformer = t1;
      _.T = t2;
      _.$ti = t3;
    },
    ChromeCompleter$twoArgs_closure: function ChromeCompleter$twoArgs_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.transformer = t1;
      _.T = t2;
      _.$ti = t3;
    },
    ChromeStreamController: function ChromeStreamController(t0, t1, t2, t3) {
      var _ = this;
      _._apiProvider = t0;
      _._eventName = t1;
      _._controller = t2;
      _._handlerAdded = false;
      _._listener = null;
      _.$ti = t3;
    },
    ChromeStreamController$noArgs_closure: function ChromeStreamController$noArgs_closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    ChromeStreamController$oneArg_closure: function ChromeStreamController$oneArg_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.transformer = t1;
      _.returnVal = t2;
      _.T = t3;
      _.$ti = t4;
    },
    ChromeStreamController$twoArgs_closure: function ChromeStreamController$twoArgs_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.transformer = t1;
      _.returnVal = t2;
      _.T = t3;
      _.$ti = t4;
    },
    ChromeStreamController$threeArgs_closure: function ChromeStreamController$threeArgs_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.transformer = t1;
      _.returnVal = t2;
      _.T = t3;
      _.$ti = t4;
    }
  },
  A = {ChromeDocumentScan: function ChromeDocumentScan() {
    }, ScanOptions: function ScanOptions() {
    }, ScanResults: function ScanResults() {
    }, ChromeSockets: function ChromeSockets() {
    }, ChromeSocketsTcp: function ChromeSocketsTcp() {
    }, SocketProperties: function SocketProperties() {
    }, CreateInfo: function CreateInfo() {
    }, SendInfo: function SendInfo() {
    }, TLSVersionConstraints: function TLSVersionConstraints() {
    }, SecureOptions: function SecureOptions() {
    }, SocketInfo: function SocketInfo() {
    }, ReceiveInfo: function ReceiveInfo() {
    }, ReceiveErrorInfo: function ReceiveErrorInfo() {
    }, ChromeSocketsTcpServer: function ChromeSocketsTcpServer() {
    }, AcceptInfo: function AcceptInfo() {
    }, AcceptErrorInfo: function AcceptErrorInfo() {
    }, ChromeSocketsUdp: function ChromeSocketsUdp() {
    }},
  T = {ChromeExtensionTypes: function ChromeExtensionTypes() {
    }, ImageFormat: function ImageFormat() {
    }, RunAt: function RunAt() {
    }, CSSOrigin: function CSSOrigin() {
    }, ImageDetails: function ImageDetails() {
    }, InjectDetails: function InjectDetails() {
    }, ChromeGcm: function ChromeGcm() {
    }, GcmSendParams: function GcmSendParams() {
    },
    ChromeRuntime$_: function() {
      var t1 = new T.ChromeRuntime([]);
      t1.ChromeRuntime$_$0();
      return t1;
    },
    OnMessageEvent$: function(message, sender, sendResponse) {
      return new T.OnMessageEvent([]);
    },
    OnMessageExternalEvent$: function(message, sender, sendResponse) {
      return new T.OnMessageExternalEvent([]);
    },
    Port$fromProxy: function(jsProxy) {
      return new T.Port(jsProxy, []);
    },
    MessageSender$fromProxy: function(jsProxy) {
      return new T.MessageSender(jsProxy, []);
    },
    PlatformInfo$fromProxy: function(jsProxy) {
      return new T.PlatformInfo(jsProxy, []);
    },
    RequestUpdateCheckResult__create: function($status, details) {
      return T.RequestUpdateCheckResult$_(T._createRequestUpdateCheckStatus(H.stringTypeCheck($status)), F.toMap(H.interceptedTypeCheck(details, "$isJsObject")));
    },
    RequestUpdateCheckResult$_: function($status, details) {
      return new T.RequestUpdateCheckResult($status, details, []);
    },
    _createPort: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : T.Port$fromProxy(jsProxy);
    },
    _createOnMessageEvent: function(message, sender, sendResponse) {
      H.interceptedTypeCheck(message, "$isJsObject");
      H.interceptedTypeCheck(sender, "$isJsObject");
      H.interceptedTypeCheck(sendResponse, "$isJsObject");
      return T.OnMessageEvent$(message, T._createMessageSender(sender), sendResponse);
    },
    _createOnMessageExternalEvent: function(message, sender, sendResponse) {
      H.interceptedTypeCheck(message, "$isJsObject");
      H.interceptedTypeCheck(sender, "$isJsObject");
      H.interceptedTypeCheck(sendResponse, "$isJsObject");
      return T.OnMessageExternalEvent$(message, T._createMessageSender(sender), sendResponse);
    },
    _createOnRestartRequiredReason: function(value) {
      return C.JSArray_methods.singleWhere$1(C.List_ZhK, new T._createOnRestartRequiredReason_closure(H.stringTypeCheck(value)));
    },
    _createPlatformInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : T.PlatformInfo$fromProxy(jsProxy);
    },
    _createDirectoryEntry: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : M.CrDirectoryEntry$fromProxy(jsProxy);
    },
    _createMessageSender: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : T.MessageSender$fromProxy(jsProxy);
    },
    _createRequestUpdateCheckStatus: function(value) {
      return C.JSArray_methods.singleWhere$1(C.List_gkc, new T._createRequestUpdateCheckStatus_closure(H.stringTypeCheck(value)));
    },
    ChromeRuntime: function ChromeRuntime(t0) {
      this._onStartup = null;
      this.$ti = t0;
    },
    ChromeRuntime$__closure: function ChromeRuntime$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    OnMessageEvent: function OnMessageEvent(t0) {
      this.$ti = t0;
    },
    OnMessageExternalEvent: function OnMessageExternalEvent(t0) {
      this.$ti = t0;
    },
    PlatformOs: function PlatformOs() {
    },
    PlatformArch: function PlatformArch() {
    },
    PlatformNaclArch: function PlatformNaclArch() {
    },
    RequestUpdateCheckStatus: function RequestUpdateCheckStatus(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    OnInstalledReason: function OnInstalledReason() {
    },
    OnRestartRequiredReason: function OnRestartRequiredReason(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    LastErrorRuntime: function LastErrorRuntime() {
    },
    Port: function Port(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    MessageSender: function MessageSender(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    PlatformInfo: function PlatformInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    RuntimeConnectParams: function RuntimeConnectParams() {
    },
    RuntimeSendMessageParams: function RuntimeSendMessageParams() {
    },
    RequestUpdateCheckResult: function RequestUpdateCheckResult(t0, t1, t2) {
      this.status = t0;
      this.details = t1;
      this.$ti = t2;
    },
    _createOnRestartRequiredReason_closure: function _createOnRestartRequiredReason_closure(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    _createRequestUpdateCheckStatus_closure: function _createRequestUpdateCheckStatus_closure(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    ChromeSerial: function ChromeSerial() {
    },
    DataBits: function DataBits() {
    },
    ParityBit: function ParityBit() {
    },
    StopBits: function StopBits() {
    },
    SendError: function SendError() {
    },
    ReceiveError: function ReceiveError() {
    },
    DeviceInfo: function DeviceInfo() {
    },
    ConnectionOptions: function ConnectionOptions() {
    },
    ConnectionInfo: function ConnectionInfo() {
    },
    SerialSendInfo: function SerialSendInfo() {
    },
    HostControlSignals: function HostControlSignals() {
    },
    DeviceControlSignals: function DeviceControlSignals() {
    },
    SerialReceiveInfo: function SerialReceiveInfo() {
    },
    SerialReceiveErrorInfo: function SerialReceiveErrorInfo() {
    }
  },
  V = {
    ChromeFileSystem$_: function() {
      var t1 = new V.ChromeFileSystem([]);
      t1.ChromeFileSystem$_$0();
      return t1;
    },
    ChooseEntryOptions$: function(type) {
      var _null = null,
        t1 = new V.ChooseEntryOptions(P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Object"), "$isJsFunction"), _null), []);
      t1.ChooseEntryOptions$5$accepts$acceptsAllTypes$acceptsMultiple$suggestedName$type(_null, _null, _null, _null, type);
      return t1;
    },
    VolumeListChangedEvent$fromProxy: function(jsProxy) {
      return new V.VolumeListChangedEvent(jsProxy, []);
    },
    EntryChangedEvent$fromProxy: function(jsProxy) {
      return new V.EntryChangedEvent(jsProxy, []);
    },
    EntryRemovedEvent$fromProxy: function(jsProxy) {
      return new V.EntryRemovedEvent(jsProxy, []);
    },
    ChooseEntryResult__create: function(entry, fileEntries) {
      return V.ChooseEntryResult$_(V._createEntry(H.interceptedTypeCheck(entry, "$isJsObject")), H.assertSubtype(F.toList(H.interceptedTypeCheck(fileEntries, "$isJsObject"), V.file_system___createFileEntry$closure()), "$isList", [W.FileEntry], "$asList"));
    },
    ChooseEntryResult$_: function(entry, fileEntries) {
      return new V.ChooseEntryResult(entry, []);
    },
    _createVolumeListChangedEvent: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : V.VolumeListChangedEvent$fromProxy(jsProxy);
    },
    _createEntryChangedEvent: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : V.EntryChangedEvent$fromProxy(jsProxy);
    },
    _createEntryRemovedEvent: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : V.EntryRemovedEvent$fromProxy(jsProxy);
    },
    _createEntry: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : M.CrEntry_CrEntry$fromProxy(jsProxy);
    },
    _createFileEntry: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : M.ChromeFileEntry$fromProxy(jsProxy);
    },
    ChromeFileSystem: function ChromeFileSystem(t0) {
      this.$ti = t0;
    },
    ChromeFileSystem$__closure: function ChromeFileSystem$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    ChooseEntryType: function ChooseEntryType(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    ChildChangeType: function ChildChangeType() {
    },
    AcceptOption: function AcceptOption() {
    },
    ChooseEntryOptions: function ChooseEntryOptions(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    RequestFileSystemOptions: function RequestFileSystemOptions() {
    },
    Volume: function Volume() {
    },
    ChildChange: function ChildChange() {
    },
    VolumeListChangedEvent: function VolumeListChangedEvent(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    EntryChangedEvent: function EntryChangedEvent(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    EntryRemovedEvent: function EntryRemovedEvent(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChooseEntryResult: function ChooseEntryResult(t0, t1) {
      this.entry = t0;
      this.$ti = t1;
    },
    ChromeIdle$_: function() {
      var t1 = new V.ChromeIdle([]);
      t1.ChromeIdle$_$0();
      return t1;
    },
    _createIdleState: function(value) {
      return C.JSArray_methods.singleWhere$1(C.List_e8P, new V._createIdleState_closure(H.stringTypeCheck(value)));
    },
    ChromeIdle: function ChromeIdle(t0) {
      this.$ti = t0;
    },
    ChromeIdle$__closure: function ChromeIdle$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    IdleState: function IdleState(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    _createIdleState_closure: function _createIdleState_closure(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    ChromeNotifications: function ChromeNotifications() {
    },
    OnClosedEvent: function OnClosedEvent() {
    },
    OnButtonClickedEvent: function OnButtonClickedEvent() {
    },
    TemplateType: function TemplateType() {
    },
    PermissionLevel: function PermissionLevel() {
    },
    NotificationItem: function NotificationItem() {
    },
    NotificationBitmap: function NotificationBitmap() {
    },
    NotificationButton: function NotificationButton() {
    },
    NotificationOptions: function NotificationOptions() {
    }
  },
  Y = {ChromeFileSystemProvider: function ChromeFileSystemProvider() {
    }, OnUnmountRequestedEvent: function OnUnmountRequestedEvent() {
    }, OnGetMetadataRequestedEvent: function OnGetMetadataRequestedEvent() {
    }, OnGetActionsRequestedEvent: function OnGetActionsRequestedEvent() {
    }, OnReadDirectoryRequestedEvent: function OnReadDirectoryRequestedEvent() {
    }, OnOpenFileRequestedEvent: function OnOpenFileRequestedEvent() {
    }, OnCloseFileRequestedEvent: function OnCloseFileRequestedEvent() {
    }, OnReadFileRequestedEvent: function OnReadFileRequestedEvent() {
    }, OnCreateDirectoryRequestedEvent: function OnCreateDirectoryRequestedEvent() {
    }, OnDeleteEntryRequestedEvent: function OnDeleteEntryRequestedEvent() {
    }, OnCreateFileRequestedEvent: function OnCreateFileRequestedEvent() {
    }, OnCopyEntryRequestedEvent: function OnCopyEntryRequestedEvent() {
    }, OnMoveEntryRequestedEvent: function OnMoveEntryRequestedEvent() {
    }, OnTruncateRequestedEvent: function OnTruncateRequestedEvent() {
    }, OnWriteFileRequestedEvent: function OnWriteFileRequestedEvent() {
    }, OnAbortRequestedEvent: function OnAbortRequestedEvent() {
    }, OnConfigureRequestedEvent: function OnConfigureRequestedEvent() {
    }, OnMountRequestedEvent: function OnMountRequestedEvent() {
    }, OnAddWatcherRequestedEvent: function OnAddWatcherRequestedEvent() {
    }, OnRemoveWatcherRequestedEvent: function OnRemoveWatcherRequestedEvent() {
    }, OnExecuteActionRequestedEvent: function OnExecuteActionRequestedEvent() {
    }, ProviderError: function ProviderError() {
    }, OpenFileMode: function OpenFileMode() {
    }, ChangeType: function ChangeType() {
    }, CommonActionId: function CommonActionId() {
    }, EntryMetadata: function EntryMetadata() {
    }, Watcher: function Watcher() {
    }, OpenedFile: function OpenedFile() {
    }, FileSystemInfo: function FileSystemInfo() {
    }, MountOptions: function MountOptions() {
    }, UnmountOptions: function UnmountOptions() {
    }, UnmountRequestedOptions: function UnmountRequestedOptions() {
    }, GetMetadataRequestedOptions: function GetMetadataRequestedOptions() {
    }, GetActionsRequestedOptions: function GetActionsRequestedOptions() {
    }, ReadDirectoryRequestedOptions: function ReadDirectoryRequestedOptions() {
    }, OpenFileRequestedOptions: function OpenFileRequestedOptions() {
    }, CloseFileRequestedOptions: function CloseFileRequestedOptions() {
    }, ReadFileRequestedOptions: function ReadFileRequestedOptions() {
    }, CreateDirectoryRequestedOptions: function CreateDirectoryRequestedOptions() {
    }, DeleteEntryRequestedOptions: function DeleteEntryRequestedOptions() {
    }, CreateFileRequestedOptions: function CreateFileRequestedOptions() {
    }, CopyEntryRequestedOptions: function CopyEntryRequestedOptions() {
    }, MoveEntryRequestedOptions: function MoveEntryRequestedOptions() {
    }, TruncateRequestedOptions: function TruncateRequestedOptions() {
    }, WriteFileRequestedOptions: function WriteFileRequestedOptions() {
    }, AbortRequestedOptions: function AbortRequestedOptions() {
    }, AddWatcherRequestedOptions: function AddWatcherRequestedOptions() {
    }, RemoveWatcherRequestedOptions: function RemoveWatcherRequestedOptions() {
    }, Action: function Action() {
    }, ExecuteActionRequestedOptions: function ExecuteActionRequestedOptions() {
    }, Change: function Change() {
    }, NotifyOptions: function NotifyOptions() {
    }, ConfigureRequestedOptions: function ConfigureRequestedOptions() {
    }, ChromeHid: function ChromeHid() {
    }, HidCollectionInfo: function HidCollectionInfo() {
    }, HidDeviceInfo: function HidDeviceInfo() {
    }, HidConnectInfo: function HidConnectInfo() {
    }, HidDeviceFilter: function HidDeviceFilter() {
    }, HidGetDevicesOptions: function HidGetDevicesOptions() {
    }, HidDevicePromptOptions: function HidDevicePromptOptions() {
    }, ReceiveResult: function ReceiveResult() {
    }},
  S = {ChromeInstanceID: function ChromeInstanceID() {
    }, InstanceIDGetTokenParams: function InstanceIDGetTokenParams() {
    }, InstanceIDDeleteTokenParams: function InstanceIDDeleteTokenParams() {
    },
    ChromePermissions$_: function() {
      var t1 = new S.ChromePermissions([]);
      t1.ChromePermissions$_$0();
      return t1;
    },
    Permissions$fromProxy: function(jsProxy) {
      return new S.Permissions(jsProxy, []);
    },
    _createPermissions: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : S.Permissions$fromProxy(jsProxy);
    },
    ChromePermissions: function ChromePermissions(t0) {
      this.$ti = t0;
    },
    ChromePermissions$__closure: function ChromePermissions$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    Permissions: function Permissions(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromeUsb: function ChromeUsb() {
    },
    Direction: function Direction() {
    },
    Recipient: function Recipient() {
    },
    RequestType: function RequestType() {
    },
    TransferType: function TransferType() {
    },
    SynchronizationType: function SynchronizationType() {
    },
    UsageType: function UsageType() {
    },
    UsbDevice: function UsbDevice() {
    },
    ConnectionHandle: function ConnectionHandle() {
    },
    EndpointDescriptor: function EndpointDescriptor() {
    },
    InterfaceDescriptor: function InterfaceDescriptor() {
    },
    ConfigDescriptor: function ConfigDescriptor() {
    },
    ControlTransferInfo: function ControlTransferInfo() {
    },
    GenericTransferInfo: function GenericTransferInfo() {
    },
    IsochronousTransferInfo: function IsochronousTransferInfo() {
    },
    TransferResultInfo: function TransferResultInfo() {
    },
    UsbDeviceFilter: function UsbDeviceFilter() {
    },
    EnumerateDevicesOptions: function EnumerateDevicesOptions() {
    },
    EnumerateDevicesAndRequestAccessOptions: function EnumerateDevicesAndRequestAccessOptions() {
    },
    UsbDevicePromptOptions: function UsbDevicePromptOptions() {
    }
  },
  M = {ChromeLocation: function ChromeLocation() {
    }, Coordinates0: function Coordinates0() {
    }, Location0: function Location0() {
    }, WatchLocationRequestInfo: function WatchLocationRequestInfo() {
    },
    CrFileSystem_CrFileSystem$fromProxy: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      if (!H.boolConversionCheck($.CrFileSystem__fileSystems.containsKey$1(jsProxy)))
        J.$indexSet$ax($.CrFileSystem__fileSystems, jsProxy, M.CrFileSystem$_(jsProxy));
      return H.interceptedTypeCheck(J.$index$asx($.CrFileSystem__fileSystems, jsProxy), "$isCrFileSystem");
    },
    CrFileSystem$_: function(jsProxy) {
      return new M.CrFileSystem(jsProxy, []);
    },
    CrMetadata$fromProxy: function(jsProxy) {
      return new M.CrMetadata(jsProxy, []);
    },
    CrEntry_CrEntry$fromProxy: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      if (jsProxy == null)
        return;
      else if (H.boolConversionCheck(H.boolTypeCheck(jsProxy.$index(0, "isFile"))))
        return M.ChromeFileEntry$fromProxy(jsProxy);
      else
        return M.CrDirectoryEntry$fromProxy(jsProxy);
    },
    CrDirectoryEntry$fromProxy: function(jsProxy) {
      return new M.CrDirectoryEntry(jsProxy, []);
    },
    CrDirectoryReader$fromProxy: function(jsProxy) {
      return new M.CrDirectoryReader(jsProxy, []);
    },
    ChromeFileEntry$fromProxy: function(jsProxy) {
      return new M.ChromeFileEntry(jsProxy, []);
    },
    _ChromeCompleterWithError$noArgs: function($T) {
      var t1 = new M._ChromeCompleterWithError(P.Completer_Completer($T), [$T]);
      t1._ChromeCompleterWithError$noArgs$0($T);
      return t1;
    },
    _ChromeCompleterWithError$oneArg: function(transformer, $T) {
      var t1 = new M._ChromeCompleterWithError(P.Completer_Completer($T), [$T]);
      t1._ChromeCompleterWithError$oneArg$1(transformer, $T);
      return t1;
    },
    CrFileError$fromProxy: function(jsProxy) {
      return new M.CrFileError(jsProxy, []);
    },
    CrFileError__isFileError: function(error) {
      if (error instanceof P.JsObject)
        return J.contains$1$asx(error.toString$0(error), "FileError");
      else
        return false;
    },
    _translateError: function(error) {
      if (H.boolConversionCheck(M.CrFileError__isFileError(error)))
        return M.CrFileError$fromProxy(H.interceptedTypeCheck(error, "$isJsObject"));
      else
        return error;
    },
    CrFileSystem: function CrFileSystem(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    CrMetadata: function CrMetadata(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    CrEntry: function CrEntry() {
    },
    CrEntry_moveTo_closure: function CrEntry_moveTo_closure(t0) {
      this.$ti = t0;
    },
    CrEntry_getMetadata_closure: function CrEntry_getMetadata_closure(t0) {
      this.$ti = t0;
    },
    CrEntry_getParent_closure: function CrEntry_getParent_closure(t0) {
      this.$ti = t0;
    },
    CrDirectoryEntry: function CrDirectoryEntry(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    CrDirectoryEntry_createFile_closure: function CrDirectoryEntry_createFile_closure(t0) {
      this.$ti = t0;
    },
    CrDirectoryEntry_getFile_closure: function CrDirectoryEntry_getFile_closure(t0) {
      this.$ti = t0;
    },
    CrDirectoryReader: function CrDirectoryReader(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    CrDirectoryReader_readEntries_closure: function CrDirectoryReader_readEntries_closure(t0, t1) {
      this.completer = t0;
      this.$ti = t1;
    },
    CrDirectoryReader_readEntries_closure0: function CrDirectoryReader_readEntries_closure0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.completer = t2;
      _.entries = t3;
      _.errorCallback = t4;
      _.$ti = t5;
    },
    CrDirectoryReader_readEntries__closure: function CrDirectoryReader_readEntries__closure(t0) {
      this.$ti = t0;
    },
    CrFileEntry: function CrFileEntry() {
    },
    ChromeFileEntry: function ChromeFileEntry(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromeFileEntry_readText_closure: function ChromeFileEntry_readText_closure(t0) {
      this.$ti = t0;
    },
    ChromeFileEntry_readText__closure: function ChromeFileEntry_readText__closure(t0, t1, t2) {
      this.completer = t0;
      this.reader = t1;
      this.$ti = t2;
    },
    ChromeFileEntry_readText__closure0: function ChromeFileEntry_readText__closure0(t0, t1) {
      this.completer = t0;
      this.$ti = t1;
    },
    ChromeFileEntry_readBytes_closure: function ChromeFileEntry_readBytes_closure(t0) {
      this.$ti = t0;
    },
    ChromeFileEntry_readBytes__closure: function ChromeFileEntry_readBytes__closure(t0, t1, t2) {
      this.completer = t0;
      this.reader = t1;
      this.$ti = t2;
    },
    ChromeFileEntry_readBytes__closure0: function ChromeFileEntry_readBytes__closure0(t0, t1) {
      this.completer = t0;
      this.$ti = t1;
    },
    ChromeFileEntry_writeText_closure: function ChromeFileEntry_writeText_closure(t0, t1, t2) {
      this.$this = t0;
      this.text = t1;
      this.$ti = t2;
    },
    ChromeFileEntry_writeText__closure: function ChromeFileEntry_writeText__closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.writer = t1;
      _.completer = t2;
      _.$ti = t3;
    },
    ChromeFileEntry_writeText__closure0: function ChromeFileEntry_writeText__closure0(t0, t1) {
      this.completer = t0;
      this.$ti = t1;
    },
    ChromeFileEntry_writeBytes_closure: function ChromeFileEntry_writeBytes_closure(t0, t1, t2) {
      this.$this = t0;
      this.data = t1;
      this.$ti = t2;
    },
    ChromeFileEntry_writeBytes__closure: function ChromeFileEntry_writeBytes__closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.writer = t1;
      _.completer = t2;
      _.$ti = t3;
    },
    ChromeFileEntry_writeBytes__closure0: function ChromeFileEntry_writeBytes__closure0(t0, t1) {
      this.completer = t0;
      this.$ti = t1;
    },
    ChromeFileEntry__createWriter_closure: function ChromeFileEntry__createWriter_closure(t0) {
      this.$ti = t0;
    },
    CrBlob: function CrBlob() {
    },
    _ChromeCompleterWithError: function _ChromeCompleterWithError(t0, t1) {
      this._files$_completer = t0;
      this._files$_callback = null;
      this.$ti = t1;
    },
    _ChromeCompleterWithError$noArgs_closure: function _ChromeCompleterWithError$noArgs_closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    _ChromeCompleterWithError$oneArg_closure: function _ChromeCompleterWithError$oneArg_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.transformer = t1;
      _.T = t2;
      _.$ti = t3;
    },
    CrFileError: function CrFileError(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    }
  },
  D = {ChromePower: function ChromePower() {
    }, Level: function Level() {
    }, ChromeWallpaper: function ChromeWallpaper() {
    }, WallpaperLayout: function WallpaperLayout() {
    }, WallpaperSetWallpaperParams: function WallpaperSetWallpaperParams() {
    }},
  N = {
    ChromeStorage$_: function() {
      var t1 = new N.ChromeStorage([]);
      t1.ChromeStorage$_$0();
      return t1;
    },
    StorageOnChangedEvent$: function(changes, areaName) {
      return new N.StorageOnChangedEvent([]);
    },
    SyncStorageArea$fromProxy: function(jsProxy) {
      return new N.SyncStorageArea(jsProxy, []);
    },
    LocalStorageArea$fromProxy: function(jsProxy) {
      return new N.LocalStorageArea(jsProxy, []);
    },
    _createOnChangedEvent: function(changes, areaName) {
      H.interceptedTypeCheck(changes, "$isJsObject");
      H.stringTypeCheck(areaName);
      return N.StorageOnChangedEvent$(F.toMap(changes), areaName);
    },
    _createSyncStorageArea: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : N.SyncStorageArea$fromProxy(jsProxy);
    },
    _createLocalStorageArea: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : N.LocalStorageArea$fromProxy(jsProxy);
    },
    ChromeStorage: function ChromeStorage(t0) {
      this.$ti = t0;
    },
    ChromeStorage$__closure: function ChromeStorage$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    StorageOnChangedEvent: function StorageOnChangedEvent(t0) {
      this.$ti = t0;
    },
    SyncStorageArea: function SyncStorageArea(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    LocalStorageArea: function LocalStorageArea(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    StorageChange: function StorageChange() {
    },
    StorageArea: function StorageArea() {
    },
    main: function() {
      var t1,
        _s8_ = "create()",
        _s9_ = "available";
      N.label("alarms");
      N.action(_s8_, N.demo__handleAlarmsCreate$closure());
      N.br();
      N.label("app.window");
      N.action(_s8_, N.demo__handleAppWindowCreate$closure());
      N.action("create.options()", N.demo__handleAppWindowCreateOptions$closure());
      N.action("close()", new N.main_closure());
      N.action("fullscreen()", new N.main_closure0());
      N.br();
      N.label("audio");
      N.action("getInfo()", N.demo__handleAudioGetInfo$closure());
      N.br();
      N.label("browser");
      N.action(_s9_, N.demo__handleBrowserAvailable$closure());
      N.action("openTab()", N.demo__handleBrowserOpenTab$closure());
      N.br();
      N.label("bluetooth");
      N.action(_s9_, N.demo__handleBluetoothAvailable$closure());
      N.action("getAdapterState()", N.demo__handleBluetoothGetAdapterState$closure());
      N.br();
      N.label("files");
      N.action("read contents", N.demo__handleFileRead$closure());
      N.action("read contents (bytes)", N.demo__handleFileReadBytes$closure());
      N.action("get file", N.demo__handleDirGetFile$closure());
      N.action("metaData", N.demo__handleGetFileMetaData$closure());
      N.action("dir info", N.demo__handleDirInfo$closure());
      N.action("dir listings", N.demo__handleDirListings$closure());
      N.br();
      N.label("files - modify");
      N.action("create", N.demo__handleFileCreate$closure());
      N.action("write", N.demo__handleFileWrite$closure());
      N.action("write (bytes)", N.demo__handleFileWriteBytes$closure());
      N.action("rename", N.demo__handleFileRename$closure());
      N.action("delete", N.demo__handleFileDelete$closure());
      N.br();
      N.label("fileSystem");
      N.action("chooseEntry", N.demo__handleChooseEntry$closure());
      N.action("chooseEntry (directory)", N.demo__handleChooseEntryDir$closure());
      N.br();
      N.label("i18n");
      N.action("message()", N.demo__handleI18NMessage$closure());
      N.action("languages()", N.demo__handleI18NLanguages$closure());
      N.br();
      N.label("identity");
      N.action("getAuthToken()", N.demo__handleIdentityGetAuthToken$closure());
      N.br();
      N.label("idle");
      N.action("queryState()", N.demo__handleIdleQueryState$closure());
      N.br();
      N.label("permissions");
      N.action("getAll()", N.demo__handlePermissionsGetAll$closure());
      N.action("getAll().origins", N.demo__handlePermissionsOrigins$closure());
      N.br();
      N.label("runtime");
      N.action("id", N.demo__handleRuntimeId$closure());
      N.action("path", N.demo__handleRuntimeURL$closure());
      N.action("reload()", N.demo__handleRuntimeReload$closure());
      N.action("getManifest()", N.demo__handleRuntimeGetManifest$closure());
      N.action("getPlatformInfo()", N.demo__handleGetPlatformInfo$closure());
      N.action("getPackageDirectoryEntry()", N.demo__handleGetPackageDirectoryEntry$closure());
      N.action("requestUpdateCheck()", N.demo__handleRuntimeRequestUpdateCheck$closure());
      N.br();
      N.label("storage");
      N.action("store / get", N.demo__handleStorageStore$closure());
      N.action("read prop", N.demo__handleStorageProp$closure());
      N.br();
      N.label("syncFileSystem");
      N.action("requestFileSystem()", N.demo__handleRequestFileSystem$closure());
      N.br();
      N.label("system");
      N.action("cpu.info", N.demo__handleSystemCpu$closure());
      N.action("cpu.memory", N.demo__handleSystemMemory$closure());
      N.br();
      N.label("tts");
      N.action("getVoices()", N.demo__handleGetVoices$closure());
      N.action("speak()", new N.main_closure1());
      N.br();
      $.$get$runtime().get$onStartup().listen$1(new N.main_closure2());
      $.$get$alarms().get$onAlarm().listen$1(new N.main_closure3());
      t1 = $.$get$app();
      J.get$window$z(t1).get$onFullscreened().listen$1(new N.main_closure4());
      J.get$window$z(t1).get$onClosed().listen$1(new N.main_closure5());
      J.get$window$z(t1).get$onMaximized().listen$1(new N.main_closure6());
      J.get$window$z(t1).get$onMinimized().listen$1(new N.main_closure7());
      J.get$window$z(t1).get$onRestored().listen$1(new N.main_closure8());
    },
    label: function(str) {
      var span;
      H.stringTypeCheck(str);
      span = W.SpanElement_SpanElement();
      span.textContent = str;
      J.add$1$ax(J.get$children$x(W.querySelector("#container_id")), span);
    },
    action: function($name, callback) {
      var button;
      H.stringTypeCheck($name);
      H.interceptedTypeCheck(callback, "$isFunction");
      button = W.ButtonElement_ButtonElement();
      button.textContent = $name;
      (button && C.ButtonElement_methods).get$onClick(button).listen$1(new N.action_closure(callback));
      J.add$1$ax(J.get$children$x(W.querySelector("#container_id")), button);
    },
    br: function() {
      J.add$1$ax(J.get$children$x(W.querySelector("#container_id")), W.BRElement_BRElement());
    },
    summary: function(str) {
      H.stringTypeCheck(str);
      J.set$text$x(W.querySelector("#summary"), "[" + H.S(str) + "]");
    },
    summaryFuture: function(future) {
      H.interceptedTypeCheck(future, "$isFuture").then$1$1(new N.summaryFuture_closure(), null).catchError$1(new N.summaryFuture_closure0());
    },
    notes: function(str) {
      H.stringTypeCheck(str);
      J.set$text$x(W.querySelector("#notes"), str);
    },
    handleI18NMessage: function() {
      N.summary($.$get$i18n().getMessage$1("foo"));
    },
    handleI18NLanguages: function() {
      $.$get$i18n().getAcceptLanguages$0().then$1$1(new N.handleI18NLanguages_closure(), null);
    },
    handleRuntimeId: function() {
      N.summary(J.get$id$z($.$get$runtime()));
    },
    handleRuntimeURL: function() {
      N.summary($.$get$runtime().getURL$1("foo"));
    },
    handleRuntimeReload: function() {
      $.$get$runtime().reload$0();
    },
    handleIdleQueryState: function() {
      $.$get$idle().queryState$1(15).then$1$1(new N.handleIdleQueryState_closure(), null);
    },
    handlePermissionsGetAll: function() {
      $.$get$permissions().getAll$0().then$1$1(new N.handlePermissionsGetAll_closure(), null);
    },
    handlePermissionsOrigins: function() {
      $.$get$permissions().getAll$0().then$1$1(new N.handlePermissionsOrigins_closure(), null);
    },
    handleRuntimeGetManifest: function() {
      N.summary(J.toString$0$($.$get$runtime().getManifest$0()));
    },
    handleGetVoices: function() {
      $.$get$tts().getVoices$0().then$1$1(new N.handleGetVoices_closure(), null);
    },
    handleGetPlatformInfo: function() {
      $.$get$runtime().getPlatformInfo$0().then$1$1(new N.handleGetPlatformInfo_closure(), null);
    },
    handleGetPackageDirectoryEntry: function() {
      $.$get$runtime().getPackageDirectoryEntry$0().then$1$1(new N.handleGetPackageDirectoryEntry_closure(), null);
    },
    handleRuntimeRequestUpdateCheck: function() {
      $.$get$runtime().requestUpdateCheck$0().then$1$1(new N.handleRuntimeRequestUpdateCheck_closure(), null);
    },
    handleAlarmsCreate: function() {
      $.$get$alarms().create$2(L.AlarmCreateInfo$(1), "myNewAlarm");
      N.summary("alarms.create: firing event in 1 minute");
    },
    handleAudioGetInfo: function() {
      $.$get$audio().getInfo$0().then$1$1(new N.handleAudioGetInfo_closure(), null);
    },
    handleAppWindowCreate: function() {
      J.get$window$z($.$get$app()).create$1("demo.html").then$1$1(new N.handleAppWindowCreate_closure(), null);
    },
    handleAppWindowCreateOptions: function() {
      J.get$window$z($.$get$app()).create$2("demo.html", B.CreateWindowOptions$(200, 1200)).then$1$1(new N.handleAppWindowCreateOptions_closure(), null);
    },
    handleSystemCpu: function() {
      $.$get$system().get$cpu().getInfo$0().then$1$1(new N.handleSystemCpu_closure(), null);
    },
    handleSystemMemory: function() {
      $.$get$system().get$memory().getInfo$0().then$1$1(new N.handleSystemMemory_closure(), null);
    },
    handleStorageStore: function() {
      N.summaryFuture($.$get$storage().get$local().$set$1(P.LinkedHashMap_LinkedHashMap$_literal(["foo", "bar"], P.String, null)).then$1$1(new N.handleStorageStore_closure(), null));
    },
    handleStorageProp: function() {
      N.summary(C.JSString_methods.$add("max ops per minute = ", J.toString$0$($.$get$storage().get$sync().get$MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE())));
    },
    handleChooseEntry: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openWritableFile);
      $.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleChooseEntry_closure(), null);
    },
    handleChooseEntryDir: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openDirectory);
      $.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleChooseEntryDir_closure(), null);
    },
    handleRequestFileSystem: function() {
      N.summaryFuture(J.requestFileSystem$0$z($.$get$syncFileSystem()));
    },
    handleFileRead: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openWritableFile);
      N.summaryFuture($.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleFileRead_closure(), null));
    },
    handleFileReadBytes: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openWritableFile);
      N.summaryFuture($.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleFileReadBytes_closure(), null));
    },
    handleDirInfo: function() {
      $.$get$runtime().getPackageDirectoryEntry$0().then$1$1(new N.handleDirInfo_closure([]), null);
    },
    handleDirGetFile: function() {
      $.$get$runtime().getPackageDirectoryEntry$0().then$1$1(new N.handleDirGetFile_closure(), null);
    },
    handleGetFileMetaData: function() {
      $.$get$runtime().getPackageDirectoryEntry$0().then$1$1(new N.handleGetFileMetaData_closure(), null);
    },
    handleDirListings: function() {
      $.$get$runtime().getPackageDirectoryEntry$0().then$1$1(new N.handleDirListings_closure(), null);
    },
    handleFileCreate: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openDirectory);
      N.summaryFuture($.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleFileCreate_closure(), null));
    },
    handleFileWrite: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openWritableFile);
      N.summaryFuture($.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleFileWrite_closure(), null));
    },
    handleFileWriteBytes: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openWritableFile);
      N.summaryFuture($.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleFileWriteBytes_closure(), null));
    },
    handleFileRename: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openWritableFile);
      N.summaryFuture($.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleFileRename_closure(), null));
    },
    handleFileDelete: function() {
      var options = V.ChooseEntryOptions$(C.ChooseEntryType_openWritableFile);
      N.summaryFuture($.$get$fileSystem().chooseEntry$1(options).then$1$1(new N.handleFileDelete_closure(), null));
    },
    handleBrowserAvailable: function() {
      N.summary("available = " + H.S($.$get$browser().get$available()));
    },
    handleBrowserOpenTab: function() {
      N.summaryFuture($.$get$browser().openTab$1(K.OpenTabOptions$("http://www.google.com")));
    },
    handleBluetoothAvailable: function() {
      N.summary("available = " + H.S($.$get$bluetooth().get$available()));
    },
    handleBluetoothGetAdapterState: function() {
      var t1 = $.$get$bluetooth();
      if (H.boolConversionCheck(t1.get$available()))
        N.summaryFuture(t1.getAdapterState$0().then$1$1(new N.handleBluetoothGetAdapterState_closure(), null));
      else
        N.summary("not available");
    },
    handleIdentityGetAuthToken: function() {
      var t1 = $.$get$identity();
      if (H.boolConversionCheck(t1.get$available()))
        N.summaryFuture(t1.getAuthToken$0().then$1$1(new N.handleIdentityGetAuthToken_closure(), null));
      else
        N.summary("not available");
    },
    main_closure: function main_closure(t0) {
      this.$ti = t0;
    },
    main_closure0: function main_closure0(t0) {
      this.$ti = t0;
    },
    main_closure1: function main_closure1(t0) {
      this.$ti = t0;
    },
    main_closure2: function main_closure2(t0) {
      this.$ti = t0;
    },
    main_closure3: function main_closure3(t0) {
      this.$ti = t0;
    },
    main_closure4: function main_closure4(t0) {
      this.$ti = t0;
    },
    main_closure5: function main_closure5(t0) {
      this.$ti = t0;
    },
    main_closure6: function main_closure6(t0) {
      this.$ti = t0;
    },
    main_closure7: function main_closure7(t0) {
      this.$ti = t0;
    },
    main_closure8: function main_closure8(t0) {
      this.$ti = t0;
    },
    action_closure: function action_closure(t0, t1) {
      this.callback = t0;
      this.$ti = t1;
    },
    summaryFuture_closure: function summaryFuture_closure(t0) {
      this.$ti = t0;
    },
    summaryFuture_closure0: function summaryFuture_closure0(t0) {
      this.$ti = t0;
    },
    handleI18NLanguages_closure: function handleI18NLanguages_closure(t0) {
      this.$ti = t0;
    },
    handleIdleQueryState_closure: function handleIdleQueryState_closure(t0) {
      this.$ti = t0;
    },
    handlePermissionsGetAll_closure: function handlePermissionsGetAll_closure(t0) {
      this.$ti = t0;
    },
    handlePermissionsOrigins_closure: function handlePermissionsOrigins_closure(t0) {
      this.$ti = t0;
    },
    handleGetVoices_closure: function handleGetVoices_closure(t0) {
      this.$ti = t0;
    },
    handleGetVoices__closure: function handleGetVoices__closure(t0) {
      this.$ti = t0;
    },
    handleGetPlatformInfo_closure: function handleGetPlatformInfo_closure(t0) {
      this.$ti = t0;
    },
    handleGetPackageDirectoryEntry_closure: function handleGetPackageDirectoryEntry_closure(t0) {
      this.$ti = t0;
    },
    handleRuntimeRequestUpdateCheck_closure: function handleRuntimeRequestUpdateCheck_closure(t0) {
      this.$ti = t0;
    },
    handleAudioGetInfo_closure: function handleAudioGetInfo_closure(t0) {
      this.$ti = t0;
    },
    handleAppWindowCreate_closure: function handleAppWindowCreate_closure(t0) {
      this.$ti = t0;
    },
    handleAppWindowCreate__closure: function handleAppWindowCreate__closure(t0) {
      this.$ti = t0;
    },
    handleAppWindowCreate__closure0: function handleAppWindowCreate__closure0(t0) {
      this.$ti = t0;
    },
    handleAppWindowCreateOptions_closure: function handleAppWindowCreateOptions_closure(t0) {
      this.$ti = t0;
    },
    handleAppWindowCreateOptions__closure: function handleAppWindowCreateOptions__closure(t0) {
      this.$ti = t0;
    },
    handleSystemCpu_closure: function handleSystemCpu_closure(t0) {
      this.$ti = t0;
    },
    handleSystemMemory_closure: function handleSystemMemory_closure(t0) {
      this.$ti = t0;
    },
    handleStorageStore_closure: function handleStorageStore_closure(t0) {
      this.$ti = t0;
    },
    handleChooseEntry_closure: function handleChooseEntry_closure(t0) {
      this.$ti = t0;
    },
    handleChooseEntry__closure: function handleChooseEntry__closure(t0) {
      this.$ti = t0;
    },
    handleChooseEntryDir_closure: function handleChooseEntryDir_closure(t0) {
      this.$ti = t0;
    },
    handleFileRead_closure: function handleFileRead_closure(t0) {
      this.$ti = t0;
    },
    handleFileReadBytes_closure: function handleFileReadBytes_closure(t0) {
      this.$ti = t0;
    },
    handleFileReadBytes__closure: function handleFileReadBytes__closure(t0) {
      this.$ti = t0;
    },
    handleDirInfo_closure: function handleDirInfo_closure(t0, t1) {
      this.items = t0;
      this.$ti = t1;
    },
    handleDirGetFile_closure: function handleDirGetFile_closure(t0) {
      this.$ti = t0;
    },
    handleDirGetFile__closure: function handleDirGetFile__closure(t0) {
      this.$ti = t0;
    },
    handleGetFileMetaData_closure: function handleGetFileMetaData_closure(t0) {
      this.$ti = t0;
    },
    handleGetFileMetaData__closure: function handleGetFileMetaData__closure(t0) {
      this.$ti = t0;
    },
    handleGetFileMetaData___closure: function handleGetFileMetaData___closure(t0) {
      this.$ti = t0;
    },
    handleDirListings_closure: function handleDirListings_closure(t0) {
      this.$ti = t0;
    },
    handleDirListings__closure: function handleDirListings__closure(t0) {
      this.$ti = t0;
    },
    handleFileCreate_closure: function handleFileCreate_closure(t0) {
      this.$ti = t0;
    },
    handleFileCreate__closure: function handleFileCreate__closure(t0) {
      this.$ti = t0;
    },
    handleFileWrite_closure: function handleFileWrite_closure(t0) {
      this.$ti = t0;
    },
    handleFileWrite__closure: function handleFileWrite__closure(t0, t1) {
      this.entry = t0;
      this.$ti = t1;
    },
    handleFileWriteBytes_closure: function handleFileWriteBytes_closure(t0) {
      this.$ti = t0;
    },
    handleFileWriteBytes__closure: function handleFileWriteBytes__closure(t0, t1) {
      this.entry = t0;
      this.$ti = t1;
    },
    handleFileRename_closure: function handleFileRename_closure(t0) {
      this.$ti = t0;
    },
    handleFileRename__closure: function handleFileRename__closure(t0, t1) {
      this.entry = t0;
      this.$ti = t1;
    },
    handleFileDelete_closure: function handleFileDelete_closure(t0) {
      this.$ti = t0;
    },
    handleFileDelete__closure: function handleFileDelete__closure(t0) {
      this.$ti = t0;
    },
    handleBluetoothGetAdapterState_closure: function handleBluetoothGetAdapterState_closure(t0) {
      this.$ti = t0;
    },
    handleIdentityGetAuthToken_closure: function handleIdentityGetAuthToken_closure(t0) {
      this.$ti = t0;
    }
  },
  O = {
    ChromeSyncFileSystem$_: function() {
      var t1 = new O.ChromeSyncFileSystem([]);
      t1.ChromeSyncFileSystem$_$0();
      return t1;
    },
    FileInfo$fromProxy: function(jsProxy) {
      return new O.FileInfo(jsProxy, []);
    },
    ServiceInfo$fromProxy: function(jsProxy) {
      return new O.ServiceInfo(jsProxy, []);
    },
    _createServiceInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : O.ServiceInfo$fromProxy(jsProxy);
    },
    _createFileInfo: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : O.FileInfo$fromProxy(jsProxy);
    },
    _createDOMFileSystem: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : M.CrFileSystem_CrFileSystem$fromProxy(jsProxy);
    },
    ChromeSyncFileSystem: function ChromeSyncFileSystem(t0) {
      this.$ti = t0;
    },
    ChromeSyncFileSystem$__closure: function ChromeSyncFileSystem$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    SyncAction: function SyncAction() {
    },
    ServiceStatus: function ServiceStatus() {
    },
    FileStatus: function FileStatus() {
    },
    SyncDirection: function SyncDirection() {
    },
    ConflictResolutionPolicy: function ConflictResolutionPolicy() {
    },
    FileInfo: function FileInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    FileStatusInfo: function FileStatusInfo() {
    },
    StorageInfo: function StorageInfo() {
    },
    ServiceInfo: function ServiceInfo(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    }
  },
  G = {ChromeTabs: function ChromeTabs() {
    }, OnUpdatedEvent: function OnUpdatedEvent() {
    }, TabsOnMovedEvent: function TabsOnMovedEvent() {
    }, OnSelectionChangedEvent: function OnSelectionChangedEvent() {
    }, OnActiveChangedEvent: function OnActiveChangedEvent() {
    }, OnDetachedEvent: function OnDetachedEvent() {
    }, OnAttachedEvent: function OnAttachedEvent() {
    }, TabsOnRemovedEvent: function TabsOnRemovedEvent() {
    }, OnReplacedEvent: function OnReplacedEvent() {
    }, MutedInfoReason: function MutedInfoReason() {
    }, ZoomSettingsMode: function ZoomSettingsMode() {
    }, ZoomSettingsScope: function ZoomSettingsScope() {
    }, TabStatus: function TabStatus() {
    }, TabsWindowType: function TabsWindowType() {
    }, MutedInfo: function MutedInfo() {
    }, Tab: function Tab() {
    }, ZoomSettings: function ZoomSettings() {
    }, TabsConnectParams: function TabsConnectParams() {
    }, TabsSendMessageParams: function TabsSendMessageParams() {
    }, TabsCreateParams: function TabsCreateParams() {
    }, TabsQueryParams: function TabsQueryParams() {
    }, TabsHighlightParams: function TabsHighlightParams() {
    }, TabsUpdateParams: function TabsUpdateParams() {
    }, TabsMoveParams: function TabsMoveParams() {
    }, TabsReloadParams: function TabsReloadParams() {
    },
    ChromeTts$_: function() {
      var t1 = new G.ChromeTts([]);
      t1.ChromeTts$_$0();
      return t1;
    },
    TtsEvent$fromProxy: function(jsProxy) {
      return new G.TtsEvent(jsProxy, []);
    },
    TtsVoice$fromProxy: function(jsProxy) {
      return new G.TtsVoice(jsProxy, []);
    },
    _createTtsEvent: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : G.TtsEvent$fromProxy(jsProxy);
    },
    _createTtsVoice: function(jsProxy) {
      H.interceptedTypeCheck(jsProxy, "$isJsObject");
      return jsProxy == null ? null : G.TtsVoice$fromProxy(jsProxy);
    },
    ChromeTts: function ChromeTts(t0) {
      this.$ti = t0;
    },
    ChromeTts$__closure: function ChromeTts$__closure(t0, t1) {
      this.$this = t0;
      this.$ti = t1;
    },
    ChromeTts_getVoices_closure: function ChromeTts_getVoices_closure(t0) {
      this.$ti = t0;
    },
    EventType: function EventType() {
    },
    VoiceGender: function VoiceGender() {
    },
    TtsEvent: function TtsEvent(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    TtsVoice: function TtsVoice(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    TtsSpeakParams: function TtsSpeakParams() {
    }
  },
  Z = {ChromeTypes: function ChromeTypes() {
    }, ChromeSettingScope: function ChromeSettingScope() {
    }, TypesLevelOfControl: function TypesLevelOfControl() {
    }, ChromeSetting: function ChromeSetting() {
    }, TypesGetParams: function TypesGetParams() {
    }, TypesSetParams: function TypesSetParams() {
    }, TypesClearParams: function TypesClearParams() {
    },
    ChromeObject$fromProxy: function(jsProxy) {
      return new Z.ChromeObject(jsProxy, []);
    },
    ArrayBuffer$_proxy: function(jsProxy) {
      return new Z.ArrayBuffer(jsProxy, []);
    },
    ArrayBuffer_ArrayBuffer$fromProxy: function(jsProxy) {
      return Z.ArrayBuffer$_proxy(jsProxy);
    },
    ArrayBuffer_ArrayBuffer$fromBytes: function(data) {
      var t1 = P.int;
      H.assertSubtype(data, "$isList", [t1], "$asList");
      return Z.ArrayBuffer_ArrayBuffer$fromProxy(P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Uint8Array"), "$isJsFunction"), [P.JsArray$from(data, t1)]).$index(0, "buffer"));
    },
    ChromeObject: function ChromeObject(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    ChromeApi: function ChromeApi() {
    },
    ChromeEnum: function ChromeEnum() {
    },
    Bounds: function Bounds() {
    },
    ArrayBuffer: function ArrayBuffer(t0, t1) {
      this.jsProxy = t0;
      this.$ti = t1;
    },
    Date: function Date() {
    },
    DeviceCallback: function DeviceCallback() {
    },
    SuggestFilenameCallback: function SuggestFilenameCallback() {
    },
    ProviderSuccessCallback: function ProviderSuccessCallback() {
    },
    ProviderErrorCallback: function ProviderErrorCallback() {
    },
    MetadataCallback: function MetadataCallback() {
    },
    EntriesCallback: function EntriesCallback() {
    },
    PrintersCallback: function PrintersCallback() {
    },
    FileDataCallback: function FileDataCallback() {
    },
    CapabilitiesCallback: function CapabilitiesCallback() {
    },
    PrintCallback: function PrintCallback() {
    },
    PrinterInfoCallback: function PrinterInfoCallback() {
    },
    CertificatesCallback: function CertificatesCallback() {
    },
    ActionsCallback: function ActionsCallback() {
    },
    SignCallback: function SignCallback() {
    },
    SubtleCrypto: function SubtleCrypto() {
    },
    RequestPinCallback: function RequestPinCallback() {
    },
    StopPinRequestCallback: function StopPinRequestCallback() {
    },
    LocalMediaStream: function LocalMediaStream() {
    }
  },
  U = {ChromeWindows: function ChromeWindows() {
    }, WindowWindowType: function WindowWindowType() {
    }, WindowState: function WindowState() {
    }, CreateType: function CreateType() {
    }, Window0: function Window0() {
    }, WindowsGetParams: function WindowsGetParams() {
    }, WindowsGetCurrentParams: function WindowsGetCurrentParams() {
    }, WindowsGetLastFocusedParams: function WindowsGetLastFocusedParams() {
    }, WindowsGetAllParams: function WindowsGetAllParams() {
    }, WindowsCreateParams: function WindowsCreateParams() {
    }, WindowsUpdateParams: function WindowsUpdateParams() {
    }};
  var holders = [C, H, J, P, W, L, B, Q, R, K, F, A, T, V, Y, S, M, D, N, O, G, Z, U];
  hunkHelpers.setFunctionNamesIfNecessary(holders);
  var $ = {};
  H.ChromeObject0.prototype = {};
  H.Rule.prototype = {};
  H.Event0.prototype = {};
  H.API_ChromeApp.prototype = {};
  H.API_Chrome.prototype = {};
  H.AppWindowBounds.prototype = {};
  H.AppWindowCreateWindowOptions.prototype = {};
  H.AppWindowAppWindow.prototype = {};
  H.Event_app_window_onBoundsChanged.prototype = {};
  H.Event_app_window_onClosed.prototype = {};
  H.Event_app_window_onFullscreened.prototype = {};
  H.Event_app_window_onMaximized.prototype = {};
  H.Event_app_window_onMinimized.prototype = {};
  H.Event_app_window_onRestored.prototype = {};
  H.API_app_window.prototype = {};
  H.AppRuntimeLaunchItem.prototype = {};
  H.AppRuntimeLaunchData.prototype = {};
  H.Event_app_runtime_onLaunched.prototype = {};
  H.Event_app_runtime_onRestarted.prototype = {};
  H.API_app_runtime.prototype = {};
  H.FilesystemAcceptOption.prototype = {};
  H.FilesystemChooseEntryOptions.prototype = {};
  H.API_file_system.prototype = {};
  H.JS_CONST.prototype = {};
  H._CryptoUtils.prototype = {};
  H._HashBase.prototype = {};
  H._MD5.prototype = {};
  H._SHA1.prototype = {};
  H.HttpServer.prototype = {$isStream: 1,
    $asStream: function() {
      return [H.HttpRequest];
    }
  };
  H.HttpConnectionsInfo.prototype = {};
  H.HttpHeaders.prototype = {};
  H.HeaderValue.prototype = {};
  H.HttpSession.prototype = {$isMap: 1,
    $asMap: function() {
    }
  };
  H.ContentType.prototype = {$isHeaderValue: 1};
  H.Cookie.prototype = {};
  H.HttpRequest.prototype = {$isStream: 1,
    $asStream: function() {
      return [[P.List, P.int]];
    }
  };
  H.HttpResponse.prototype = {$isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1
  };
  H.HttpClient.prototype = {};
  H.HttpClientRequest.prototype = {$isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1
  };
  H.HttpClientResponse.prototype = {$isStream: 1,
    $asStream: function() {
      return [[P.List, P.int]];
    }
  };
  H.HttpClientCredentials.prototype = {};
  H.HttpClientBasicCredentials.prototype = {};
  H.HttpClientDigestCredentials.prototype = {};
  H.HttpConnectionInfo.prototype = {};
  H.RedirectInfo.prototype = {};
  H.DetachedSocket.prototype = {};
  H.HttpException.prototype = {$isException: 1, $isIOException: 1};
  H.RedirectException.prototype = {$isHttpException: 1, $isException: 1, $isIOException: 1};
  H.HttpDate.prototype = {};
  H._HttpHeaders.prototype = {$isHttpHeaders: 1};
  H._HeaderValue.prototype = {$isHeaderValue: 1};
  H._ContentType.prototype = {$isContentType: 1};
  H._Cookie.prototype = {$isCookie: 1};
  H._ServiceObject.prototype = {};
  H._CopyingBytesBuilder.prototype = {$isBytesBuilder: 1};
  H._HttpIncoming.prototype = {
    $asStream: function() {
      return [[P.List, P.int]];
    }
  };
  H._HttpInboundMessage.prototype = {
    $asStream: function() {
      return [[P.List, P.int]];
    }
  };
  H._HttpRequest.prototype = {$isHttpRequest: 1};
  H._HttpClientResponse.prototype = {$isHttpClientResponse: 1};
  H._StreamSinkImpl.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isSink: 1};
  H._IOSinkImpl.prototype = {
    $as_StreamSinkImpl: function() {
      return [[P.List, P.int]];
    },
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1
  };
  H._HttpOutboundMessage.prototype = {};
  H._HttpResponse.prototype = {$isHttpResponse: 1,
    $as_StreamSinkImpl: function() {
      return [[P.List, P.int]];
    },
    $as_HttpOutboundMessage: function() {
      return [H.HttpResponse];
    },
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $asSink: function() {
      return [[P.List, P.int]];
    }
  };
  H._HttpClientRequest.prototype = {$isHttpClientRequest: 1,
    $as_StreamSinkImpl: function() {
      return [[P.List, P.int]];
    },
    $as_HttpOutboundMessage: function() {
      return [H.HttpClientResponse];
    },
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $asSink: function() {
      return [[P.List, P.int]];
    }
  };
  H._HttpGZipSink.prototype = {};
  H._HttpOutgoing.prototype = {$isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    }
  };
  H._HttpClientConnection.prototype = {};
  H._ConnectionInfo.prototype = {};
  H._ConnectionTarget.prototype = {};
  H._HttpClient.prototype = {$isHttpClient: 1};
  H._HttpConnection.prototype = {$is_ServiceObject: 1,
    $asLinkedListEntry: function() {
      return [H._HttpConnection];
    }
  };
  H._HttpServer.prototype = {$isHttpServer: 1, $is_ServiceObject: 1,
    $asStream: function() {
      return [H.HttpRequest];
    }
  };
  H._ProxyConfiguration.prototype = {};
  H._Proxy.prototype = {};
  H._HttpConnectionInfo.prototype = {$isHttpConnectionInfo: 1};
  H._DetachedSocket.prototype = {
    $asStream: function() {
      return [[P.List, P.int]];
    },
    $isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1,
    $isSocket: 1
  };
  H._AuthenticationScheme.prototype = {};
  H._Credentials.prototype = {};
  H._SiteCredentials.prototype = {};
  H._ProxyCredentials.prototype = {};
  H._HttpClientCredentials.prototype = {$isHttpClientCredentials: 1};
  H._HttpClientBasicCredentials.prototype = {$isHttpClientBasicCredentials: 1};
  H._HttpClientDigestCredentials.prototype = {$isHttpClientDigestCredentials: 1};
  H._RedirectInfo.prototype = {$isRedirectInfo: 1};
  H._Const.prototype = {};
  H._CharCode.prototype = {};
  H._State.prototype = {};
  H._HttpVersion.prototype = {};
  H._MessageType.prototype = {};
  H._HttpDetachedStreamSubscription.prototype = {$isStreamSubscription: 1,
    $asStreamSubscription: function() {
      return [[P.List, P.int]];
    }
  };
  H._HttpDetachedIncoming.prototype = {
    $asStream: function() {
      return [[P.List, P.int]];
    }
  };
  H._HttpParser.prototype = {
    $asStream: function() {
      return [H._HttpIncoming];
    }
  };
  H._HttpSession.prototype = {$isHttpSession: 1, $isMap: 1,
    $asMap: function() {
    }
  };
  H._HttpSessionManager.prototype = {};
  H.HttpOverrides.prototype = {};
  H._HttpOverridesScope.prototype = {};
  H.WebSocketStatus.prototype = {};
  H.CompressionOptions.prototype = {};
  H.WebSocketTransformer.prototype = {$isStreamTransformer: 1,
    $asStreamTransformer: function() {
      return [H.HttpRequest, H.WebSocket];
    }
  };
  H.WebSocket.prototype = {$isStream: 1,
    $asStream: function() {
    },
    $isEventSink: 1,
    $asEventSink: function() {
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
    },
    $isSink: 1,
    $asSink: function() {
    }
  };
  H.WebSocketException.prototype = {$isException: 1, $isIOException: 1};
  H._WebSocketMessageType.prototype = {};
  H._WebSocketOpcode.prototype = {};
  H._EncodedString.prototype = {};
  H._CompressionMaxWindowBits.prototype = {};
  H._WebSocketProtocolTransformer.prototype = {$isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $asStreamTransformer: function() {
      return [[P.List, P.int], null];
    },
    $asStreamTransformerBase: function() {
      return [[P.List, P.int], null];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    }
  };
  H._WebSocketPing.prototype = {};
  H._WebSocketPong.prototype = {};
  H._WebSocketTransformerImpl.prototype = {$isWebSocketTransformer: 1,
    $asStreamTransformer: function() {
      return [H.HttpRequest, H.WebSocket];
    },
    $asStreamTransformerBase: function() {
      return [H.HttpRequest, H.WebSocket];
    }
  };
  H._WebSocketPerMessageDeflate.prototype = {};
  H._WebSocketOutgoingTransformer.prototype = {$isEventSink: 1,
    $asEventSink: function() {
    },
    $asStreamTransformer: function() {
      return [null, [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [null, [P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
    }
  };
  H._WebSocketConsumer.prototype = {$isStreamConsumer: 1,
    $asStreamConsumer: function() {
    }
  };
  H._WebSocketImpl.prototype = {$is_ServiceObject: 1, $isWebSocket: 1,
    $asStream: function() {
    },
    $isEventSink: 1,
    $asEventSink: function() {
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
    },
    $isSink: 1,
    $asSink: function() {
    }
  };
  H.__HttpConnection_LinkedListEntry__ServiceObject.prototype = {$is_ServiceObject: 1,
    $asLinkedListEntry: function() {
      return [H._HttpConnection];
    }
  };
  H.__HttpServer_Stream__ServiceObject.prototype = {$is_ServiceObject: 1,
    $asStream: function() {
      return [H.HttpRequest];
    }
  };
  H.__WebSocketImpl_Stream__ServiceObject.prototype = {$is_ServiceObject: 1,
    $asStream: function() {
    }
  };
  J.Interceptor.prototype = {
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return H.Primitives_objectToHumanReadableString(receiver);
    },
    noSuchMethod$1: function(receiver, invocation) {
      H.interceptedTypeCheck(invocation, "$isInvocation");
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    }
  };
  J.JSBool.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    },
    noSuchMethod$1: function(receiver, invocation) {
      return this.super$Interceptor$noSuchMethod(receiver, H.interceptedTypeCheck(invocation, "$isInvocation"));
    },
    $isNull: 1
  };
  J.JSIndexable.prototype = {};
  J.JSMutableIndexable.prototype = {};
  J.JSObject.prototype = {};
  J.JavaScriptObject.prototype = {
    get$hashCode: function(receiver) {
      return 0;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isJSObject: 1
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0: function(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$JavaScriptObject$toString(receiver);
      return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
    },
    $signature: function() {
      return {func: 1, opt: [,,,,,,,,,,,,,,,,]};
    },
    $isFunction: 1
  };
  J._Growable.prototype = {};
  J.JSArray.prototype = {
    checkMutable$1: function(receiver, reason) {
      if (!!receiver.immutable$list)
        throw H.wrapException(P.UnsupportedError$(H.stringTypeCheck(reason)));
    },
    checkGrowable$1: function(receiver, reason) {
      if (!!receiver.fixed$length)
        throw H.wrapException(P.UnsupportedError$(H.stringTypeCheck(reason)));
    },
    add$1: function(receiver, value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
      this.checkGrowable$1(receiver, "add");
      receiver.push(value);
    },
    removeLast$0: function(receiver) {
      this.checkGrowable$1(receiver, "removeLast");
      if (receiver.length === 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    where$1: function(receiver, f) {
      var t1 = H.getTypeArgumentByIndex(receiver, 0);
      return H.WhereIterable$(receiver, H.functionTypeCheck(f, {func: 1, ret: P.bool, args: [t1]}), t1);
    },
    addAll$1: function(receiver, collection) {
      var t1;
      H.assertSubtype(collection, "$isIterable", [H.getTypeArgumentByIndex(receiver, 0)], "$asIterable");
      this.checkGrowable$1(receiver, "addAll");
      for (t1 = J.get$iterator$ax(collection); H.boolConversionCheck(t1.moveNext$0());)
        receiver.push(t1.get$current());
    },
    clear$0: function(receiver) {
      this.set$length(receiver, 0);
    },
    forEach$1: function(receiver, f) {
      var end, i;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(receiver, 0)]});
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H.getTypeArgumentByIndex(receiver, 0);
      return H.MappedListIterable$(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
    },
    map$1: function($receiver, f) {
      return this.map$1$1($receiver, f, null);
    },
    join$1: function(receiver, separator) {
      var list, i;
      H.stringTypeCheck(separator);
      list = new Array(receiver.length);
      list.fixed$length = Array;
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, H.S(receiver[i]));
      return list.join(separator);
    },
    take$1: function(receiver, n) {
      return H.SubListIterable$(receiver, 0, H.intTypeCheck(n), H.getTypeArgumentByIndex(receiver, 0));
    },
    skip$1: function(receiver, n) {
      return H.SubListIterable$(receiver, H.intTypeCheck(n), null, H.getTypeArgumentByIndex(receiver, 0));
    },
    singleWhere$1: function(receiver, test) {
      var $length, match, matchFound, i, element;
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
      $length = receiver.length;
      for (match = null, matchFound = false, i = 0; i < $length; ++i) {
        element = receiver[i];
        if (H.boolConversionCheck(test.call$1(element))) {
          if (matchFound)
            throw H.wrapException(H.IterableElementError_tooMany());
          match = element;
          matchFound = true;
        }
        if ($length !== receiver.length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      if (matchFound)
        return match;
      throw H.wrapException(H.IterableElementError_noElement());
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, H.intTypeCheck(index));
    },
    get$last: function(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    setRange$3: function(receiver, start, end, iterable) {
      var t1, $length, t2, otherList, i;
      H.intTypeCheck(start);
      H.intTypeCheck(end);
      t1 = H.getTypeArgumentByIndex(receiver, 0);
      H.assertSubtype(iterable, "$isIterable", [t1], "$asIterable");
      this.checkMutable$1(receiver, "setRange");
      P.RangeError_checkValidRange(start, end, receiver.length);
      if (typeof end !== "number")
        return end.$sub();
      if (typeof start !== "number")
        return H.iae(start);
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(0, "skipCount");
      t2 = J.getInterceptor$(iterable);
      otherList = !!t2.$isList ? H.assertSubtype(iterable, "$isList", [t1], "$asList") : J.toList$1$growable$ax(t2.skip$1(iterable, 0), false);
      t1 = J.getInterceptor$asx(otherList);
      t2 = t1.get$length(otherList);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if ($length > t2)
        throw H.wrapException(H.IterableElementError_tooFew());
      if (0 < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, i);
    },
    contains$1: function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (H.boolConversionCheck(J.$eq$(receiver[i], other)))
          return true;
      return false;
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return !H.boolConversionCheck(this.get$isEmpty(receiver));
    },
    toString$0: function(receiver) {
      return P.ListBase_listToString(receiver);
    },
    toList$1$growable: function(receiver, growable) {
      return H.boolConversionCheck(H.boolTypeCheck(growable)) ? this._toListGrowable$0(receiver) : this._toListFixed$0(receiver);
    },
    _toListGrowable$0: function(receiver) {
      return J.JSArray_JSArray$markGrowable(receiver.slice(0), H.getTypeArgumentByIndex(receiver, 0));
    },
    _toListFixed$0: function(receiver) {
      return J.JSArray_JSArray$markFixed(receiver.slice(0), H.getTypeArgumentByIndex(receiver, 0));
    },
    get$iterator: function(receiver) {
      return J.ArrayIterator$(receiver, H.getTypeArgumentByIndex(receiver, 0));
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      var _s9_ = "newLength";
      H.intTypeCheck(newLength);
      this.checkGrowable$1(receiver, "set length");
      if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
        throw H.wrapException(P.ArgumentError$value(newLength, _s9_, null));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$range(newLength, 0, null, _s9_, null));
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
      this.checkMutable$1(receiver, "indexed set");
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add: function(receiver, other) {
      var t2, t3, totalLength,
        t1 = [H.getTypeArgumentByIndex(receiver, 0)];
      H.assertSubtype(other, "$isList", t1, "$asList");
      t2 = receiver.length;
      t3 = J.get$length$asx(other);
      if (typeof t3 !== "number")
        return H.iae(t3);
      totalLength = t2 + t3;
      t1 = H.setRuntimeTypeInfo([], t1);
      this.set$length(t1, totalLength);
      this.setRange$3(t1, 0, receiver.length, receiver);
      this.setRange$3(t1, receiver.length, totalLength, other);
      return t1;
    },
    $isJSIndexable: 1,
    $asJSIndexable: function() {
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current: function() {
      return this.__interceptors$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this.__interceptors$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (!H.boolConversionCheck(J.$eq$(_this.__interceptors$_length, $length)))
        throw H.wrapException(H.throwConcurrentModificationError(t1));
      if (H.boolConversionCheck(J.$ge$n(_this.__interceptors$_index, $length))) {
        _this.set$__interceptors$_current(null);
        return false;
      }
      _this.set$__interceptors$_current(t2.$index(t1, _this.__interceptors$_index));
      _this.__interceptors$_index = H.intTypeCheck(J.$add$ansx(_this.__interceptors$_index, 1));
      return true;
    },
    set$__interceptors$_current: function(_current) {
      this.__interceptors$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1,
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  J.JSNumber.prototype = {
    remainder$1: function(receiver, b) {
      H.numTypeCheck(b);
      if (typeof b !== "number")
        throw H.wrapException(H.argumentErrorValue(b));
      return receiver % b;
    },
    abs$0: function(receiver) {
      return Math.abs(receiver);
    },
    toInt$0: function(receiver) {
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver))
        return this.truncateToDouble$0(receiver) + 0;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
    },
    ceilToDouble$0: function(receiver) {
      return Math.ceil(receiver);
    },
    floorToDouble$0: function(receiver) {
      return Math.floor(receiver);
    },
    truncateToDouble$0: function(receiver) {
      return receiver < 0 ? this.ceilToDouble$0(receiver) : this.floorToDouble$0(receiver);
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return 536870911 & intValue;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return 536870911 & ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259;
    },
    $add: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver + other;
    },
    $sub: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver - other;
    },
    _isInt32$1: function(receiver, value) {
      return (value | 0) === value;
    },
    $tdiv: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      if (H.boolConversionCheck(this._isInt32$1(receiver, receiver)))
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1: function(receiver, other) {
      var quotient;
      H.numTypeCheck(other);
      quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + H.S(other)));
    },
    $shr: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return this._shrOtherPositive$1(receiver, other);
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      H.numTypeCheck(other);
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        if (typeof other !== "number")
          return other.$gt();
        if (other > 31)
          t1 = 31;
        else
          t1 = other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrBothPositive$1: function(receiver, other) {
      H.numTypeCheck(other);
      return other > 31 ? 0 : receiver >>> other;
    },
    $and: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return (receiver & other) >>> 0;
    },
    $or: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return (receiver | other) >>> 0;
    },
    $xor: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return (receiver ^ other) >>> 0;
    },
    $lt: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver < other;
    },
    $gt: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver > other;
    },
    $le: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver <= other;
    },
    $ge: function(receiver, other) {
      H.numTypeCheck(other);
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver >= other;
    },
    $isComparable: 1,
    $asComparable: function() {
      return [P.num];
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    abs$0: function(receiver) {
      return Math.abs(receiver);
    },
    $isint: 1
  };
  J.JSDouble.prototype = {};
  J.JSString.prototype = {
    _codeUnitAt$1: function(receiver, index) {
      H.intTypeCheck(index);
      if (typeof index !== "number")
        return index.$ge();
      if (index >= receiver.length)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$1: function(receiver, string) {
      H.stringTypeCheck(string);
      H.checkString(string);
      string.length;
      return H.allMatchesInStringUnchecked(receiver, string, 0);
    },
    $add: function(receiver, other) {
      H.stringTypeCheck(other);
      if (typeof other !== "string")
        throw H.wrapException(P.ArgumentError$value(other, null, null));
      return receiver + other;
    },
    substring$2: function(receiver, startIndex, endIndex) {
      H.intTypeCheck(startIndex);
      H.intTypeCheck(endIndex);
      H.checkInt(startIndex);
      if (endIndex == null)
        endIndex = receiver.length;
      if (typeof startIndex !== "number")
        return startIndex.$lt();
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex, null));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    contains$1: function(receiver, other) {
      H.stringSuperNativeTypeCheck(other, "$isPattern");
      H.checkNull(other);
      return H.boolTypeCheck(H.stringContainsUnchecked(receiver, other, 0));
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return !H.boolConversionCheck(this.get$isEmpty(receiver));
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isJSIndexable: 1,
    $asJSIndexable: function() {
    },
    $isComparable: 1,
    $asComparable: function() {
      return [P.String];
    },
    $isPattern: 1,
    $isString: 1
  };
  H.CastStream.prototype = {
    $asStream: function($S, $T) {
      return [$T];
    }
  };
  H.CastStreamSubscription.prototype = {$isStreamSubscription: 1,
    $asStreamSubscription: function($S, $T) {
      return [$T];
    }
  };
  H.CastStreamTransformer.prototype = {
    $asStreamTransformer: function(SS, ST, TS, TT) {
      return [TS, TT];
    },
    $asStreamTransformerBase: function(SS, ST, TS, TT) {
      return [TS, TT];
    }
  };
  H.CastConverter.prototype = {
    $asStreamTransformer: function(SS, ST, TS, TT) {
      return [TS, TT];
    },
    $asStreamTransformerBase: function(SS, ST, TS, TT) {
      return [TS, TT];
    },
    $asConverter: function(SS, ST, TS, TT) {
      return [TS, TT];
    }
  };
  H._CastIterableBase.prototype = {
    $asIterable: function($S, $T) {
      return [$T];
    }
  };
  H.CastIterator.prototype = {$isIterator: 1,
    $asIterator: function($S, $T) {
      return [$T];
    }
  };
  H.CastIterable.prototype = {};
  H._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    }
  };
  H._CastListBase.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    },
    $isListMixin: 1,
    $asListMixin: function($S, $T) {
      return [$T];
    },
    $isList: 1,
    $asList: function($S, $T) {
      return [$T];
    }
  };
  H.CastList.prototype = {};
  H.CastSet.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    },
    $isSet: 1,
    $asSet: function($S, $T) {
      return [$T];
    }
  };
  H.CastMap.prototype = {
    $asMapBase: function(SK, SV, $K, $V) {
      return [$K, $V];
    },
    $asMapMixin: function(SK, SV, $K, $V) {
      return [$K, $V];
    },
    $asMap: function(SK, SV, $K, $V) {
      return [$K, $V];
    }
  };
  H.CastQueue.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    },
    $isQueue: 1,
    $asQueue: function($S, $T) {
      return [$T];
    }
  };
  H.CodeUnits.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  H.ExternalName.prototype = {};
  H.Since.prototype = {};
  H.HttpStatus.prototype = {};
  H.EfficientLengthIterable.prototype = {};
  H.ListIterable.prototype = {
    get$iterator: function(_) {
      return H.ListIterator$(this, H.getRuntimeTypeArgument(this, "ListIterable", 0));
    },
    get$isEmpty: function(_) {
      return J.$eq$(this.get$length(this), 0);
    },
    get$last: function(_) {
      var _this = this;
      if (H.boolConversionCheck(J.$eq$(_this.get$length(_this), 0)))
        throw H.wrapException(H.IterableElementError_noElement());
      return _this.elementAt$1(0, J.$sub$n(_this.get$length(_this), 1));
    },
    contains$1: function(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (H.boolConversionCheck(J.$eq$(_this.elementAt$1(0, i), element)))
          return true;
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1: function(_, separator) {
      var $length, first, t1, buffer, i, _this = this;
      H.stringTypeCheck(separator);
      $length = _this.get$length(_this);
      if (!H.boolConversionCheck(J.get$isEmpty$asx(separator))) {
        if ($length === 0)
          return "";
        first = H.S(_this.elementAt$1(0, 0));
        t1 = _this.get$length(_this);
        if ($length == null ? t1 != null : $length !== t1)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        buffer = P.StringBuffer$(first);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 1;
        for (; i < $length; ++i) {
          buffer.write$1(separator);
          buffer.write$1(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return buffer.toString$0(0);
      } else {
        buffer = P.StringBuffer$("");
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          buffer.write$1(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return buffer.toString$0(0);
      }
    },
    map$1$1: function(_, f, $T) {
      var t1 = H.getRuntimeTypeArgument(this, "ListIterable", 0);
      return H.MappedListIterable$(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
    },
    map$1: function($receiver, f) {
      return this.map$1$1($receiver, f, null);
    },
    skip$1: function(_, count) {
      return H.SubListIterable$(this, H.intTypeCheck(count), null, H.getRuntimeTypeArgument(this, "ListIterable", 0));
    },
    take$1: function(_, count) {
      return H.SubListIterable$(this, 0, H.intTypeCheck(count), H.getRuntimeTypeArgument(this, "ListIterable", 0));
    },
    toList$1$growable: function(_, growable) {
      var result, t2, i, _this = this,
        t1 = H.getRuntimeTypeArgument(_this, "ListIterable", 0);
      if (H.boolConversionCheck(H.boolTypeCheck(growable))) {
        result = H.setRuntimeTypeInfo([], [t1]);
        C.JSArray_methods.set$length(result, _this.get$length(_this));
      } else {
        t2 = _this.get$length(_this);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = new Array(t2);
        t2.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t2, [t1]);
      }
      i = 0;
      while (true) {
        t1 = _this.get$length(_this);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        C.JSArray_methods.$indexSet(result, i, _this.elementAt$1(0, i));
        ++i;
      }
      return result;
    }
  };
  H.SubListIterable.prototype = {
    SubListIterable$3: function(_iterable, _start, _endOrLength, $E) {
      var t2,
        t1 = this._start;
      P.RangeError_checkNotNegative(t1, "start");
      t2 = this._endOrLength;
      if (t2 != null) {
        P.RangeError_checkNotNegative(t2, "end");
        if (H.boolConversionCheck(J.$gt$n(t1, t2)))
          throw H.wrapException(P.RangeError$range(t1, 0, t2, "start", null));
      }
    },
    get$_endIndex: function() {
      var $length = J.get$length$asx(this._iterable),
        t1 = this._endOrLength;
      if (t1 == null || H.boolConversionCheck(J.$gt$n(t1, $length)))
        return $length;
      return t1;
    },
    get$_startIndex: function() {
      var $length = J.get$length$asx(this._iterable),
        t1 = this._start;
      if (H.boolConversionCheck(J.$gt$n(t1, $length)))
        return $length;
      return t1;
    },
    get$length: function(_) {
      var t2,
        $length = J.get$length$asx(this._iterable),
        t1 = this._start;
      if (H.boolConversionCheck(J.$ge$n(t1, $length)))
        return 0;
      t2 = this._endOrLength;
      if (t2 == null || H.boolConversionCheck(J.$ge$n(t2, $length))) {
        if (typeof $length !== "number")
          return $length.$sub();
        if (typeof t1 !== "number")
          return H.iae(t1);
        return $length - t1;
      }
      return J.$sub$n(t2, t1);
    },
    elementAt$1: function(_, index) {
      var realIndex, t1, _this = this;
      H.intTypeCheck(index);
      realIndex = J.$add$ansx(_this.get$_startIndex(), index);
      if (typeof index !== "number")
        return index.$lt();
      if (index >= 0) {
        t1 = _this.get$_endIndex();
        if (typeof realIndex !== "number")
          return realIndex.$ge();
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = realIndex >= t1;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this._iterable, realIndex);
    },
    skip$1: function(_, count) {
      var newStart, t1, t2, _this = this;
      H.intTypeCheck(count);
      P.RangeError_checkNotNegative(count, "count");
      newStart = J.$add$ansx(_this._start, count);
      t1 = _this._endOrLength;
      if (t1 != null) {
        if (typeof newStart !== "number")
          return newStart.$ge();
        if (typeof t1 !== "number")
          return H.iae(t1);
        t2 = newStart >= t1;
      } else
        t2 = false;
      if (t2)
        return H.EmptyIterable$(H.getTypeArgumentByIndex(_this, 0));
      return H.SubListIterable$(_this._iterable, newStart, t1, H.getTypeArgumentByIndex(_this, 0));
    },
    take$1: function(_, count) {
      var t1, t2, newEnd, _this = this;
      H.intTypeCheck(count);
      P.RangeError_checkNotNegative(count, "count");
      t1 = _this._endOrLength;
      t2 = _this._start;
      if (t1 == null)
        return H.SubListIterable$(_this._iterable, t2, J.$add$ansx(t2, count), H.getTypeArgumentByIndex(_this, 0));
      else {
        newEnd = J.$add$ansx(t2, count);
        if (H.boolConversionCheck(J.$lt$n(t1, newEnd)))
          return _this;
        return H.SubListIterable$(_this._iterable, t2, newEnd, H.getTypeArgumentByIndex(_this, 0));
      }
    },
    toList$1$growable: function(_, growable) {
      var start, t1, t2, end, end0, $length, t3, result, t4, i, _this = this;
      H.boolTypeCheck(growable);
      start = _this._start;
      t1 = _this._iterable;
      t2 = J.getInterceptor$asx(t1);
      end = t2.get$length(t1);
      end0 = _this._endOrLength;
      if (end0 != null && H.boolConversionCheck(J.$lt$n(end0, end)))
        end = end0;
      if (typeof end !== "number")
        return end.$sub();
      if (typeof start !== "number")
        return H.iae(start);
      $length = end - start;
      if ($length < 0)
        $length = 0;
      t3 = _this.$ti;
      if (H.boolConversionCheck(growable)) {
        result = H.setRuntimeTypeInfo([], t3);
        C.JSArray_methods.set$length(result, $length);
      } else {
        t4 = new Array($length);
        t4.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t4, t3);
      }
      for (i = 0; i < $length; ++i) {
        C.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (H.boolConversionCheck(J.$lt$n(t2.get$length(t1), end)))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return result;
    }
  };
  H.ListIterator.prototype = {
    get$current: function() {
      return this.__internal$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (!H.boolConversionCheck(J.$eq$(_this.__internal$_length, $length)))
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      if (H.boolConversionCheck(J.$ge$n(_this._index, $length))) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, _this._index));
      _this._index = H.intTypeCheck(J.$add$ansx(_this._index, 1));
      return true;
    },
    set$__internal$_current: function(_current) {
      this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1,
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  H.MappedIterable.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return H.MappedIterator$(J.get$iterator$ax(_this._iterable), _this._f, H.getTypeArgumentByIndex(_this, 0), H.getTypeArgumentByIndex(_this, 1));
    },
    get$length: function(_) {
      return J.get$length$asx(this._iterable);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._iterable);
    },
    get$last: function(_) {
      return this._f.call$1(J.get$last$ax(this._iterable));
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._iterable, H.intTypeCheck(index)));
    },
    $asIterable: function($S, $T) {
      return [$T];
    }
  };
  H.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    }
  };
  H.MappedIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._iterator;
      if (H.boolConversionCheck(t1.moveNext$0())) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current: function() {
      return this.__internal$_current;
    },
    set$__internal$_current: function(_current) {
      this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 1));
    },
    $asIterator: function($S, $T) {
      return [$T];
    },
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  H.MappedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, H.intTypeCheck(index)));
    },
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    },
    $asListIterable: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    }
  };
  H.WhereIterable.prototype = {
    get$iterator: function(_) {
      return H.WhereIterator$(J.get$iterator$ax(this._iterable), this._f, H.getTypeArgumentByIndex(this, 0));
    },
    map$1$1: function(_, f, $T) {
      var t1 = H.getTypeArgumentByIndex(this, 0);
      return H.MappedIterable$_(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
    },
    map$1: function($receiver, f) {
      return this.map$1$1($receiver, f, null);
    }
  };
  H.WhereIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; H.boolConversionCheck(t1.moveNext$0());)
        if (H.boolConversionCheck(t2.call$1(t1.get$current())))
          return true;
      return false;
    },
    get$current: function() {
      return this._iterator.get$current();
    },
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  H.ExpandIterable.prototype = {
    $asIterable: function($S, $T) {
      return [$T];
    }
  };
  H.ExpandIterator.prototype = {$isIterator: 1,
    $asIterator: function($S, $T) {
      return [$T];
    }
  };
  H.TakeIterable.prototype = {
    get$iterator: function(_) {
      return H.TakeIterator$(J.get$iterator$ax(this._iterable), this._takeCount, H.getTypeArgumentByIndex(this, 0));
    }
  };
  H.EfficientLengthTakeIterable.prototype = {
    get$length: function(_) {
      var iterableLength = J.get$length$asx(this._iterable),
        t1 = this._takeCount;
      if (typeof iterableLength !== "number")
        return iterableLength.$gt();
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  H.TakeIterator.prototype = {
    TakeIterator$2: function(_iterator, _remaining, $E) {
    },
    moveNext$0: function() {
      var _this = this,
        t1 = H.intTypeCheck(J.$sub$n(_this._remaining, 1));
      _this._remaining = t1;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= 0)
        return _this._iterator.moveNext$0();
      _this._remaining = -1;
      return false;
    },
    get$current: function() {
      if (H.boolConversionCheck(J.$lt$n(this._remaining, 0)))
        return;
      return this._iterator.get$current();
    },
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  H.TakeWhileIterable.prototype = {};
  H.TakeWhileIterator.prototype = {};
  H.SkipIterable.prototype = {
    skip$1: function(_, count) {
      return H.SkipIterable$_(this._iterable, J.$add$ansx(this._skipCount, H._checkCount(H.intTypeCheck(count))), H.getTypeArgumentByIndex(this, 0));
    },
    get$iterator: function(_) {
      return H.SkipIterator$(J.get$iterator$ax(this._iterable), this._skipCount, H.getTypeArgumentByIndex(this, 0));
    }
  };
  H.EfficientLengthSkipIterable.prototype = {
    get$length: function(_) {
      var $length = J.$sub$n(J.get$length$asx(this._iterable), this._skipCount);
      if (typeof $length !== "number")
        return $length.$ge();
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1: function(_, count) {
      return H.EfficientLengthSkipIterable$_(this._iterable, J.$add$ansx(this._skipCount, H._checkCount(H.intTypeCheck(count))), H.getTypeArgumentByIndex(this, 0));
    },
    $isEfficientLengthIterable: 1
  };
  H.SkipIterator.prototype = {
    SkipIterator$2: function(_iterator, _skipCount, $E) {
    },
    moveNext$0: function() {
      var t2,
        t1 = this._iterator,
        i = 0;
      while (true) {
        t2 = this._skipCount;
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        t1.moveNext$0();
        ++i;
      }
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current: function() {
      return this._iterator.get$current();
    },
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  H.SkipWhileIterable.prototype = {};
  H.SkipWhileIterator.prototype = {};
  H.EmptyIterable.prototype = {
    get$iterator: function(_) {
      return C.C_EmptyIterator;
    },
    get$isEmpty: function(_) {
      return true;
    },
    get$length: function(_) {
      return 0;
    },
    get$last: function(_) {
      throw H.wrapException(H.IterableElementError_noElement());
    },
    elementAt$1: function(_, index) {
      throw H.wrapException(P.RangeError$range(H.intTypeCheck(index), 0, 0, "index", null));
    },
    contains$1: function(_, element) {
      return false;
    },
    join$1: function(_, separator) {
      H.stringTypeCheck(separator);
      return "";
    },
    map$1$1: function(_, f, $T) {
      H.functionTypeCheck(f, {func: 1, ret: $T, args: [H.getTypeArgumentByIndex(this, 0)]});
      return H.EmptyIterable$($T);
    },
    map$1: function($receiver, f) {
      return this.map$1$1($receiver, f, null);
    },
    skip$1: function(_, count) {
      P.RangeError_checkNotNegative(H.intTypeCheck(count), "count");
      return this;
    },
    take$1: function(_, count) {
      P.RangeError_checkNotNegative(H.intTypeCheck(count), "count");
      return this;
    },
    toList$1$growable: function(_, growable) {
      var t2,
        t1 = this.$ti;
      if (H.boolConversionCheck(H.boolTypeCheck(growable)))
        t1 = H.setRuntimeTypeInfo([], t1);
      else {
        t2 = new Array(0);
        t2.fixed$length = Array;
        t1 = H.setRuntimeTypeInfo(t2, t1);
      }
      return t1;
    }
  };
  H.EmptyIterator.prototype = {
    moveNext$0: function() {
      return false;
    },
    get$current: function() {
      return;
    },
    $isIterator: 1,
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  H.FollowedByIterable.prototype = {};
  H.EfficientLengthFollowedByIterable.prototype = {$isEfficientLengthIterable: 1};
  H.FollowedByIterator.prototype = {$isIterator: 1};
  H.WhereTypeIterable.prototype = {};
  H.WhereTypeIterator.prototype = {$isIterator: 1};
  H.IterableElementError.prototype = {};
  H.LinkedList.prototype = {};
  H.LinkedListEntry0.prototype = {};
  H._LinkedListIterator.prototype = {$isIterator: 1};
  H.FixedLengthListMixin.prototype = {
    set$length: function(receiver, newLength) {
      H.intTypeCheck(newLength);
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: function(receiver, value) {
      H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "FixedLengthListMixin", 0));
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    addAll$1: function(receiver, iterable) {
      H.assertSubtype(iterable, "$isIterable", [H.getRuntimeTypeArgumentIntercepted(this, receiver, "FixedLengthListMixin", 0)], "$asIterable");
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    clear$0: function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot clear a fixed-length list"));
    },
    removeLast$0: function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
    }
  };
  H.UnmodifiableListMixin.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  H.FixedLengthListBase.prototype = {$isFixedLengthListMixin: 1};
  H.UnmodifiableListBase.prototype = {$isUnmodifiableListMixin: 1};
  H._ListIndicesIterable.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asListIterable: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    }
  };
  H.ListMapView.prototype = {
    $asMapBase: function($E) {
      return [P.int, $E];
    },
    $asMapMixin: function($E) {
      return [P.int, $E];
    },
    $asUnmodifiableMapBase: function($E) {
      return [P.int, $E];
    },
    $as_UnmodifiableMapMixin: function($E) {
      return [P.int, $E];
    },
    $asMap: function($E) {
      return [P.int, $E];
    }
  };
  H.ReversedListIterable.prototype = {};
  H.UnmodifiableListError.prototype = {};
  H.NonGrowableListError.prototype = {};
  H.Sort.prototype = {};
  H.Symbol.prototype = {
    get$hashCode: function(_) {
      var t1,
        hash = this._hashCode;
      if (hash != null)
        return hash;
      t1 = J.get$hashCode$(this._name);
      if (typeof t1 !== "number")
        return H.iae(t1);
      hash = 536870911 & 664597 * t1;
      this._hashCode = hash;
      return hash;
    },
    toString$0: function(_) {
      return 'Symbol("' + H.S(this._name) + '")';
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof H.Symbol && H.boolConversionCheck(J.$eq$(this._name, other._name));
    },
    $isSymbol0: 1
  };
  H.__CastListBase__CastIterableBase_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    },
    $isListMixin: 1,
    $asListMixin: function($S, $T) {
      return [$T];
    },
    $isList: 1,
    $asList: function($S, $T) {
      return [$T];
    }
  };
  H.JsGetName.prototype = {};
  H.JsBuiltin.prototype = {};
  H.Native.prototype = {};
  H._Patch.prototype = {};
  H.ConstantMapView.prototype = {$isConstantMap: 1};
  H.ConstantMap.prototype = {
    get$isEmpty: function(_) {
      return J.$eq$(this.get$length(this), 0);
    },
    get$isNotEmpty: function(_) {
      return !H.boolConversionCheck(this.get$isEmpty(this));
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    $indexSet: function(_, key, val) {
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
      H.assertSubtypeOfRuntimeType(val, H.getTypeArgumentByIndex(this, 1));
      return H.ConstantMap__throwUnmodifiable();
    },
    $isMap: 1
  };
  H.ConstantStringMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    get$_keysArray: function() {
      return this._keys;
    },
    containsKey$1: function(key) {
      if (typeof key !== "string")
        return false;
      if ("__proto__" === key)
        return false;
      return H.jsHasOwnProperty(this.__js_helper$_jsObject, key);
    },
    $index: function(_, key) {
      if (!H.boolConversionCheck(this.containsKey$1(key)))
        return;
      return this._fetch$1(key);
    },
    _fetch$1: function(key) {
      return H.jsPropertyAccess(this.__js_helper$_jsObject, H.stringTypeCheck(key));
    },
    forEach$1: function(_, f) {
      var keys, t2, i, t3, key, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 1);
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(_this, 0), t1]});
      keys = _this.get$_keysArray();
      t2 = J.getInterceptor$asx(keys);
      i = 0;
      while (true) {
        t3 = t2.get$length(keys);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        key = t2.$index(keys, i);
        f.call$2(key, H.assertSubtypeOfRuntimeType(_this._fetch$1(key), t1));
        ++i;
      }
    },
    get$keys: function() {
      return H._ConstantMapKeyIterable$(this, H.getTypeArgumentByIndex(this, 0));
    },
    get$__js_helper$_length: function() {
      return this.__js_helper$_length;
    }
  };
  H.ConstantProtoMap.prototype = {};
  H._ConstantMapKeyIterable.prototype = {
    get$iterator: function(_) {
      return J.get$iterator$ax(this._map.get$_keysArray());
    },
    get$length: function(_) {
      return J.get$length$asx(this._map.get$_keysArray());
    }
  };
  H.GeneralConstantMap.prototype = {};
  H.Instantiation.prototype = {};
  H.Instantiation1.prototype = {};
  H.Instantiation2.prototype = {};
  H.Instantiation3.prototype = {};
  H.Instantiation4.prototype = {};
  H.Instantiation5.prototype = {};
  H.Instantiation6.prototype = {};
  H.Instantiation7.prototype = {};
  H.Instantiation8.prototype = {};
  H.Instantiation9.prototype = {};
  H.Instantiation10.prototype = {};
  H.Instantiation11.prototype = {};
  H.Instantiation12.prototype = {};
  H.Instantiation13.prototype = {};
  H.Instantiation14.prototype = {};
  H.Instantiation15.prototype = {};
  H.Instantiation16.prototype = {};
  H.Instantiation17.prototype = {};
  H.Instantiation18.prototype = {};
  H.Instantiation19.prototype = {};
  H.Instantiation20.prototype = {};
  H.InternalMap.prototype = {};
  H.JSInvocationMirror.prototype = {
    get$memberName: function() {
      var t1 = this.__js_helper$_memberName;
      if (!!J.getInterceptor$(t1).$isSymbol0)
        return t1;
      return this.__js_helper$_memberName = H.Symbol$unvalidated(H.stringTypeCheck(t1));
    },
    get$isGetter: function() {
      return J.$eq$(this._kind, 1);
    },
    get$isAccessor: function() {
      return !H.boolConversionCheck(J.$eq$(this._kind, 0));
    },
    get$positionalArguments: function() {
      var t1, t2, argumentCount, list, index, _this = this;
      if (H.boolConversionCheck(_this.get$isGetter()))
        return C.List_empty;
      t1 = _this._arguments;
      t2 = J.getInterceptor$asx(t1);
      argumentCount = J.$sub$n(J.$sub$n(t2.get$length(t1), J.get$length$asx(_this._namedArgumentNames)), _this._typeArgumentCount);
      if (argumentCount === 0)
        return C.List_empty;
      list = [];
      if (typeof argumentCount !== "number")
        return H.iae(argumentCount);
      index = 0;
      for (; index < argumentCount; ++index)
        list.push(t2.$index(t1, index));
      return J.JSArray_markUnmodifiableList(list);
    },
    get$namedArguments: function() {
      var t1, t2, namedArgumentCount, t3, t4, namedArgumentsStartIndex, t5, map, i, t6, _this = this;
      if (H.boolConversionCheck(_this.get$isAccessor()))
        return C.Map_empty;
      t1 = _this._namedArgumentNames;
      t2 = J.getInterceptor$asx(t1);
      namedArgumentCount = t2.get$length(t1);
      t3 = _this._arguments;
      t4 = J.getInterceptor$asx(t3);
      namedArgumentsStartIndex = J.$sub$n(J.$sub$n(t4.get$length(t3), namedArgumentCount), _this._typeArgumentCount);
      if (namedArgumentCount === 0)
        return C.Map_empty;
      t5 = P.Symbol0;
      map = H.JsLinkedHashMap_JsLinkedHashMap$es6(t5, null);
      if (typeof namedArgumentCount !== "number")
        return H.iae(namedArgumentCount);
      i = 0;
      for (; i < namedArgumentCount; ++i) {
        t6 = H.Symbol$unvalidated(H.stringTypeCheck(t2.$index(t1, i)));
        if (typeof namedArgumentsStartIndex !== "number")
          return namedArgumentsStartIndex.$add();
        map.$indexSet(0, t6, t4.$index(t3, namedArgumentsStartIndex + i));
      }
      return H.ConstantMapView$(map, t5, null);
    },
    $isInvocation: 1
  };
  H.Primitives.prototype = {};
  H.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2: function($name, argument) {
      var t1;
      H.stringTypeCheck($name);
      t1 = this._box_0;
      t1.names = H.S(t1.names) + "$" + H.S($name);
      J.add$1$ax(this.namedArgumentList, $name);
      J.add$1$ax(this.$arguments, argument);
      t1.argumentCount = J.$add$ansx(t1.argumentCount, 1);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 35
  };
  H.JsCache.prototype = {};
  H.TypeErrorDecoder.prototype = {
    matchTypeError$1: function(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return;
      result = Object.create(null);
      t1 = _this._arguments;
      if (!H.boolConversionCheck(J.$eq$(t1, -1)))
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (!H.boolConversionCheck(J.$eq$(t1, -1)))
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (!H.boolConversionCheck(J.$eq$(t1, -1)))
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (!H.boolConversionCheck(J.$eq$(t1, -1)))
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (!H.boolConversionCheck(J.$eq$(t1, -1)))
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  H.NullError.prototype = {
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      return "NoSuchMethodError: method not found: '" + H.S(t1) + "' on null";
    },
    $isNoSuchMethodError: 1
  };
  H.JsNoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(_this._message);
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + H.S(t1) + "' (" + H.S(_this._message) + ")";
      return _s38_ + H.S(t1) + "' on '" + H.S(t2) + "' (" + H.S(_this._message) + ")";
    },
    $isNoSuchMethodError: 1
  };
  H.UnknownJsTypeError.prototype = {
    toString$0: function(_) {
      var t1 = this._message;
      return H.boolConversionCheck(J.get$isEmpty$asx(t1)) ? "Error" : "Error: " + H.S(t1);
    }
  };
  H.ExceptionAndStackTrace.prototype = {};
  H.unwrapException_saveStackTrace.prototype = {
    call$1: function(error) {
      if (!!J.getInterceptor$(error).$isError)
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex;
      return error;
    },
    $signature: 4
  };
  H._StackTrace.prototype = {
    toString$0: function(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  H.Closure.prototype = {
    toString$0: function(_) {
      return "Closure '" + H.Primitives_objectTypeName(this).trim() + "'";
    },
    $isFunction: 1,
    get$$call: function() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  H.Closure_fromTearOff_closure.prototype = {$signature: 3};
  H.TearOffClosure.prototype = {};
  H.StaticClosure.prototype = {
    toString$0: function(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + H.S(H.unminifyOrTag($name)) + "'";
    }
  };
  H.BoundClosure.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof H.BoundClosure))
        return false;
      return _this._self === other._self && _this._target === other._target && _this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var receiverHashCode,
        t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      t1 = H.Primitives_objectHashCode(this._target);
      if (typeof receiverHashCode !== "number")
        return receiverHashCode.$xor();
      if (typeof t1 !== "number")
        return H.iae(t1);
      return (receiverHashCode ^ t1) >>> 0;
    },
    toString$0: function(_) {
      var receiver = this._receiver;
      if (receiver == null)
        receiver = this._self;
      return "Closure '" + H.S(this.__js_helper$_name) + "' of " + H.S(H.Primitives_objectToHumanReadableString(receiver));
    }
  };
  H.Creates.prototype = {};
  H.Returns.prototype = {};
  H.JSName.prototype = {};
  H.JavaScriptIndexingBehavior.prototype = {};
  H.TypeErrorImplementation.prototype = {
    toString$0: function(_) {
      return this.message;
    },
    $isAssertionError: 1,
    $isTypeError: 1
  };
  H.CastErrorImplementation.prototype = {
    toString$0: function(_) {
      return this.message;
    },
    $isCastError: 1
  };
  H.FallThroughErrorImplementation.prototype = {};
  H.RuntimeError.prototype = {
    toString$0: function(_) {
      return "RuntimeError: " + H.S(this.message);
    }
  };
  H.DeferredNotLoadedError.prototype = {$isNoSuchMethodError: 1};
  H.UnimplementedNoSuchMethodError.prototype = {$isNoSuchMethodError: 1};
  H.MainError.prototype = {$isNoSuchMethodError: 1};
  H._AssertionError.prototype = {
    toString$0: function(_) {
      return C.JSString_methods.$add("Assertion failed: ", P.Error_safeToString(this.message));
    }
  };
  H._UnreachableError.prototype = {};
  H.TypeImpl.prototype = {$isType: 1};
  H.TypeVariable.prototype = {};
  H.JsLinkedHashMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty: function(_) {
      return J.$eq$(this.__js_helper$_length, 0);
    },
    get$isNotEmpty: function(_) {
      return !H.boolConversionCheck(this.get$isEmpty(this));
    },
    get$keys: function() {
      return H.LinkedHashMapKeyIterable$(this, H.getTypeArgumentByIndex(this, 0));
    },
    containsKey$1: function(key) {
      var strings, nums, _this = this;
      if (H.boolConversionCheck(H.JsLinkedHashMap__isStringKey(key))) {
        strings = _this._strings;
        if (strings == null)
          return false;
        return _this._containsTableEntry$2(strings, key);
      } else if (H.boolConversionCheck(H.JsLinkedHashMap__isNumericKey(key))) {
        nums = _this._nums;
        if (nums == null)
          return false;
        return _this._containsTableEntry$2(nums, key);
      } else
        return _this.internalContainsKey$1(key);
    },
    internalContainsKey$1: function(key) {
      var rest = this._rest;
      if (rest == null)
        return false;
      return J.$ge$n(this.internalFindBucketIndex$2(this._getBucket$2(rest, key), key), 0);
    },
    $index: function(_, key) {
      var strings, cell, t1, nums, _this = this;
      if (H.boolConversionCheck(H.JsLinkedHashMap__isStringKey(key))) {
        strings = _this._strings;
        if (strings == null)
          return;
        cell = _this._getTableCell$2(strings, key);
        t1 = cell == null ? null : cell.hashMapCellValue;
        return t1;
      } else if (H.boolConversionCheck(H.JsLinkedHashMap__isNumericKey(key))) {
        nums = _this._nums;
        if (nums == null)
          return;
        cell = _this._getTableCell$2(nums, key);
        t1 = cell == null ? null : cell.hashMapCellValue;
        return t1;
      } else
        return _this.internalGet$1(key);
    },
    internalGet$1: function(key) {
      var bucket, index,
        rest = this._rest;
      if (rest == null)
        return;
      bucket = this._getBucket$2(rest, key);
      index = this.internalFindBucketIndex$2(bucket, key);
      if (typeof index !== "number")
        return index.$lt();
      if (index < 0)
        return;
      return bucket[index].hashMapCellValue;
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      if (H.boolConversionCheck(H.JsLinkedHashMap__isStringKey(key))) {
        strings = _this._strings;
        _this.__js_helper$_addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (H.boolConversionCheck(H.JsLinkedHashMap__isNumericKey(key))) {
        nums = _this._nums;
        _this.__js_helper$_addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2: function(key, value) {
      var rest, hash, bucket, index, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      rest = _this._rest;
      if (rest == null)
        rest = _this._rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      if (bucket == null)
        _this._setTableEntry$3(rest, hash, [_this._newLinkedCell$2(key, value)]);
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (typeof index !== "number")
          return index.$ge();
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications, t1, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(_this, 0), H.getTypeArgumentByIndex(_this, 1)]});
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        t1 = _this._modifications;
        if (modifications == null ? t1 != null : modifications !== t1)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    __js_helper$_addHashTableEntry$3: function(table, key, value) {
      var cell, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      cell = _this._getTableCell$2(table, key);
      if (cell == null)
        _this._setTableEntry$3(table, key, _this._newLinkedCell$2(key, value));
      else
        cell.hashMapCellValue = value;
    },
    _modified$0: function() {
      this._modifications = H.intTypeCheck(J.$and$n(J.$add$ansx(this._modifications, 1), 67108863));
    },
    _newLinkedCell$2: function(key, value) {
      var _this = this,
        cell = H.LinkedHashMapCell$(H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1)));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else
        _this._last = _this._last._next = cell;
      _this.__js_helper$_length = H.intTypeCheck(J.$add$ansx(_this.__js_helper$_length, 1));
      _this._modified$0();
      return cell;
    },
    internalComputeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    _getBucket$2: function(table, key) {
      return this._getTableBucket$2(table, this.internalComputeHashCode$1(key));
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (H.boolConversionCheck(J.$eq$(bucket[i].hashMapCellKey, key)))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    _getTableCell$2: function(table, key) {
      return table[key];
    },
    _getTableBucket$2: function(table, key) {
      return table[key];
    },
    _setTableEntry$3: function(table, key, value) {
      table[key] = value;
    },
    _deleteTableEntry$2: function(table, key) {
      delete table[key];
    },
    _containsTableEntry$2: function(table, key) {
      return this._getTableCell$2(table, key) != null;
    },
    _newHashTable$0: function() {
      var _s20_ = "<non-identifier-key>",
        table = Object.create(null);
      this._setTableEntry$3(table, _s20_, table);
      this._deleteTableEntry$2(table, _s20_);
      return table;
    },
    $isInternalMap: 1,
    $isLinkedHashMap: 1,
    get$__js_helper$_length: function() {
      return this.__js_helper$_length;
    },
    get$_first: function() {
      return this._first;
    },
    get$_modifications: function() {
      return this._modifications;
    }
  };
  H.Es6LinkedHashMap.prototype = {};
  H.LinkedHashMapCell.prototype = {
    get$hashMapCellKey: function() {
      return this.hashMapCellKey;
    },
    get$_next: function() {
      return this._next;
    }
  };
  H.LinkedHashMapKeyIterable.prototype = {
    get$length: function(_) {
      return H.intTypeCheck(this._map.get$__js_helper$_length());
    },
    get$isEmpty: function(_) {
      return J.$eq$(this._map.get$__js_helper$_length(), 0);
    },
    get$iterator: function(_) {
      var t1 = this._map;
      return H.LinkedHashMapKeyIterator$(t1, H.intTypeCheck(t1.get$_modifications()), H.getTypeArgumentByIndex(this, 0));
    },
    contains$1: function(_, element) {
      return H.boolTypeCheck(this._map.containsKey$1(element));
    }
  };
  H.LinkedHashMapKeyIterator.prototype = {
    LinkedHashMapKeyIterator$2: function(_map, _modifications, $E) {
      this._cell = H.interceptedTypeCheck(this._map.get$_first(), "$isLinkedHashMapCell");
    },
    get$current: function() {
      return this.__js_helper$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._map;
      if (!H.boolConversionCheck(J.$eq$(_this._modifications, t1.get$_modifications())))
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._cell;
        if (t1 == null) {
          _this.set$__js_helper$_current(null);
          return false;
        } else {
          _this.set$__js_helper$_current(t1.get$hashMapCellKey());
          _this._cell = H.interceptedTypeCheck(_this._cell.get$_next(), "$isLinkedHashMapCell");
          return true;
        }
      }
    },
    set$__js_helper$_current: function(_current) {
      this.__js_helper$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1,
    current$0: function() {
      return this.get$current().call$0();
    },
    get$_modifications: function() {
      return this._modifications;
    }
  };
  H.initHooks_closure.prototype = {
    call$1: function(o) {
      return this.getTag(o);
    },
    $signature: 4
  };
  H.initHooks_closure0.prototype = {
    call$2: function(o, tag) {
      return this.getUnknownTag(o, H.stringTypeCheck(tag));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 54
  };
  H.initHooks_closure1.prototype = {
    call$1: function(tag) {
      return this.prototypeForTag(H.stringTypeCheck(tag));
    },
    $signature: 30
  };
  H.JSSyntaxRegExp.prototype = {$isPattern: 1, $isRegExp: 1};
  H._MatchImplementation.prototype = {$isMatch: 1, $isRegExpMatch: 1};
  H._AllMatchesIterable.prototype = {
    $asIterableBase: function() {
      return [P.Match];
    },
    $asIterable: function() {
      return [P.Match];
    }
  };
  H._AllMatchesIterator.prototype = {$isIterator: 1,
    $asIterator: function() {
      return [P.Match];
    }
  };
  H.StringMatch.prototype = {
    $index: function(_, g) {
      return this.group$1(H.intTypeCheck(g));
    },
    group$1: function(group_) {
      H.intTypeCheck(group_);
      if (group_ !== 0)
        throw H.wrapException(P.RangeError$value(group_, null));
      return this.pattern;
    },
    $isMatch: 1
  };
  H._StringAllMatchesIterable.prototype = {
    get$iterator: function(_) {
      return H._StringAllMatchesIterator$(this._input, this._pattern, this.__js_helper$_index);
    },
    $asIterable: function() {
      return [P.Match];
    }
  };
  H._StringAllMatchesIterator.prototype = {
    moveNext$0: function() {
      var index, t5, end, _this = this,
        t1 = _this._pattern,
        t2 = J.getInterceptor$asx(t1),
        t3 = _this._input,
        t4 = J.getInterceptor$asx(t3);
      if (H.boolConversionCheck(J.$gt$n(J.$add$ansx(_this.__js_helper$_index, t2.get$length(t1)), t4.get$length(t3)))) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = H.stringIndexOfStringUnchecked(t3, t1, _this.__js_helper$_index);
      t5 = J.getInterceptor$n(index);
      if (H.boolConversionCheck(H.boolTypeCheck(t5.$lt(index, 0)))) {
        _this.__js_helper$_index = H.intTypeCheck(J.$add$ansx(t4.get$length(t3), 1));
        _this.__js_helper$_current = null;
        return false;
      }
      end = H.intTypeCheck(t5.$add(index, t2.get$length(t1)));
      _this.__js_helper$_current = H.StringMatch$(H.intTypeCheck(index), t3, t1);
      t1 = _this.__js_helper$_index;
      if (end == null ? t1 == null : end === t1) {
        if (typeof end !== "number")
          return end.$add();
        ++end;
      }
      _this.__js_helper$_index = end;
      return true;
    },
    get$current: function() {
      return this.__js_helper$_current;
    },
    $isIterator: 1,
    $asIterator: function() {
      return [P.Match];
    },
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  H._LazyMangledNamesMap.prototype = {};
  H._LazyMangledInstanceNamesMap.prototype = {};
  H._LazyReflectiveNamesMap.prototype = {};
  H.SupportedBrowser.prototype = {};
  H.Experimental.prototype = {};
  H.DomName.prototype = {};
  H.DocsEditable.prototype = {};
  H.Unstable.prototype = {};
  H.NativeByteBuffer.prototype = {$isNativeByteBuffer: 1, $isByteBuffer: 1};
  H.NativeFloat32x4List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float32x4];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.Float32x4];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Float32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float32x4];
    },
    $isTypedData: 1,
    $isFloat32x4List: 1
  };
  H.NativeInt32x4List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Int32x4];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.Int32x4];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Int32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Int32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Int32x4];
    },
    $isTypedData: 1,
    $isInt32x4List: 1
  };
  H.NativeFloat64x2List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float64x2];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.Float64x2];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Float64x2];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float64x2];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float64x2];
    },
    $isTypedData: 1,
    $isFloat64x2List: 1
  };
  H.NativeTypedData.prototype = {$isNativeTypedData: 1, $isTypedData: 1};
  H.NativeByteData.prototype = {$isNativeByteData: 1, $isByteData: 1};
  H.NativeTypedArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $asJSIndexable: function() {
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
    }
  };
  H.NativeTypedArrayOfDouble.prototype = {
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.doubleTypeCheck(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.double];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.double];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.double];
    },
    $isList: 1,
    $asList: function() {
      return [P.double];
    }
  };
  H.NativeTypedArrayOfInt.prototype = {
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.intTypeCheck(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.int];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    }
  };
  H.NativeFloat32List.prototype = {$isNativeFloat32List: 1, $is_TypedFloatList: 1, $isFloat32List: 1};
  H.NativeFloat64List.prototype = {$isNativeFloat64List: 1, $is_TypedFloatList: 1, $isFloat64List: 1};
  H.NativeInt16List.prototype = {
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeInt16List: 1,
    $is_TypedIntList: 1,
    $isInt16List: 1
  };
  H.NativeInt32List.prototype = {
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeInt32List: 1,
    $is_TypedIntList: 1,
    $isInt32List: 1
  };
  H.NativeInt8List.prototype = {
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeInt8List: 1,
    $is_TypedIntList: 1,
    $isInt8List: 1
  };
  H.NativeUint16List.prototype = {
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeUint16List: 1,
    $is_TypedIntList: 1,
    $isUint16List: 1
  };
  H.NativeUint32List.prototype = {
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeUint32List: 1,
    $is_TypedIntList: 1,
    $isUint32List: 1
  };
  H.NativeUint8ClampedList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeUint8ClampedList: 1,
    $is_TypedIntList: 1,
    $isUint8ClampedList: 1
  };
  H.NativeUint8List.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeUint8List: 1,
    $is_TypedIntList: 1,
    $isUint8List: 1
  };
  H.NativeFloat32x4.prototype = {$isFloat32x4: 1};
  H.NativeInt32x4.prototype = {$isInt32x4: 1};
  H.NativeFloat64x2.prototype = {$isFloat64x2: 1};
  H._NativeFloat32x4List_Object_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float32x4];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Float32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float32x4];
    }
  };
  H._NativeFloat32x4List_Object_ListMixin_FixedLengthListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float32x4];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.Float32x4];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Float32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float32x4];
    }
  };
  H._NativeFloat64x2List_Object_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float64x2];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Float64x2];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float64x2];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float64x2];
    }
  };
  H._NativeFloat64x2List_Object_ListMixin_FixedLengthListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float64x2];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.Float64x2];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Float64x2];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float64x2];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float64x2];
    }
  };
  H._NativeInt32x4List_Object_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Int32x4];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Int32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Int32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Int32x4];
    }
  };
  H._NativeInt32x4List_Object_ListMixin_FixedLengthListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Int32x4];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.Int32x4];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Int32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Int32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Int32x4];
    }
  };
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.double];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.double];
    },
    $isList: 1,
    $asList: function() {
      return [P.double];
    }
  };
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.double];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.double];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.double];
    },
    $isList: 1,
    $asList: function() {
      return [P.double];
    }
  };
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    }
  };
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isFixedLengthListMixin: 1,
    $asFixedLengthListMixin: function() {
      return [P.int];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    }
  };
  P._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1: function(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 1
  };
  P._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1: function(callback) {
      var t1, t2;
      this._box_0.storedCallback = H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 25
  };
  P._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._TimerImpl.prototype = {
    _TimerImpl$2: function(milliseconds, callback) {
      if (H.boolConversionCheck(P._hasTimer()))
        self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
    },
    set$_handle: function(_handle) {
      H.intTypeCheck(_handle);
    },
    set$_tick: function(_tick) {
      H.intTypeCheck(_tick);
    },
    $isTimer: 1
  };
  P._TimerImpl_internalCallback.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1.set$_handle(null);
      t1.set$_tick(1);
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncAwaitCompleter.prototype = {$isCompleter: 1};
  P._AsyncStarStreamController.prototype = {};
  P._IterationMarker.prototype = {};
  P._SyncStarIterator.prototype = {$isIterator: 1};
  P._SyncStarIterable.prototype = {};
  P._BroadcastStream.prototype = {};
  P._BroadcastSubscription.prototype = {
    _BroadcastSubscription$5: function(controller, onData, onError, onDone, cancelOnError, $T) {
      var _this = this;
      _this.set$_previous(_this);
      _this.set$_async$_next(_this);
    },
    _expectsEvent$1: function(eventId) {
      H.intTypeCheck(eventId);
      return J.$eq$(J.$and$n(this._eventState, 1), eventId);
    },
    _toggleEventId$0: function() {
      this._eventState = H.intTypeCheck(J.$xor$n(this._eventState, 1));
    },
    get$_removeAfterFiring: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this._eventState, 4), 0));
    },
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    set$_async$_next: function(_next) {
      this._async$_next = H.assertSubtype(_next, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    },
    set$_previous: function(_previous) {
      this._previous = H.assertSubtype(_previous, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    }
  };
  P._BroadcastStreamController.prototype = {
    get$stream: function(_) {
      return P._BroadcastStream$(this, H.getTypeArgumentByIndex(this, 0));
    },
    get$isClosed: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this._state, 4), 0));
    },
    get$_hasOneListener: function() {
      var t1 = this._firstSubscription,
        t2 = this._lastSubscription;
      return t1 == null ? t2 == null : t1 === t2;
    },
    get$_isFiring: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this._state, 2), 0));
    },
    get$_mayAddEvent: function() {
      return J.$lt$n(this._state, 4);
    },
    get$_isEmpty: function() {
      return this._firstSubscription == null;
    },
    _addListener$1: function(subscription) {
      var oldLast, _this = this;
      H.assertSubtype(subscription, "$is_BroadcastSubscription", _this.$ti, "$as_BroadcastSubscription");
      subscription._eventState = H.intTypeCheck(J.$and$n(_this._state, 1));
      oldLast = _this._lastSubscription;
      _this.set$_lastSubscription(subscription);
      subscription.set$_async$_next(null);
      subscription.set$_previous(oldLast);
      if (oldLast == null)
        _this.set$_firstSubscription(subscription);
      else
        oldLast.set$_async$_next(subscription);
    },
    _removeListener$1: function(subscription) {
      var previous, next;
      H.assertSubtype(subscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      previous = subscription._previous;
      next = subscription._async$_next;
      if (previous == null)
        this.set$_firstSubscription(next);
      else
        previous.set$_async$_next(next);
      if (next == null)
        this.set$_lastSubscription(previous);
      else
        next.set$_previous(previous);
      subscription.set$_previous(subscription);
      subscription.set$_async$_next(subscription);
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var subscription, t2, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.interceptedTypeCheck(onError, "$isFunction");
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      H.boolTypeCheck(cancelOnError);
      if (H.boolConversionCheck(_this.get$isClosed()))
        return P._DoneStreamSubscription$(onDone == null ? P.async___nullDoneHandler$closure() : onDone, t1);
      subscription = P._BroadcastSubscription$(_this, onData, onError, onDone, cancelOnError, t1);
      _this._addListener$1(H.assertSubtype(subscription, "$is_BroadcastSubscription", _this.$ti, "$as_BroadcastSubscription"));
      t1 = _this._firstSubscription;
      t2 = _this._lastSubscription;
      if (t1 == null ? t2 == null : t1 === t2)
        P._runGuarded(_this.onListen);
      return subscription;
    },
    _recordPause$1: function(subscription) {
      H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
    },
    _recordResume$1: function(subscription) {
      H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
    },
    _addEventError$0: function() {
      if (H.boolConversionCheck(this.get$isClosed()))
        return P.StateError$("Cannot add new events after calling close");
      return P.StateError$("Cannot add new events while doing an addStream");
    },
    add$1: function(_, data) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(_this, 0));
      if (!H.boolConversionCheck(_this.get$_mayAddEvent()))
        throw H.wrapException(_this._addEventError$0());
      _this._sendData$1(data);
    },
    _forEachListener$1: function(action) {
      var id, subscription, next, _this = this, _4294967293 = 4294967293;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(_this, 0)]]});
      if (H.boolConversionCheck(_this.get$_isFiring()))
        throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
      if (H.boolConversionCheck(_this.get$_isEmpty()))
        return;
      id = J.$and$n(_this._state, 1);
      _this._state = H.intTypeCheck(J.$xor$n(_this._state, 3));
      subscription = _this._firstSubscription;
      for (; subscription != null;)
        if (H.boolConversionCheck(subscription._expectsEvent$1(id))) {
          subscription._eventState = H.intTypeCheck(J.$or$n(subscription._eventState, 2));
          action.call$1(subscription);
          subscription._toggleEventId$0();
          next = subscription._async$_next;
          if (H.boolConversionCheck(subscription.get$_removeAfterFiring()))
            _this._removeListener$1(subscription);
          subscription._eventState = H.intTypeCheck(J.$and$n(subscription._eventState, _4294967293));
          subscription = next;
        } else
          subscription = subscription._async$_next;
      _this._state = H.intTypeCheck(J.$and$n(_this._state, _4294967293));
      if (H.boolConversionCheck(_this.get$_isEmpty()))
        _this._callOnCancel$0();
    },
    _callOnCancel$0: function() {
      if (H.boolConversionCheck(this.get$isClosed()) && H.boolConversionCheck(null.get$_mayComplete()))
        null._asyncComplete$1(null);
      P._runGuarded(this.onCancel);
    },
    set$_state: function(_state) {
      this._state = H.intTypeCheck(_state);
    },
    set$_firstSubscription: function(_firstSubscription) {
      this._firstSubscription = H.assertSubtype(_firstSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    },
    set$_lastSubscription: function(_lastSubscription) {
      this._lastSubscription = H.assertSubtype(_lastSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    },
    $isEventSink: 1,
    $isStreamConsumer: 1,
    $isStreamSink: 1,
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_StreamControllerBase: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1,
    $isSink: 1,
    get$_state: function() {
      return this._state;
    }
  };
  P._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent: function() {
      return H.boolConversionCheck(P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this)) && !H.boolConversionCheck(this.get$_isFiring());
    },
    _addEventError$0: function() {
      if (H.boolConversionCheck(this.get$_isFiring()))
        return P.StateError$("Cannot fire new event. Controller is already firing an event");
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1: function(data) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(_this, 0));
      if (H.boolConversionCheck(_this.get$_isEmpty()))
        return;
      if (H.boolConversionCheck(_this.get$_hasOneListener())) {
        _this._state = H.intTypeCheck(J.$or$n(_this._state, 2));
        _this._firstSubscription._add$1(data);
        _this._state = H.intTypeCheck(J.$and$n(_this._state, 4294967293));
        if (H.boolConversionCheck(_this.get$_isEmpty()))
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    $isSynchronousStreamController: 1
  };
  P._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1: function(subscription) {
      H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._add$1(this.data);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
    }
  };
  P._AsyncBroadcastStreamController.prototype = {
    _sendData$1: function(data) {
      var subscription,
        t1 = H.getTypeArgumentByIndex(this, 0);
      H.assertSubtypeOfRuntimeType(data, t1);
      for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(P._DelayedData$(data, t1));
    }
  };
  P._AsBroadcastStreamController.prototype = {};
  P.DeferredLibrary.prototype = {};
  P.DeferredLoadException.prototype = {$isException: 1};
  P.FutureOr.prototype = {};
  P.Future.prototype = {};
  P.TimeoutException.prototype = {$isException: 1};
  P.Completer.prototype = {};
  P._Completer.prototype = {
    completeError$1: function(error) {
      var replacement, stackTrace;
      error = P._nonNullError(error);
      if (!H.boolConversionCheck(this.future.get$_mayComplete()))
        throw H.wrapException(P.StateError$("Future already completed"));
      replacement = P.Zone_current().errorCallback$2(error, null);
      if (replacement != null) {
        error = P._nonNullError(replacement.error);
        stackTrace = replacement.stackTrace;
      } else
        stackTrace = null;
      this._completeError$2(error, stackTrace);
    },
    $isCompleter: 1,
    get$future: function() {
      return this.future;
    }
  };
  P._AsyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1;
      H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
      t1 = this.future;
      if (!H.boolConversionCheck(t1.get$_mayComplete()))
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0: function($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._asyncCompleteError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
    }
  };
  P._SyncCompleter.prototype = {};
  P._FutureListener.prototype = {
    get$_zone: function() {
      return this.result.get$_zone();
    },
    get$handlesValue: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this.state, 1), 0));
    },
    get$handlesError: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this.state, 2), 0));
    },
    get$hasErrorTest: function() {
      return J.$eq$(this.state, 6);
    },
    get$handlesComplete: function() {
      return J.$eq$(this.state, 8);
    },
    get$_onValue: function() {
      return H.functionTypeCheck(this.callback, {func: 1, ret: {futureOr: 1, type: H.getTypeArgumentByIndex(this, 1)}, args: [H.getTypeArgumentByIndex(this, 0)]});
    },
    get$_onError: function() {
      return this.errorCallback;
    },
    get$_errorTest: function() {
      return H.functionTypeCheck(this.callback, {func: 1, ret: P.bool, args: [P.Object]});
    },
    get$_whenCompleteAction: function() {
      return H.functionTypeCheck(this.callback, {func: 1});
    },
    get$hasErrorCallback: function() {
      return this.get$_onError() != null;
    },
    handleValue$1: function(sourceResult) {
      var _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.assertSubtypeOfRuntimeType(sourceResult, t1);
      return _this.get$_zone().runUnary$2$2(_this.get$_onValue(), sourceResult, {futureOr: 1, type: H.getTypeArgumentByIndex(_this, 1)}, t1);
    },
    matchesErrorTest$1: function(asyncError) {
      H.interceptedTypeCheck(asyncError, "$isAsyncError");
      if (!H.boolConversionCheck(this.get$hasErrorTest()))
        return true;
      return this.get$_zone().runUnary$2$2(this.get$_errorTest(), asyncError.error, P.bool, P.Object);
    },
    handleError$1: function(asyncError) {
      var errorCallback, t1, t2, _this = this;
      H.interceptedTypeCheck(asyncError, "$isAsyncError");
      errorCallback = _this.errorCallback;
      t1 = P.Object;
      t2 = {futureOr: 1, type: H.getTypeArgumentByIndex(_this, 1)};
      if (H.functionTypeTest(errorCallback, {func: 1, args: [P.Object, P.StackTrace]}))
        return H.futureOrCheck(_this.get$_zone().runBinary$3$3(errorCallback, asyncError.error, asyncError.stackTrace, null, t1, P.StackTrace), t2);
      else
        return H.futureOrCheck(_this.get$_zone().runUnary$2$2(H.functionTypeCheck(errorCallback, {func: 1, args: [P.Object]}), asyncError.error, null, t1), t2);
    },
    handleWhenComplete$0: function() {
      return this.get$_zone().run$1$1(this.get$_whenCompleteAction(), null);
    },
    errorCallback$2: function(arg0, arg1) {
      return this.errorCallback.call$2(arg0, arg1);
    }
  };
  P._Future.prototype = {
    get$_mayComplete: function() {
      return J.$eq$(this._state, 0);
    },
    get$_mayAddListener: function() {
      return J.$le$n(this._state, 1);
    },
    get$_isChained: function() {
      return J.$eq$(this._state, 2);
    },
    get$_isComplete: function() {
      return J.$ge$n(this._state, 4);
    },
    get$_hasError: function() {
      return J.$eq$(this._state, 8);
    },
    _setChained$1: function(source) {
      H.interceptedTypeCheck(source, "$is_Future");
      this._state = 2;
      this._resultOrListeners = source;
    },
    then$1$2$onError: function(f, onError, $R) {
      var currentZone,
        t1 = H.getTypeArgumentByIndex(this, 0);
      H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $R}, args: [t1]});
      H.interceptedTypeCheck(onError, "$isFunction");
      currentZone = P.Zone_current();
      if (currentZone !== C.C__RootZone) {
        f = currentZone.registerUnaryCallback$2$1(f, {futureOr: 1, type: $R}, t1);
        if (onError != null)
          onError = P._registerErrorHandler(onError, currentZone);
      }
      return this._thenNoZoneRegistration$1$2(f, onError, $R);
    },
    then$2$onError: function(f, onError) {
      return this.then$1$2$onError(f, onError, null);
    },
    then$1$1: function(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenNoZoneRegistration$1$2: function(f, onError, $E) {
      var result,
        t1 = H.getTypeArgumentByIndex(this, 0);
      H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $E}, args: [t1]});
      H.interceptedTypeCheck(onError, "$isFunction");
      result = P._Future$($E);
      this._addListener$1(P._FutureListener$then(result, f, onError, t1, $E));
      return result;
    },
    _thenNoZoneRegistration$2: function(f, onError) {
      return this._thenNoZoneRegistration$1$2(f, onError, null);
    },
    catchError$1: function(onError) {
      var t1, result, t2;
      H.interceptedTypeCheck(onError, "$isFunction");
      t1 = H.getTypeArgumentByIndex(this, 0);
      result = P._Future$(t1);
      t2 = result._zone;
      if (t2 !== C.C__RootZone)
        onError = P._registerErrorHandler(onError, t2);
      this._addListener$1(P._FutureListener$catchError(result, onError, null, t1, t1));
      return result;
    },
    _setPendingComplete$0: function() {
      this._state = 1;
    },
    _clearPendingComplete$0: function() {
      this._state = 0;
    },
    get$_error: function() {
      return H.interceptedTypeCheck(this._resultOrListeners, "$isAsyncError");
    },
    get$_chainSource: function() {
      return H.interceptedTypeCheck(this._resultOrListeners, "$is_Future");
    },
    _setValue$1: function(value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      this._state = 4;
      this._resultOrListeners = value;
    },
    _setErrorObject$1: function(error) {
      H.interceptedTypeCheck(error, "$isAsyncError");
      this._state = 8;
      this._resultOrListeners = error;
    },
    _setError$2: function(error, stackTrace) {
      this._setErrorObject$1(P.AsyncError$(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
    },
    _cloneResult$1: function(source) {
      H.interceptedTypeCheck(source, "$is_Future");
      this._state = H.intTypeCheck(source._state);
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1: function(listener) {
      var source, _this = this;
      H.interceptedTypeCheck(listener, "$is_FutureListener");
      if (H.boolConversionCheck(_this.get$_mayAddListener())) {
        listener._nextListener = H.interceptedTypeCheck(_this._resultOrListeners, "$is_FutureListener");
        _this._resultOrListeners = listener;
      } else {
        if (H.boolConversionCheck(_this.get$_isChained())) {
          source = _this.get$_chainSource();
          if (!H.boolConversionCheck(source.get$_isComplete())) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        _this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1: function(listeners) {
      var existingListeners, cursor, cursor0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      H.interceptedTypeCheck(listeners, "$is_FutureListener");
      if (listeners == null)
        return;
      if (H.boolConversionCheck(_this.get$_mayAddListener())) {
        existingListeners = H.interceptedTypeCheck(_this._resultOrListeners, "$is_FutureListener");
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          for (cursor = listeners; cursor0 = cursor._nextListener, cursor0 != null; cursor = cursor0)
            ;
          cursor._nextListener = existingListeners;
        }
      } else {
        if (H.boolConversionCheck(_this.get$_isChained())) {
          source = _this.get$_chainSource();
          if (!H.boolConversionCheck(source.get$_isComplete())) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        _this._zone.scheduleMicrotask$1(new P._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0: function() {
      var current = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1: function(listeners) {
      var current, prev, next;
      H.interceptedTypeCheck(listeners, "$is_FutureListener");
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1: function(value) {
      var t2, listeners, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.futureOrCheck(value, {futureOr: 1, type: t1});
      t2 = _this.$ti;
      if (H.checkSubtype(value, "$isFuture", t2, "$asFuture"))
        if (H.checkSubtype(value, "$is_Future", t2, null))
          P._Future__chainCoreFuture(value, _this);
        else
          P._Future__chainForeignFuture(value, _this);
      else {
        listeners = _this._removeListeners$0();
        _this._setValue$1(H.assertSubtypeOfRuntimeType(value, t1));
        P._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1: function(value) {
      var listeners, _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      listeners = _this._removeListeners$0();
      _this._setValue$1(value);
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2: function(error, stackTrace) {
      var listeners;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      listeners = this._removeListeners$0();
      this._setError$2(error, stackTrace);
      P._Future__propagateToListeners(this, listeners);
    },
    _completeError$1: function(error) {
      return this._completeError$2(error, null);
    },
    _asyncComplete$1: function(value) {
      var _this = this;
      H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(_this, 0)});
      if (H.checkSubtype(value, "$isFuture", _this.$ti, "$asFuture")) {
        _this._chainFuture$1(value);
        return;
      }
      _this._setPendingComplete$0();
      _this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(_this, value));
    },
    _chainFuture$1: function(value) {
      var _this = this,
        t1 = _this.$ti;
      H.assertSubtype(value, "$isFuture", t1, "$asFuture");
      if (H.checkSubtype(value, "$is_Future", t1, null)) {
        if (H.boolConversionCheck(value.get$_hasError())) {
          _this._setPendingComplete$0();
          _this._zone.scheduleMicrotask$1(new P._Future__chainFuture_closure(_this, value));
        } else
          P._Future__chainCoreFuture(value, _this);
        return;
      }
      P._Future__chainForeignFuture(value, _this);
    },
    _asyncCompleteError$2: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      this._setPendingComplete$0();
      this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    set$_state: function(_state) {
      this._state = H.intTypeCheck(_state);
    },
    $isFuture: 1,
    get$_state: function() {
      return this._state;
    },
    get$_zone: function() {
      return this._zone;
    },
    get$_resultOrListeners: function() {
      return this._resultOrListeners;
    }
  };
  P._Future__addListener_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this.listener);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._Future__prependListeners_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._Future__chainForeignFuture_closure.prototype = {
    call$1: function(value) {
      var t1 = this.target;
      t1._clearPendingComplete$0();
      t1._complete$1(value);
    },
    $signature: 1
  };
  P._Future__chainForeignFuture_closure0.prototype = {
    call$2: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      this.target._completeError$2(error, stackTrace);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 57
  };
  P._Future__chainForeignFuture_closure1.prototype = {
    call$0: function() {
      this.target._completeError$2(this.e, this.s);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._Future__asyncComplete_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._completeWithValue$1(H.assertSubtypeOfRuntimeType(this.value, H.getTypeArgumentByIndex(t1, 0)));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._Future__chainFuture_closure.prototype = {
    call$0: function() {
      P._Future__chainCoreFuture(this.value, this.$this);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._Future__asyncCompleteError_closure.prototype = {
    call$0: function() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0: function() {
      var e, s, exception, t1, t2, originalSource, _this = this, completeResult = null;
      try {
        completeResult = _this.listener.handleWhenComplete$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (H.boolConversionCheck(_this.hasError)) {
          t1 = J.get$error$z(_this._box_1.source.get$_error());
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = _this._box_1.source.get$_error();
        else
          t2.listenerValueOrError = P.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (!!J.getInterceptor$(completeResult).$isFuture) {
        if (completeResult instanceof P._Future && H.boolConversionCheck(completeResult.get$_isComplete())) {
          if (H.boolConversionCheck(completeResult.get$_hasError())) {
            t1 = _this._box_0;
            t1.listenerValueOrError = completeResult.get$_error();
            t1.listenerHasError = true;
          }
          return;
        }
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), null);
        t1.listenerHasError = false;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1: function(_) {
      return this.originalSource;
    },
    $signature: 66
  };
  P._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0: function() {
      var e, s, exception, t1, _this = this;
      try {
        _this._box_0.listenerValueOrError = _this.listener.handleValue$1(_this.sourceResult);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_0;
        t1.listenerValueOrError = P.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__propagateToListeners_handleError.prototype = {
    call$0: function() {
      var asyncError, e, s, t1, t2, exception, t3, t4, _this = this;
      try {
        asyncError = _this._box_1.source.get$_error();
        t1 = _this.listener;
        if (H.boolConversionCheck(t1.matchesErrorTest$1(asyncError)) && H.boolConversionCheck(t1.get$hasErrorCallback())) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1.handleError$1(asyncError);
          t2.listenerHasError = false;
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_1;
        t2 = J.get$error$z(t1.source.get$_error());
        t3 = e;
        t4 = _this._box_0;
        if (t2 == null ? t3 == null : t2 === t3)
          t4.listenerValueOrError = t1.source.get$_error();
        else
          t4.listenerValueOrError = P.AsyncError$(e, s);
        t4.listenerHasError = true;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncCallbackEntry.prototype = {
    set$next: function(next) {
      this.next = H.interceptedTypeCheck(next, "$is_AsyncCallbackEntry");
    },
    get$next: function() {
      return this.next;
    }
  };
  P._AsyncRun.prototype = {};
  P.Stream.prototype = {
    get$length: function(_) {
      var t1 = {},
        future = P._Future$(P.int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  };
  P.Stream_length_closure.prototype = {
    call$1: function(_) {
      var t1;
      H.assertSubtypeOfRuntimeType(_, H.getTypeArgumentByIndex(this.$this, 0));
      t1 = this._box_0;
      t1.count = J.$add$ansx(t1.count, 1);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [H.getTypeArgumentByIndex(this.$this, 0)]};
    }
  };
  P.Stream_length_closure0.prototype = {
    call$0: function() {
      this.future._complete$1(this._box_0.count);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P.StreamSubscription.prototype = {};
  P.EventSink.prototype = {$isSink: 1};
  P.StreamView.prototype = {};
  P.StreamConsumer.prototype = {};
  P.StreamSink.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isSink: 1};
  P.StreamTransformer.prototype = {};
  P.StreamTransformerBase.prototype = {$isStreamTransformer: 1};
  P.StreamIterator.prototype = {};
  P._ControllerEventSinkWrapper.prototype = {$isEventSink: 1, $isSink: 1};
  P.StreamController.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isSink: 1};
  P.SynchronousStreamController.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isStreamController: 1, $isSink: 1};
  P._StreamControllerLifecycle.prototype = {};
  P._StreamControllerBase.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isStreamController: 1, $is_StreamControllerLifecycle: 1, $is_EventSink: 1, $is_EventDispatch: 1, $isSink: 1};
  P._StreamController.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isStreamController: 1, $is_StreamControllerLifecycle: 1, $is_StreamControllerBase: 1, $is_EventSink: 1, $is_EventDispatch: 1, $isSink: 1};
  P._SyncStreamControllerDispatch.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isStreamController: 1, $isSynchronousStreamController: 1, $is_StreamControllerLifecycle: 1, $is_StreamControllerBase: 1, $is_StreamController: 1, $is_EventSink: 1, $is_EventDispatch: 1, $isSink: 1};
  P._AsyncStreamControllerDispatch.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isStreamController: 1, $is_StreamControllerLifecycle: 1, $is_StreamControllerBase: 1, $is_StreamController: 1, $is_EventSink: 1, $is_EventDispatch: 1, $isSink: 1};
  P._AsyncStreamController.prototype = {$is_AsyncStreamControllerDispatch: 1};
  P._SyncStreamController.prototype = {$isSynchronousStreamController: 1, $is_SyncStreamControllerDispatch: 1};
  P._ControllerStream.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      return this._async$_controller._subscribe$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), H.interceptedTypeCheck(onError, "$isFunction"), H.functionTypeCheck(onDone, {func: 1, ret: -1}), H.boolTypeCheck(cancelOnError));
    },
    get$hashCode: function(_) {
      return J.$xor$n(J.get$hashCode$(this._async$_controller), 892482866);
    },
    $eq: function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof P._ControllerStream) {
        t1 = other._async$_controller;
        t2 = this._async$_controller;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    }
  };
  P._ControllerSubscription.prototype = {
    _onPause$0: function() {
      this._async$_controller._recordPause$1(this);
    },
    _onResume$0: function() {
      this._async$_controller._recordResume$1(this);
    }
  };
  P._StreamSinkWrapper.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isSink: 1};
  P._AddStreamState.prototype = {};
  P._StreamControllerAddStreamState.prototype = {};
  P._EventSink.prototype = {};
  P._EventDispatch.prototype = {};
  P._BufferingStreamSubscription.prototype = {
    _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
      this.onData$1(onData);
      this.onError$1(0, onError);
      this.onDone$1(onDone);
    },
    onData$1: function(handleData) {
      var t1 = H.getTypeArgumentByIndex(this, 0);
      H.functionTypeCheck(handleData, {func: 1, ret: -1, args: [t1]});
      if (handleData == null)
        handleData = P.async___nullDataHandler$closure();
      this.set$_onData(this._zone.registerUnaryCallback$2$1(handleData, null, t1));
    },
    onError$1: function(_, handleError) {
      H.interceptedTypeCheck(handleError, "$isFunction");
      if (handleError == null)
        handleError = P.async___nullErrorHandler$closure();
      if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}))
        H.interceptedTypeCheck(this._zone.registerBinaryCallback$3$1(handleError, null, P.Object, P.StackTrace), "$isFunction");
      else if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object]}))
        H.interceptedTypeCheck(this._zone.registerUnaryCallback$2$1(handleError, null, P.Object), "$isFunction");
      else
        throw H.wrapException(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
    },
    onDone$1: function(handleDone) {
      H.functionTypeCheck(handleDone, {func: 1, ret: -1});
      if (handleDone == null)
        handleDone = P.async___nullDoneHandler$closure();
      this.set$_onDone(this._zone.registerCallback$1$1(handleDone, -1));
    },
    get$_isInputPaused: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this._state, 4), 0));
    },
    get$_isCanceled: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this._state, 8), 0));
    },
    get$_hasPending: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this._state, 64), 0));
    },
    get$_isPaused: function() {
      return J.$ge$n(this._state, 128);
    },
    get$_canFire: function() {
      return J.$lt$n(this._state, 32);
    },
    get$_mayResumeInput: function() {
      if (!H.boolConversionCheck(this.get$_isPaused())) {
        var t1 = this._pending;
        t1 = t1 == null || H.boolConversionCheck(J.get$isEmpty$asx(t1));
      } else
        t1 = false;
      return t1;
    },
    _add$1: function(data) {
      var _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.assertSubtypeOfRuntimeType(data, t1);
      if (H.boolConversionCheck(_this.get$_isCanceled()))
        return;
      if (H.boolConversionCheck(_this.get$_canFire()))
        _this._sendData$1(data);
      else
        _this._addPending$1(P._DelayedData$(data, t1));
    },
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    _addPending$1: function($event) {
      var pending, _this = this;
      H.interceptedTypeCheck($event, "$is_DelayedEvent");
      pending = H.assertSubtype(_this._pending, "$is_StreamImplEvents", _this.$ti, "$as_StreamImplEvents");
      if (pending == null) {
        pending = P._StreamImplEvents$(H.getTypeArgumentByIndex(_this, 0));
        _this.set$_pending(pending);
      }
      pending.add$1(0, $event);
      if (!H.boolConversionCheck(_this.get$_hasPending())) {
        _this._state = H.intTypeCheck(J.$or$n(_this._state, 64));
        if (!H.boolConversionCheck(_this.get$_isPaused()))
          _this._pending.schedule$1(_this);
      }
    },
    _sendData$1: function(data) {
      var wasInputPaused, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.assertSubtypeOfRuntimeType(data, t1);
      wasInputPaused = _this.get$_isInputPaused();
      _this._state = H.intTypeCheck(J.$or$n(_this._state, 32));
      _this._zone.runUnaryGuarded$1$2(_this._onData, data, t1);
      _this._state = H.intTypeCheck(J.$and$n(_this._state, 4294967263));
      _this._checkState$1(wasInputPaused);
    },
    _checkState$1: function(wasInputPaused) {
      var isInputPaused, _this = this;
      H.boolTypeCheck(wasInputPaused);
      if (H.boolConversionCheck(_this.get$_hasPending()) && H.boolConversionCheck(J.get$isEmpty$asx(_this._pending))) {
        _this._state = H.intTypeCheck(J.$and$n(_this._state, 4294967231));
        if (H.boolConversionCheck(_this.get$_isInputPaused()) && H.boolConversionCheck(_this.get$_mayResumeInput()))
          _this._state = H.intTypeCheck(J.$and$n(_this._state, 4294967291));
      }
      for (; true; wasInputPaused = isInputPaused) {
        if (H.boolConversionCheck(_this.get$_isCanceled())) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = _this.get$_isInputPaused();
        if (wasInputPaused == isInputPaused)
          break;
        _this._state = H.intTypeCheck(J.$xor$n(_this._state, 32));
        H.boolConversionCheck(isInputPaused);
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        _this._state = H.intTypeCheck(J.$and$n(_this._state, 4294967263));
      }
      if (H.boolConversionCheck(_this.get$_hasPending()) && !H.boolConversionCheck(_this.get$_isPaused()))
        _this._pending.schedule$1(_this);
    },
    set$_onData: function(_onData) {
      this._onData = H.functionTypeCheck(_onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
    },
    set$_onDone: function(_onDone) {
      H.functionTypeCheck(_onDone, {func: 1, ret: -1});
    },
    set$_state: function(_state) {
      this._state = H.intTypeCheck(_state);
    },
    set$_pending: function(_pending) {
      this._pending = H.assertSubtype(_pending, "$is_PendingEvents", this.$ti, "$as_PendingEvents");
    },
    $isStreamSubscription: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1,
    get$_zone: function() {
      return this._zone;
    },
    get$_state: function() {
      return this._state;
    }
  };
  P._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var subscription = this._createSubscription$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), H.interceptedTypeCheck(onError, "$isFunction"), H.functionTypeCheck(onDone, {func: 1, ret: -1}), true === H.boolTypeCheck(cancelOnError));
      this._onListen$1(subscription);
      return subscription;
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    _onListen$1: function(subscription) {
      H.interceptedTypeCheck(subscription, "$isStreamSubscription");
    }
  };
  P._GeneratedStreamImpl.prototype = {};
  P._IterablePendingEvents.prototype = {};
  P._DelayedEvent.prototype = {
    set$next: function(next) {
      this.next = H.interceptedTypeCheck(next, "$is_DelayedEvent");
    },
    get$next: function() {
      return this.next;
    }
  };
  P._DelayedData.prototype = {
    perform$1: function(dispatch) {
      H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch")._sendData$1(this.value);
    }
  };
  P._DelayedError.prototype = {
    $as_DelayedEvent: function() {
    }
  };
  P._DelayedDone.prototype = {$is_DelayedEvent: 1,
    $as_DelayedEvent: function() {
    }
  };
  P._PendingEvents.prototype = {
    get$isScheduled: function() {
      return J.$eq$(this._state, 1);
    },
    get$_eventScheduled: function() {
      return J.$ge$n(this._state, 1);
    },
    schedule$1: function(dispatch) {
      var _this = this;
      H.assertSubtype(dispatch, "$is_EventDispatch", _this.$ti, "$as_EventDispatch");
      if (H.boolConversionCheck(_this.get$isScheduled()))
        return;
      if (H.boolConversionCheck(_this.get$_eventScheduled())) {
        _this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    set$_state: function(_state) {
      this._state = H.intTypeCheck(_state);
    },
    get$_state: function() {
      return this._state;
    }
  };
  P._PendingEvents_schedule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        oldState = t1.get$_state();
      t1.set$_state(0);
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._StreamImplEvents.prototype = {
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: function(_, $event) {
      var t1, _this = this;
      H.interceptedTypeCheck($event, "$is_DelayedEvent");
      t1 = _this.lastPendingEvent;
      if (t1 == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        t1.set$next($event);
        _this.lastPendingEvent = $event;
      }
    },
    handleNext$1: function(dispatch) {
      var $event, t1, _this = this;
      H.assertSubtype(dispatch, "$is_EventDispatch", _this.$ti, "$as_EventDispatch");
      $event = _this.firstPendingEvent;
      t1 = H.interceptedTypeCheck($event.next, "$is_DelayedEvent");
      _this.firstPendingEvent = t1;
      if (t1 == null)
        _this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }
  };
  P._DoneStreamSubscription.prototype = {
    _DoneStreamSubscription$1: function(_onDone, $T) {
      this._schedule$0();
    },
    get$_isScheduled: function() {
      return !H.boolConversionCheck(J.$eq$(J.$and$n(this._state, 2), 0));
    },
    get$isPaused: function() {
      return J.$ge$n(this._state, 4);
    },
    _schedule$0: function() {
      var _this = this;
      if (H.boolConversionCheck(_this.get$_isScheduled()))
        return;
      _this._zone.scheduleMicrotask$1(_this.get$_sendDone());
      _this._state = H.intTypeCheck(J.$or$n(_this._state, 2));
    },
    _sendDone$0: function() {
      var t1, _this = this;
      _this._state = H.intTypeCheck(J.$and$n(_this._state, 4294967293));
      if (H.boolConversionCheck(_this.get$isPaused()))
        return;
      _this._state = H.intTypeCheck(J.$or$n(_this._state, 1));
      t1 = _this._onDone;
      if (t1 != null)
        _this._zone.runGuarded$1(t1);
    },
    set$_state: function(_state) {
      this._state = H.intTypeCheck(_state);
    },
    $isStreamSubscription: 1,
    get$_zone: function() {
      return this._zone;
    },
    get$_state: function() {
      return this._state;
    }
  };
  P._AsBroadcastStream.prototype = {};
  P._BroadcastSubscriptionWrapper.prototype = {$isStreamSubscription: 1};
  P._StreamIterator.prototype = {$isStreamIterator: 1};
  P._EmptyStream.prototype = {};
  P._ForwardingStream.prototype = {
    $asStream: function($S, $T) {
      return [$T];
    }
  };
  P._ForwardingStreamSubscription.prototype = {
    $asStreamSubscription: function($S, $T) {
      return [$T];
    },
    $as_EventSink: function($S, $T) {
      return [$T];
    },
    $as_EventDispatch: function($S, $T) {
      return [$T];
    },
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    }
  };
  P._WhereStream.prototype = {$asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._MapStream.prototype = {};
  P._ExpandStream.prototype = {};
  P._HandleErrorStream.prototype = {$asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._TakeStream.prototype = {$asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._StateStreamSubscription.prototype = {$asStreamSubscription: null, $as_EventSink: null, $as_EventDispatch: null, $as_BufferingStreamSubscription: null,
    $as_ForwardingStreamSubscription: function($T) {
      return [$T, $T];
    }
  };
  P._TakeWhileStream.prototype = {$asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._SkipStream.prototype = {$asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._SkipWhileStream.prototype = {$asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._DistinctStream.prototype = {$asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._EventSinkWrapper.prototype = {$isEventSink: 1, $isSink: 1};
  P._SinkTransformerStreamSubscription.prototype = {
    $asStreamSubscription: function($S, $T) {
      return [$T];
    },
    $as_EventSink: function($S, $T) {
      return [$T];
    },
    $as_EventDispatch: function($S, $T) {
      return [$T];
    },
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    }
  };
  P._StreamSinkTransformer.prototype = {};
  P._BoundSinkStream.prototype = {
    $asStream: function($S, $T) {
      return [$T];
    }
  };
  P._HandlerEventSink.prototype = {$isEventSink: 1,
    $asEventSink: function($S, $T) {
      return [$S];
    },
    $isSink: 1,
    $asSink: function($S, $T) {
      return [$S];
    }
  };
  P._StreamHandlerTransformer.prototype = {};
  P._StreamBindTransformer.prototype = {};
  P._StreamSubscriptionTransformer.prototype = {};
  P._BoundSubscriptionStream.prototype = {
    $asStream: function($S, $T) {
      return [$T];
    }
  };
  P.Timer.prototype = {};
  P.AsyncError.prototype = {
    toString$0: function(_) {
      return H.S(this.error);
    },
    $isError: 1,
    get$error: function(receiver) {
      return this.error;
    }
  };
  P._ZoneFunction.prototype = {};
  P.ZoneSpecification.prototype = {};
  P._ZoneSpecification.prototype = {$isZoneSpecification: 1};
  P.ZoneDelegate.prototype = {};
  P.Zone.prototype = {};
  P._ZoneDelegate.prototype = {$isZoneDelegate: 1};
  P._Zone.prototype = {
    inSameErrorZone$1: function(otherZone) {
      var t1, t2;
      H.interceptedTypeCheck(otherZone, "$isZone");
      if (this !== otherZone) {
        t1 = this.get$errorZone();
        t2 = otherZone.get$errorZone();
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = true;
      return t1;
    },
    $isZone: 1
  };
  P._CustomZone.prototype = {};
  P._rootHandleUncaughtError_closure.prototype = {
    call$0: function() {
      var t1 = this._box_0,
        t2 = t1.error;
      t1 = t2 == null ? t1.error = P.NullThrownError$() : t2;
      t2 = this.stackTrace;
      if (t2 == null)
        throw H.wrapException(t1);
      P._rethrow(t1, t2);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  P._RootZone.prototype = {
    get$_scheduleMicrotask: function() {
      return C._ZoneFunction__RootZone;
    },
    get$errorZone: function() {
      return this;
    },
    runGuarded$1: function(f) {
      var e, s, exception;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        P._rootRun(null, null, this, f, -1);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        this.handleUncaughtError$2(e, s);
      }
    },
    runUnaryGuarded$1$2: function(f, arg, $T) {
      var e, s, exception;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        P._rootRunUnary(null, null, this, f, arg, -1, $T);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        this.handleUncaughtError$2(e, s);
      }
    },
    runUnaryGuarded$2: function(f, arg) {
      return this.runUnaryGuarded$1$2(f, arg, null);
    },
    bindCallback$1$1: function(f, $R) {
      return new P._RootZone_bindCallback_closure(this, H.functionTypeCheck(f, {func: 1, ret: $R}), $R);
    },
    bindCallback$1: function(f) {
      return this.bindCallback$1$1(f, null);
    },
    bindCallbackGuarded$1: function(f) {
      return new P._RootZone_bindCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1}));
    },
    bindUnaryCallbackGuarded$1$1: function(f, $T) {
      return new P._RootZone_bindUnaryCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]}), $T);
    },
    bindUnaryCallbackGuarded$1: function(f) {
      return this.bindUnaryCallbackGuarded$1$1(f, null);
    },
    $index: function(_, key) {
      return;
    },
    handleUncaughtError$2: function(error, stackTrace) {
      P._rootHandleUncaughtError(null, null, this, error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
    },
    run$1$1: function(f, $R) {
      H.functionTypeCheck(f, {func: 1, ret: $R});
      if ($.Zone__current === C.C__RootZone)
        return f.call$0();
      return P._rootRun(null, null, this, f, $R);
    },
    run$1: function(f) {
      return this.run$1$1(f, null);
    },
    runUnary$2$2: function(f, arg, $R, $T) {
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      if ($.Zone__current === C.C__RootZone)
        return f.call$1(arg);
      return P._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runUnary$2: function(f, arg) {
      return this.runUnary$2$2(f, arg, null, null);
    },
    runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      if ($.Zone__current === C.C__RootZone)
        return f.call$2(arg1, arg2);
      return P._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    runBinary$3: function(f, arg1, arg2) {
      return this.runBinary$3$3(f, arg1, arg2, null, null, null);
    },
    registerCallback$1$1: function(f, $R) {
      return H.functionTypeCheck(f, {func: 1, ret: $R});
    },
    registerCallback$1: function(f) {
      return this.registerCallback$1$1(f, null);
    },
    registerUnaryCallback$2$1: function(f, $R, $T) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
    },
    registerUnaryCallback$1: function(f) {
      return this.registerUnaryCallback$2$1(f, null, null);
    },
    registerBinaryCallback$3$1: function(f, $R, T1, T2) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
    },
    registerBinaryCallback$1: function(f) {
      return this.registerBinaryCallback$3$1(f, null, null, null);
    },
    errorCallback$2: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      return;
    },
    scheduleMicrotask$1: function(f) {
      P._rootScheduleMicrotask(null, null, this, H.functionTypeCheck(f, {func: 1, ret: -1}));
    }
  };
  P._RootZone_bindCallback_closure.prototype = {
    call$0: function() {
      return this.$this.run$1$1(this.f, this.R);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return {func: 1, ret: this.R};
    }
  };
  P._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0: function() {
      return this.$this.runGuarded$1(this.f);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1: function(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, H.assertSubtypeOfRuntimeType(arg, t1), t1);
    },
    $signature: function() {
      return {func: 1, ret: -1, args: [this.T]};
    }
  };
  P._HashMap.prototype = {
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return J.$eq$(this._collection$_length, 0);
    },
    get$isNotEmpty: function(_) {
      return !H.boolConversionCheck(this.get$isEmpty(this));
    },
    get$keys: function() {
      return P._HashMapKeyIterable$(this, H.getTypeArgumentByIndex(this, 0));
    },
    containsKey$1: function(key) {
      var strings, nums;
      if (H.boolConversionCheck(P._HashMap__isStringKey(key))) {
        strings = this._collection$_strings;
        return strings == null ? false : P._HashMap__hasTableEntry(strings, key);
      } else if (H.boolConversionCheck(P._HashMap__isNumericKey(key))) {
        nums = this._collection$_nums;
        return nums == null ? false : P._HashMap__hasTableEntry(nums, key);
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1: function(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return J.$ge$n(this._findBucketIndex$2(this._collection$_getBucket$2(rest, key), key), 0);
    },
    $index: function(_, key) {
      var strings, t1, nums;
      if (H.boolConversionCheck(P._HashMap__isStringKey(key))) {
        strings = this._collection$_strings;
        t1 = strings == null ? null : P._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (H.boolConversionCheck(P._HashMap__isNumericKey(key))) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : P._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1: function(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return;
      bucket = this._collection$_getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      if (typeof index !== "number")
        return index.$lt();
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      if (H.boolConversionCheck(P._HashMap__isStringKey(key))) {
        strings = _this._collection$_strings;
        _this._addHashTableEntry$3(strings == null ? _this._collection$_strings = P._HashMap__newHashTable() : strings, key, value);
      } else if (H.boolConversionCheck(P._HashMap__isNumericKey(key))) {
        nums = _this._collection$_nums;
        _this._addHashTableEntry$3(nums == null ? _this._collection$_nums = P._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2: function(key, value) {
      var rest, hash, bucket, index, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        P._HashMap__setTableEntry(rest, hash, [key, value]);
        _this._collection$_length = H.intTypeCheck(J.$add$ansx(_this._collection$_length, 1));
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (typeof index !== "number")
          return index.$ge();
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          _this._collection$_length = H.intTypeCheck(J.$add$ansx(_this._collection$_length, 1));
          _this._collection$_keys = null;
        }
      }
    },
    forEach$1: function(_, action) {
      var keys, $length, i, key, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [t1, H.getTypeArgumentByIndex(_this, 1)]});
      keys = _this._computeKeys$0();
      $length = J.get$length$asx(keys);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        key = keys[i];
        action.call$2(H.assertSubtypeOfRuntimeType(key, t1), _this.$index(0, key));
        if (keys !== _this._collection$_keys)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0: function() {
      var result, strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        t1 = _this._collection$_keys;
      if (t1 != null)
        return t1;
      t1 = _this._collection$_length;
      if (typeof t1 !== "number")
        return H.iae(t1);
      result = new Array(t1);
      result.fixed$length = Array;
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _addHashTableEntry$3: function(table, key, value) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      if (!H.boolConversionCheck(P._HashMap__hasTableEntry(table, key))) {
        _this._collection$_length = H.intTypeCheck(J.$add$ansx(_this._collection$_length, 1));
        _this._collection$_keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    },
    _collection$_getBucket$2: function(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    $isHashMap: 1,
    get$_collection$_length: function() {
      return this._collection$_length;
    },
    get$_collection$_keys: function() {
      return this._collection$_keys;
    }
  };
  P._IdentityHashMap.prototype = {
    _computeHashCode$1: function(key) {
      return P.identityHashCode(key) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  P._CustomHashMap.prototype = {};
  P._HashMapKeyIterable.prototype = {
    get$length: function(_) {
      return H.intTypeCheck(this._collection$_map.get$_collection$_length());
    },
    get$isEmpty: function(_) {
      return J.$eq$(this._collection$_map.get$_collection$_length(), 0);
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map;
      return P._HashMapKeyIterator$(t1, H.listTypeCheck(t1._computeKeys$0()), H.getTypeArgumentByIndex(this, 0));
    },
    contains$1: function(_, element) {
      return H.boolTypeCheck(this._collection$_map.containsKey$1(element));
    }
  };
  P._HashMapKeyIterator.prototype = {
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1.get$_collection$_keys())
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = keys.length;
        if (typeof offset !== "number")
          return offset.$ge();
        if (offset >= t1) {
          _this.set$_collection$_current(null);
          return false;
        } else {
          _this.set$_collection$_current(keys[offset]);
          _this._offset = offset + 1;
          return true;
        }
      }
    },
    set$_collection$_current: function(_current) {
      this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1,
    current$0: function() {
      return this.get$current().call$0();
    },
    get$_collection$_keys: function() {
      return this._collection$_keys;
    }
  };
  P._LinkedIdentityHashMap.prototype = {};
  P._Es6LinkedIdentityHashMap.prototype = {};
  P._Es6MapIterable.prototype = {};
  P._Es6MapIterator.prototype = {$isIterator: 1};
  P._LinkedCustomHashMap.prototype = {};
  P._HashSet.prototype = {$isHashSet: 1};
  P._IdentityHashSet.prototype = {};
  P._CustomHashSet.prototype = {};
  P._HashSetIterator.prototype = {$isIterator: 1};
  P._LinkedHashSet.prototype = {$isLinkedHashSet: 1};
  P._LinkedIdentityHashSet.prototype = {};
  P._LinkedCustomHashSet.prototype = {};
  P._LinkedHashSetCell.prototype = {};
  P._LinkedHashSetIterator.prototype = {$isIterator: 1};
  P.UnmodifiableListView.prototype = {};
  P.HashMap.prototype = {$isMap: 1};
  P.HashSet.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  P.IterableMixin.prototype = {$isIterable: 1};
  P.IterableBase.prototype = {};
  P.HasNextIterator.prototype = {};
  P.LinkedHashMap.prototype = {$isMap: 1};
  P.LinkedHashSet.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  P.LinkedList0.prototype = {};
  P._LinkedListIterator0.prototype = {$isIterator: 1};
  P.LinkedListEntry.prototype = {};
  P.ListBase.prototype = {$isEfficientLengthIterable: 1, $isListMixin: 1, $isIterable: 1, $isList: 1};
  P.ListMixin.prototype = {
    get$iterator: function(receiver) {
      return H.ListIterator$(receiver, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, H.intTypeCheck(index));
    },
    forEach$1: function(receiver, action) {
      var $length, i, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0)]});
      $length = _this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(_this.$index(receiver, i));
        if ($length !== _this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty: function(receiver) {
      return J.$eq$(this.get$length(receiver), 0);
    },
    get$isNotEmpty: function(receiver) {
      return !H.boolConversionCheck(this.get$isEmpty(receiver));
    },
    get$last: function(receiver) {
      if (H.boolConversionCheck(J.$eq$(this.get$length(receiver), 0)))
        throw H.wrapException(H.IterableElementError_noElement());
      return this.$index(receiver, J.$sub$n(this.get$length(receiver), 1));
    },
    contains$1: function(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (H.boolConversionCheck(J.$eq$(this.$index(receiver, i), element)))
          return true;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    join$1: function(receiver, separator) {
      var buffer;
      H.stringTypeCheck(separator);
      if (H.boolConversionCheck(J.$eq$(this.get$length(receiver), 0)))
        return "";
      buffer = P.StringBuffer$("");
      buffer.writeAll$2(receiver, separator);
      return buffer.toString$0(0);
    },
    where$1: function(receiver, test) {
      var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
      return H.WhereIterable$(receiver, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), t1);
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
      return H.MappedListIterable$(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
    },
    map$1: function($receiver, f) {
      return this.map$1$1($receiver, f, null);
    },
    skip$1: function(receiver, count) {
      return H.SubListIterable$(receiver, H.intTypeCheck(count), null, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
    },
    take$1: function(receiver, count) {
      return H.SubListIterable$(receiver, 0, H.intTypeCheck(count), H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
    },
    toList$1$growable: function(receiver, growable) {
      var result, t2, i, _this = this,
        t1 = H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0);
      if (H.boolConversionCheck(H.boolTypeCheck(growable))) {
        result = H.setRuntimeTypeInfo([], [t1]);
        C.JSArray_methods.set$length(result, _this.get$length(receiver));
      } else {
        t2 = _this.get$length(receiver);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = new Array(t2);
        t2.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t2, [t1]);
      }
      i = 0;
      while (true) {
        t1 = _this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        C.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
        ++i;
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1: function(receiver, element) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0));
      t1 = _this.get$length(receiver);
      _this.set$length(receiver, J.$add$ansx(t1, 1));
      _this.$indexSet(receiver, t1, element);
    },
    addAll$1: function(receiver, iterable) {
      var i, t1, element, i0, _this = this;
      H.assertSubtype(iterable, "$isIterable", [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0)], "$asIterable");
      i = _this.get$length(receiver);
      for (t1 = J.get$iterator$ax(iterable); H.boolConversionCheck(t1.moveNext$0()); i = i0) {
        element = t1.get$current();
        if (typeof i !== "number")
          return i.$add();
        i0 = i + 1;
        _this.set$length(receiver, i0);
        _this.$indexSet(receiver, i, element);
      }
    },
    clear$0: function(receiver) {
      this.set$length(receiver, 0);
    },
    removeLast$0: function(receiver) {
      var result, _this = this;
      if (H.boolConversionCheck(J.$eq$(_this.get$length(receiver), 0)))
        throw H.wrapException(H.IterableElementError_noElement());
      result = _this.$index(receiver, J.$sub$n(_this.get$length(receiver), 1));
      _this.set$length(receiver, J.$sub$n(_this.get$length(receiver), 1));
      return result;
    },
    $add: function(receiver, other) {
      var result, _this = this,
        t1 = [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0)];
      H.assertSubtype(other, "$isList", t1, "$asList");
      result = H.setRuntimeTypeInfo([], t1);
      C.JSArray_methods.set$length(result, J.$add$ansx(_this.get$length(receiver), J.get$length$asx(other)));
      C.JSArray_methods.setRange$3(result, 0, _this.get$length(receiver), receiver);
      C.JSArray_methods.setRange$3(result, _this.get$length(receiver), result.length, other);
      return result;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.MapBase.prototype = {};
  P.MapBase_mapToString_closure.prototype = {
    call$2: function(k, v) {
      var t1 = this._box_0;
      if (!H.boolConversionCheck(t1.first))
        this.result.write$1(", ");
      t1.first = false;
      t1 = this.result;
      t1.write$1(k);
      t1.write$1(": ");
      t1.write$1(v);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 24
  };
  P.MapMixin.prototype = {
    forEach$1: function(_, action) {
      var t1, key, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(_this, "MapMixin", 0), H.getRuntimeTypeArgument(_this, "MapMixin", 1)]});
      for (t1 = J.get$iterator$ax(_this.get$keys()); H.boolConversionCheck(t1.moveNext$0());) {
        key = t1.get$current();
        action.call$2(key, _this.$index(0, key));
      }
    },
    containsKey$1: function(key) {
      return J.contains$1$asx(this.get$keys(), key);
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$keys());
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this.get$keys());
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this.get$keys());
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  P.UnmodifiableMapBase.prototype = {$is_UnmodifiableMapMixin: 1};
  P._MapBaseValueIterable.prototype = {
    $asEfficientLengthIterable: function($K, $V) {
      return [$V];
    },
    $asIterable: function($K, $V) {
      return [$V];
    }
  };
  P._MapBaseValueIterator.prototype = {$isIterator: 1,
    $asIterator: function($K, $V) {
      return [$V];
    }
  };
  P._UnmodifiableMapMixin.prototype = {
    $indexSet: function(_, key, value) {
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    $isMap: 1
  };
  P.MapView.prototype = {
    $index: function(_, key) {
      return J.$index$asx(this._collection$_map, key);
    },
    $indexSet: function(_, key, value) {
      J.$indexSet$ax(this._collection$_map, H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1)));
    },
    containsKey$1: function(key) {
      return this._collection$_map.containsKey$1(key);
    },
    forEach$1: function(_, action) {
      J.forEach$1$ax(this._collection$_map, H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]}));
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._collection$_map);
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this._collection$_map);
    },
    get$length: function(_) {
      return J.get$length$asx(this._collection$_map);
    },
    get$keys: function() {
      return this._collection$_map.get$keys();
    },
    toString$0: function(_) {
      return J.toString$0$(this._collection$_map);
    },
    $isMap: 1
  };
  P.UnmodifiableMapView.prototype = {$is_UnmodifiableMapMixin: 1};
  P.Queue.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1};
  P._DoubleLink.prototype = {};
  P.DoubleLinkedQueueEntry.prototype = {
    $as_DoubleLink: function($E) {
      return [[P.DoubleLinkedQueueEntry, $E]];
    }
  };
  P._DoubleLinkedQueueEntry.prototype = {};
  P._DoubleLinkedQueueElement.prototype = {};
  P._DoubleLinkedQueueSentinel.prototype = {};
  P.DoubleLinkedQueue.prototype = {$isEfficientLengthIterable: 1, $isQueue: 1};
  P._DoubleLinkedQueueIterator.prototype = {$isIterator: 1};
  P.ListQueue.prototype = {$isQueue: 1};
  P._ListQueueIterator.prototype = {$isIterator: 1};
  P.SetMixin.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  P.SetBase.prototype = {$isEfficientLengthIterable: 1, $isSetMixin: 1, $isIterable: 1, $isSet: 1};
  P._SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  P._UnmodifiableSet.prototype = {};
  P._SplayTreeNode.prototype = {};
  P._SplayTreeMapNode.prototype = {
    $as_SplayTreeNode: function($K, $V) {
      return [$K];
    }
  };
  P._SplayTree.prototype = {};
  P._TypeTest.prototype = {};
  P.SplayTreeMap.prototype = {$isMapMixin: 1,
    $as_SplayTree: function($K, $V) {
      return [$K, [P._SplayTreeMapNode, $K, $V]];
    },
    $isMap: 1
  };
  P._SplayTreeIterator.prototype = {$isIterator: 1,
    $asIterator: function($K, $T) {
      return [$T];
    }
  };
  P._SplayTreeKeyIterable.prototype = {};
  P._SplayTreeValueIterable.prototype = {
    $asEfficientLengthIterable: function($K, $V) {
      return [$V];
    },
    $asIterable: function($K, $V) {
      return [$V];
    }
  };
  P._SplayTreeKeyIterator.prototype = {
    $as_SplayTreeIterator: function($K) {
      return [$K, $K];
    },
    $asIterator: null
  };
  P._SplayTreeValueIterator.prototype = {};
  P._SplayTreeNodeIterator.prototype = {
    $as_SplayTreeIterator: function($K) {
      return [$K, [P._SplayTreeNode, $K]];
    },
    $asIterator: function($K) {
      return [[P._SplayTreeNode, $K]];
    }
  };
  P.SplayTreeSet.prototype = {$isEfficientLengthIterable: 1, $isIterableMixin: 1, $isSetMixin: 1,
    $as_SplayTree: function($E) {
      return [$E, [P._SplayTreeNode, $E]];
    },
    $isIterable: 1,
    $isSet: 1
  };
  P._ListBase_Object_ListMixin.prototype = {$isEfficientLengthIterable: 1, $isListMixin: 1, $isIterable: 1, $isList: 1};
  P._SetBase_Object_SetMixin.prototype = {$isEfficientLengthIterable: 1, $isSetMixin: 1, $isIterable: 1, $isSet: 1};
  P._SplayTreeMap__SplayTree_MapMixin.prototype = {$isMapMixin: 1,
    $as_SplayTree: function($K, $V) {
      return [$K, [P._SplayTreeMapNode, $K, $V]];
    },
    $isMap: 1
  };
  P._SplayTreeSet__SplayTree_IterableMixin.prototype = {$isIterableMixin: 1,
    $as_SplayTree: function($E) {
      return [$E, [P._SplayTreeNode, $E]];
    },
    $isIterable: 1
  };
  P._SplayTreeSet__SplayTree_IterableMixin_SetMixin.prototype = {$isEfficientLengthIterable: 1, $isIterableMixin: 1, $isSetMixin: 1,
    $as_SplayTree: function($E) {
      return [$E, [P._SplayTreeNode, $E]];
    },
    $isIterable: 1,
    $isSet: 1
  };
  P._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {$is_UnmodifiableMapMixin: 1};
  P._convertJsonToDart_walk.prototype = {
    call$1: function(e) {
      var t1, i, map, processed, keys, t2, t3, key, _this = this;
      if (e == null || typeof e != "object")
        return e;
      if (Object.getPrototypeOf(e) === Array.prototype) {
        for (t1 = _this.reviver, i = 0; i < e.length; ++i)
          e[i] = t1.call$2(i, _this.call$1(e[i]));
        return e;
      }
      map = P._JsonMap$(e);
      processed = map._processed;
      keys = map._convert$_computeKeys$0();
      t1 = J.getInterceptor$asx(keys);
      t2 = _this.reviver;
      i = 0;
      while (true) {
        t3 = t1.get$length(keys);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        key = t1.$index(keys, i);
        processed[key] = t2.call$2(key, _this.call$1(e[key]));
        ++i;
      }
      map._original = processed;
      return map;
    },
    $signature: 4
  };
  P._JsonMap.prototype = {
    $index: function(_, key) {
      var result, _this = this;
      if (H.boolConversionCheck(_this.get$_isUpgraded()))
        return J.$index$asx(_this.get$_upgradedMap(), key);
      else if (typeof key !== "string")
        return;
      else {
        result = P._JsonMap__getProperty(_this._processed, key);
        return H.boolConversionCheck(P._JsonMap__isUnprocessed(result)) ? _this._process$1(key) : result;
      }
    },
    get$length: function(_) {
      return H.boolConversionCheck(this.get$_isUpgraded()) ? J.get$length$asx(this.get$_upgradedMap()) : J.get$length$asx(this._convert$_computeKeys$0());
    },
    get$isEmpty: function(_) {
      return J.$eq$(this.get$length(this), 0);
    },
    get$isNotEmpty: function(_) {
      return J.$gt$n(this.get$length(this), 0);
    },
    get$keys: function() {
      if (H.boolConversionCheck(this.get$_isUpgraded()))
        return this.get$_upgradedMap().get$keys();
      return P._JsonMapKeyIterable$(this);
    },
    $indexSet: function(_, key, value) {
      var processed, original, _this = this;
      H.stringTypeCheck(key);
      if (H.boolConversionCheck(_this.get$_isUpgraded()))
        J.$indexSet$ax(_this.get$_upgradedMap(), key, value);
      else if (H.boolConversionCheck(_this.containsKey$1(key))) {
        processed = _this._processed;
        P._JsonMap__setProperty(processed, key, value);
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          P._JsonMap__setProperty(original, key, null);
      } else
        J.$indexSet$ax(_this._upgrade$0(), key, value);
    },
    containsKey$1: function(key) {
      if (H.boolConversionCheck(this.get$_isUpgraded()))
        return this.get$_upgradedMap().containsKey$1(key);
      if (typeof key !== "string")
        return false;
      return P._JsonMap__hasProperty(this._original, key);
    },
    forEach$1: function(_, f) {
      var keys, t1, i, t2, key, value, _this = this;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
      if (H.boolConversionCheck(_this.get$_isUpgraded()))
        return J.forEach$1$ax(_this.get$_upgradedMap(), f);
      keys = _this._convert$_computeKeys$0();
      t1 = J.getInterceptor$asx(keys);
      i = 0;
      while (true) {
        t2 = t1.get$length(keys);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        key = t1.$index(keys, i);
        value = P._JsonMap__getProperty(_this._processed, key);
        if (H.boolConversionCheck(P._JsonMap__isUnprocessed(value))) {
          value = P._convertJsonToDartLazy(P._JsonMap__getProperty(_this._original, key));
          P._JsonMap__setProperty(_this._processed, key, value);
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        ++i;
      }
    },
    get$_isUpgraded: function() {
      return this._processed == null;
    },
    get$_upgradedMap: function() {
      return this._data;
    },
    _convert$_computeKeys$0: function() {
      var t1,
        keys = H.listTypeCheck(this._data);
      if (keys == null) {
        t1 = P.String;
        keys = this._data = H.setRuntimeTypeInfo(J.JSArray_JSArray$typed(P._JsonMap__getPropertyNames(this._original), t1), [t1]);
      }
      return keys;
    },
    _upgrade$0: function() {
      var result, keys, t1, i, t2, key, _this = this;
      if (H.boolConversionCheck(_this.get$_isUpgraded()))
        return _this.get$_upgradedMap();
      result = P.LinkedHashMap_LinkedHashMap$_empty(P.String, null);
      keys = _this._convert$_computeKeys$0();
      t1 = J.getInterceptor$asx(keys);
      i = 0;
      while (true) {
        t2 = t1.get$length(keys);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        key = t1.$index(keys, i);
        result.$indexSet(0, key, _this.$index(0, key));
        ++i;
      }
      if (H.boolConversionCheck(t1.get$isEmpty(keys)))
        t1.add$1(keys, null);
      else
        t1.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._data = result;
    },
    _process$1: function(key) {
      var result;
      H.stringTypeCheck(key);
      if (!H.boolConversionCheck(P._JsonMap__hasProperty(this._original, key)))
        return;
      result = P._convertJsonToDartLazy(P._JsonMap__getProperty(this._original, key));
      return P._JsonMap__setProperty(this._processed, key, result);
    },
    $asMapBase: function() {
      return [P.String, null];
    },
    $asMapMixin: function() {
      return [P.String, null];
    },
    $asMap: function() {
      return [P.String, null];
    }
  };
  P._JsonMapKeyIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._parent);
    },
    elementAt$1: function(_, index) {
      var t1;
      H.intTypeCheck(index);
      t1 = this._parent;
      return H.boolConversionCheck(t1.get$_isUpgraded()) ? J.elementAt$1$ax(t1.get$keys(), index) : J.$index$asx(t1._convert$_computeKeys$0(), index);
    },
    get$iterator: function(_) {
      var t1 = this._parent;
      return H.boolConversionCheck(t1.get$_isUpgraded()) ? J.get$iterator$ax(t1.get$keys()) : J.get$iterator$ax(t1._convert$_computeKeys$0());
    },
    contains$1: function(_, key) {
      return this._parent.containsKey$1(key);
    },
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $asListIterable: function() {
      return [P.String];
    },
    $asIterable: function() {
      return [P.String];
    }
  };
  P._JsonDecoderSink.prototype = {
    $asChunkedConversionSink: function() {
      return [P.String];
    },
    $as_StringSinkConversionSink: function() {
      return [P.StringSink];
    },
    $asSink: function() {
      return [P.String];
    }
  };
  P.AsciiCodec.prototype = {};
  P._UnicodeSubsetEncoder.prototype = {
    $asStreamTransformer: function() {
      return [P.String, [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [P.String, [P.List, P.int]];
    },
    $asConverter: function() {
      return [P.String, [P.List, P.int]];
    }
  };
  P.AsciiEncoder.prototype = {};
  P._UnicodeSubsetEncoderSink.prototype = {};
  P._UnicodeSubsetDecoder.prototype = {
    $asStreamTransformer: function() {
      return [[P.List, P.int], P.String];
    },
    $asStreamTransformerBase: function() {
      return [[P.List, P.int], P.String];
    },
    $asConverter: function() {
      return [[P.List, P.int], P.String];
    }
  };
  P.AsciiDecoder.prototype = {};
  P._ErrorHandlingAsciiDecoderSink.prototype = {};
  P._SimpleAsciiDecoderSink.prototype = {};
  P.Base64Codec.prototype = {
    $asCodec: function() {
      return [[P.List, P.int], P.String];
    }
  };
  P.Base64Encoder.prototype = {
    $asStreamTransformer: function() {
      return [[P.List, P.int], P.String];
    },
    $asStreamTransformerBase: function() {
      return [[P.List, P.int], P.String];
    },
    $asConverter: function() {
      return [[P.List, P.int], P.String];
    }
  };
  P._Base64Encoder.prototype = {};
  P._BufferCachingBase64Encoder.prototype = {};
  P._Base64EncoderSink.prototype = {};
  P._AsciiBase64EncoderSink.prototype = {};
  P._Utf8Base64EncoderSink.prototype = {};
  P.Base64Decoder.prototype = {
    $asStreamTransformer: function() {
      return [P.String, [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [P.String, [P.List, P.int]];
    },
    $asConverter: function() {
      return [P.String, [P.List, P.int]];
    }
  };
  P._Base64Decoder.prototype = {};
  P._Base64DecoderSink.prototype = {};
  P.ByteConversionSink.prototype = {
    $asChunkedConversionSink: function() {
      return [[P.List, P.int]];
    },
    $asSink: function() {
      return [[P.List, P.int]];
    }
  };
  P.ByteConversionSinkBase.prototype = {};
  P._ByteAdapterSink.prototype = {};
  P._ByteCallbackSink.prototype = {};
  P.ChunkedConversionSink.prototype = {$isSink: 1};
  P._SimpleCallbackSink.prototype = {};
  P._ConverterStreamEventSink.prototype = {$isEventSink: 1,
    $asEventSink: function($S, $T) {
      return [$S];
    },
    $isSink: 1,
    $asSink: function($S, $T) {
      return [$S];
    }
  };
  P.Codec.prototype = {};
  P._FusedCodec.prototype = {
    $asCodec: function($S, $M, $T) {
      return [$S, $T];
    }
  };
  P._InvertedCodec.prototype = {};
  P.Converter.prototype = {};
  P._FusedConverter.prototype = {
    $asStreamTransformer: function($S, $M, $T) {
      return [$S, $T];
    },
    $asStreamTransformerBase: function($S, $M, $T) {
      return [$S, $T];
    },
    $asConverter: function($S, $M, $T) {
      return [$S, $T];
    }
  };
  P.Encoding.prototype = {
    $asCodec: function() {
      return [P.String, [P.List, P.int]];
    }
  };
  P.HtmlEscapeMode.prototype = {};
  P.HtmlEscape.prototype = {
    $asStreamTransformer: function() {
      return [P.String, P.String];
    },
    $asStreamTransformerBase: function() {
      return [P.String, P.String];
    },
    $asConverter: function() {
      return [P.String, P.String];
    }
  };
  P._HtmlEscapeSink.prototype = {};
  P.JsonUnsupportedObjectError.prototype = {};
  P.JsonCyclicError.prototype = {};
  P.JsonCodec.prototype = {
    decode$2$reviver: function(_, source, reviver) {
      H.stringTypeCheck(source);
      H.functionTypeCheck(reviver, {func: 1, args: [P.Object, P.Object]});
      if (reviver == null)
        reviver = null;
      if (reviver == null)
        return this.get$decoder().convert$1(source);
      return P.JsonDecoder$(reviver).convert$1(source);
    },
    get$decoder: function() {
      return C.JsonDecoder_null;
    },
    $asCodec: function() {
      return [P.Object, P.String];
    }
  };
  P.JsonEncoder.prototype = {
    $asStreamTransformer: function() {
      return [P.Object, P.String];
    },
    $asStreamTransformerBase: function() {
      return [P.Object, P.String];
    },
    $asConverter: function() {
      return [P.Object, P.String];
    }
  };
  P.JsonUtf8Encoder.prototype = {
    $asStreamTransformer: function() {
      return [P.Object, [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [P.Object, [P.List, P.int]];
    },
    $asConverter: function() {
      return [P.Object, [P.List, P.int]];
    }
  };
  P._JsonEncoderSink.prototype = {
    $asChunkedConversionSink: function() {
      return [P.Object];
    },
    $asSink: function() {
      return [P.Object];
    }
  };
  P._JsonUtf8EncoderSink.prototype = {
    $asChunkedConversionSink: function() {
      return [P.Object];
    },
    $asSink: function() {
      return [P.Object];
    }
  };
  P.JsonDecoder.prototype = {
    convert$1: function(input) {
      return P._parseJson(H.stringTypeCheck(input), this._reviver);
    },
    $asStreamTransformer: function() {
      return [P.String, P.Object];
    },
    $asStreamTransformerBase: function() {
      return [P.String, P.Object];
    },
    $asConverter: function() {
      return [P.String, P.Object];
    }
  };
  P._JsonStringifier.prototype = {};
  P._JsonPrettyPrintMixin.prototype = {$is_JsonStringifier: 1};
  P._JsonStringStringifier.prototype = {};
  P._JsonStringStringifierPretty.prototype = {$is_JsonPrettyPrintMixin: 1};
  P._JsonUtf8Stringifier.prototype = {};
  P._JsonUtf8StringifierPretty.prototype = {$is_JsonPrettyPrintMixin: 1};
  P.Latin1Codec.prototype = {};
  P.Latin1Encoder.prototype = {};
  P.Latin1Decoder.prototype = {};
  P._Latin1DecoderSink.prototype = {};
  P._Latin1AllowInvalidDecoderSink.prototype = {};
  P.LineSplitter.prototype = {
    $asStreamTransformer: function() {
      return [P.String, P.String];
    },
    $asStreamTransformerBase: function() {
      return [P.String, P.String];
    }
  };
  P._LineSplitterSink.prototype = {};
  P._LineSplitterEventSink.prototype = {$isEventSink: 1,
    $asEventSink: function() {
      return [P.String];
    }
  };
  P.StringConversionSink.prototype = {
    $asChunkedConversionSink: function() {
      return [P.String];
    },
    $asSink: function() {
      return [P.String];
    }
  };
  P.ClosableStringSink.prototype = {};
  P._ClosableStringSink.prototype = {$isClosableStringSink: 1, $isStringSink: 1};
  P._StringConversionSinkAsStringSinkAdapter.prototype = {$isClosableStringSink: 1, $isStringSink: 1};
  P.StringConversionSinkBase.prototype = {};
  P.StringConversionSinkMixin.prototype = {$isChunkedConversionSink: 1,
    $asChunkedConversionSink: function() {
      return [P.String];
    },
    $isStringConversionSink: 1,
    $isSink: 1,
    $asSink: function() {
      return [P.String];
    }
  };
  P._StringSinkConversionSink.prototype = {};
  P._StringCallbackSink.prototype = {
    $asChunkedConversionSink: function() {
      return [P.String];
    },
    $as_StringSinkConversionSink: function() {
      return [P.StringBuffer];
    },
    $asSink: function() {
      return [P.String];
    }
  };
  P._StringAdapterSink.prototype = {};
  P._Utf8StringSinkAdapter.prototype = {};
  P._Utf8ConversionSink.prototype = {};
  P.Utf8Codec.prototype = {};
  P.Utf8Encoder.prototype = {
    $asStreamTransformer: function() {
      return [P.String, [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [P.String, [P.List, P.int]];
    },
    $asConverter: function() {
      return [P.String, [P.List, P.int]];
    }
  };
  P._Utf8Encoder.prototype = {};
  P._Utf8EncoderSink.prototype = {$isChunkedConversionSink: 1,
    $asChunkedConversionSink: function() {
      return [P.String];
    },
    $isStringConversionSink: 1,
    $isStringConversionSinkMixin: 1,
    $isSink: 1,
    $asSink: function() {
      return [P.String];
    }
  };
  P.Utf8Decoder.prototype = {
    $asStreamTransformer: function() {
      return [[P.List, P.int], P.String];
    },
    $asStreamTransformerBase: function() {
      return [[P.List, P.int], P.String];
    },
    $asConverter: function() {
      return [[P.List, P.int], P.String];
    }
  };
  P._Utf8Decoder.prototype = {};
  P.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin.prototype = {$is_JsonPrettyPrintMixin: 1};
  P.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin.prototype = {$is_JsonPrettyPrintMixin: 1};
  P.__Utf8EncoderSink__Utf8Encoder_StringConversionSinkMixin.prototype = {$isChunkedConversionSink: 1,
    $asChunkedConversionSink: function() {
      return [P.String];
    },
    $isStringConversionSink: 1,
    $isStringConversionSinkMixin: 1,
    $isSink: 1,
    $asSink: function() {
      return [P.String];
    }
  };
  P._symbolMapToStringMap_closure.prototype = {$signature: 15};
  P.NoSuchMethodError_toString_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2;
      H.interceptedTypeCheck(key, "$isSymbol0");
      t1 = this.sb;
      t2 = this._box_0;
      t1.write$1(t2.comma);
      t1.write$1(P._symbolToString(key));
      t1.write$1(": ");
      t1.write$1(P.Error_safeToString(value));
      t2.comma = ", ";
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 15
  };
  P._CompileTimeError.prototype = {};
  P._DuplicatedFieldInitializerError.prototype = {};
  P._BigIntImpl.prototype = {$isBigInt: 1, $isComparable: 1,
    $asComparable: function() {
      return [P.BigInt];
    }
  };
  P._BigIntReduction.prototype = {};
  P._BigIntClassic.prototype = {$is_BigIntReduction: 1};
  P.Deprecated.prototype = {};
  P._Override.prototype = {};
  P.Provisional.prototype = {};
  P._Proxy0.prototype = {};
  P.pragma.prototype = {};
  P.BigInt.prototype = {$isComparable: 1,
    $asComparable: function() {
      return [P.BigInt];
    }
  };
  P.bool.prototype = {};
  P.Comparable.prototype = {};
  P.DateTime.prototype = {
    get$timeZoneName: function() {
      if (H.boolConversionCheck(this.isUtc))
        return "UTC";
      return H.Primitives_getTimeZoneName(this);
    },
    get$millisecondsSinceEpoch: function() {
      return this._value;
    },
    get$year: function() {
      return H.intTypeCheck(H.Primitives_getYear(this));
    },
    get$month: function() {
      return H.intTypeCheck(H.Primitives_getMonth(this));
    },
    get$day: function() {
      return H.intTypeCheck(H.Primitives_getDay(this));
    },
    get$hour: function() {
      return H.intTypeCheck(H.Primitives_getHours(this));
    },
    get$minute: function() {
      return H.intTypeCheck(H.Primitives_getMinutes(this));
    },
    get$second: function() {
      return H.intTypeCheck(H.Primitives_getSeconds(this));
    },
    get$millisecond: function() {
      return H.intTypeCheck(H.Primitives_getMilliseconds(this));
    },
    get$microsecond: function() {
      return 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.DateTime && H.boolConversionCheck(J.$eq$(this._value, other.get$millisecondsSinceEpoch())) && H.boolConversionCheck(J.$eq$(this.isUtc, other.isUtc));
    },
    DateTime$_withValue$2$isUtc: function(_value, isUtc) {
      var t1, _this = this, _8640000000000000 = 864e13;
      if (!H.boolConversionCheck(J.$gt$n(J.abs$0$in(_this.get$millisecondsSinceEpoch()), _8640000000000000)))
        t1 = H.boolConversionCheck(J.$eq$(J.abs$0$in(_this.get$millisecondsSinceEpoch()), _8640000000000000)) && !H.boolConversionCheck(J.$eq$(_this.get$microsecond(), 0));
      else
        t1 = true;
      if (t1)
        throw H.wrapException(P.ArgumentError$("DateTime is outside valid range: " + H.S(_this.get$millisecondsSinceEpoch())));
      if (_this.isUtc == null)
        throw H.wrapException(P.ArgumentError$("'isUtc' flag may not be 'null'"));
    },
    get$hashCode: function(_) {
      var t1 = this._value,
        t2 = J.getInterceptor$n(t1);
      return J.$and$n(t2.$xor(t1, t2.$shr(t1, 30)), 1073741823);
    },
    toString$0: function(_) {
      var _this = this,
        y = P.DateTime__fourDigits(_this.get$year()),
        m = P.DateTime__twoDigits(_this.get$month()),
        d = P.DateTime__twoDigits(_this.get$day()),
        h = P.DateTime__twoDigits(_this.get$hour()),
        min = P.DateTime__twoDigits(_this.get$minute()),
        sec = P.DateTime__twoDigits(_this.get$second()),
        ms = P.DateTime__threeDigits(_this.get$millisecond()),
        us = H.boolConversionCheck(J.$eq$(_this.get$microsecond(), 0)) ? "" : P.DateTime__threeDigits(_this.get$microsecond());
      if (H.boolConversionCheck(_this.isUtc))
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + H.S(us) + "Z";
      else
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + H.S(us);
    },
    $isComparable: 1,
    $asComparable: function() {
      return [P.DateTime];
    }
  };
  P.double.prototype = {};
  P.Duration.prototype = {
    $add: function(_, other) {
      return P.Duration$_microseconds(J.$add$ansx(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration));
    },
    $lt: function(_, other) {
      return J.$lt$n(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
    },
    $gt: function(_, other) {
      return J.$gt$n(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
    },
    $le: function(_, other) {
      return J.$le$n(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
    },
    $ge: function(_, other) {
      return J.$ge$n(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
    },
    get$inHours: function() {
      return J.$tdiv$n(this._duration, 3600000000);
    },
    get$inMinutes: function() {
      return J.$tdiv$n(this._duration, 60000000);
    },
    get$inSeconds: function() {
      return J.$tdiv$n(this._duration, 1000000);
    },
    get$inMilliseconds: function() {
      return J.$tdiv$n(this._duration, 1000);
    },
    get$inMicroseconds: function() {
      return this._duration;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Duration && H.boolConversionCheck(J.$eq$(this._duration, other.get$inMicroseconds()));
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this._duration);
    },
    toString$0: function(_) {
      var twoDigitMinutes, twoDigitSeconds, sixDigitUs, _this = this,
        t1 = new P.Duration_toString_twoDigits();
      if (H.boolConversionCheck(J.$lt$n(_this.get$inMicroseconds(), 0)))
        return "-" + H.S(_this.$negate(0));
      twoDigitMinutes = t1.call$1(J.remainder$1$n(_this.get$inMinutes(), 60));
      twoDigitSeconds = t1.call$1(J.remainder$1$n(_this.get$inSeconds(), 60));
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(J.remainder$1$n(_this.get$inMicroseconds(), 1000000));
      return H.S(_this.get$inHours()) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    },
    $negate: function(_) {
      var t1 = this._duration;
      if (typeof t1 !== "number")
        return H.iae(t1);
      return P.Duration$_microseconds(0 - t1);
    },
    $isComparable: 1,
    $asComparable: function() {
      return [P.Duration];
    }
  };
  P.Duration_toString_sixDigits.prototype = {
    call$1: function(n) {
      H.intTypeCheck(n);
      if (typeof n !== "number")
        return n.$ge();
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n >= 10)
        return "0000" + n;
      return "00000" + n;
    },
    $signature: 16
  };
  P.Duration_toString_twoDigits.prototype = {
    call$1: function(n) {
      H.intTypeCheck(n);
      if (typeof n !== "number")
        return n.$ge();
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    $signature: 16
  };
  P.Error.prototype = {};
  P.AssertionError.prototype = {
    toString$0: function(_) {
      return "Assertion failed";
    }
  };
  P.TypeError.prototype = {};
  P.CastError.prototype = {};
  P.NullThrownError.prototype = {
    toString$0: function(_) {
      return "Throw of null.";
    }
  };
  P.ArgumentError.prototype = {
    get$_errorName: function() {
      return "Invalid argument" + (!H.boolConversionCheck(this._hasValue) ? "(s)" : "");
    },
    get$_errorExplanation: function() {
      return "";
    },
    toString$0: function(_) {
      var message, prefix, explanation, errorValue, _this = this,
        t1 = _this.name,
        nameString = t1 != null ? " (" + H.S(t1) + ")" : "";
      t1 = _this.message;
      message = t1 == null ? "" : ": " + H.S(t1);
      prefix = H.S(_this.get$_errorName()) + nameString + message;
      if (!H.boolConversionCheck(_this._hasValue))
        return prefix;
      explanation = _this.get$_errorExplanation();
      errorValue = P.Error_safeToString(_this.invalidValue);
      return prefix + H.S(explanation) + ": " + H.S(errorValue);
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  P.RangeError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var explanation, t2, t3,
        t1 = this.start;
      if (t1 == null) {
        t1 = this.end;
        explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
      } else {
        t2 = this.end;
        if (t2 == null)
          explanation = ": Not greater than or equal to " + H.S(t1);
        else {
          t3 = J.getInterceptor$n(t2);
          if (H.boolConversionCheck(t3.$gt(t2, t1)))
            explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
          else
            explanation = H.boolConversionCheck(t3.$lt(t2, t1)) ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
        }
      }
      return explanation;
    }
  };
  P.IndexError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var t1,
        invalidValue = H.intTypeCheck(this.invalidValue);
      if (typeof invalidValue !== "number")
        return invalidValue.$lt();
      if (invalidValue < 0)
        return ": index must not be negative";
      t1 = this.length;
      if (H.boolConversionCheck(J.$eq$(t1, 0)))
        return ": no indices are valid";
      return ": index should be less than " + H.S(t1);
    },
    $isRangeError: 1,
    get$length: function(receiver) {
      return this.length;
    }
  };
  P.FallThroughError.prototype = {};
  P.AbstractClassInstantiationError.prototype = {};
  P.NoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t1, argument, memberName, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = P.StringBuffer$("");
      _box_0.comma = "";
      t1 = _this._core$_arguments;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); H.boolConversionCheck(t1.moveNext$0());) {
          argument = t1.get$current();
          sb.write$1(_box_0.comma);
          sb.write$1(P.Error_safeToString(argument));
          _box_0.comma = ", ";
        }
      t1 = _this._namedArguments;
      if (t1 != null)
        J.forEach$1$ax(t1, new P.NoSuchMethodError_toString_closure(_box_0, sb));
      memberName = P._symbolToString(_this._memberName);
      receiverText = P.Error_safeToString(_this._core$_receiver);
      actualParameters = H.S(sb);
      t1 = "NoSuchMethodError: method not found: '" + H.S(memberName) + "'\nReceiver: " + H.S(receiverText) + "\nArguments: [" + actualParameters + "]";
      return t1;
    }
  };
  P.UnsupportedError.prototype = {
    toString$0: function(_) {
      return "Unsupported operation: " + H.S(this.message);
    }
  };
  P.UnimplementedError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
    },
    $isUnsupportedError: 1
  };
  P.StateError.prototype = {
    toString$0: function(_) {
      return "Bad state: " + H.S(this.message);
    }
  };
  P.ConcurrentModificationError.prototype = {
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
    }
  };
  P.OutOfMemoryError.prototype = {$isError: 1};
  P.StackOverflowError.prototype = {
    toString$0: function(_) {
      return "Stack Overflow";
    },
    $isError: 1
  };
  P.CyclicInitializationError.prototype = {
    toString$0: function(_) {
      var t1 = this.variableName;
      return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + H.S(t1) + "' during its initialization";
    }
  };
  P.Exception.prototype = {};
  P._Exception.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 == null)
        return "Exception";
      return "Exception: " + H.S(t1);
    },
    $isException: 1
  };
  P.FormatException.prototype = {
    toString$0: function(_) {
      var t1 = this.message,
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException";
      return report;
    },
    $isException: 1
  };
  P.IntegerDivisionByZeroException.prototype = {$isException: 1};
  P.Expando.prototype = {};
  P.Function.prototype = {};
  P.int.prototype = {};
  P.Invocation.prototype = {};
  P._Invocation.prototype = {$isInvocation: 1};
  P.Iterable.prototype = {
    map$1$1: function(_, f, $T) {
      var t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
      return H.MappedIterable_MappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
    },
    map$1: function($receiver, f) {
      return this.map$1$1($receiver, f, null);
    },
    contains$1: function(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); H.boolConversionCheck(t1.moveNext$0());)
        if (H.boolConversionCheck(J.$eq$(t1.get$current(), element)))
          return true;
      return false;
    },
    join$1: function(_, separator) {
      var iterator, buffer;
      H.stringTypeCheck(separator);
      iterator = this.get$iterator(this);
      if (!H.boolConversionCheck(iterator.moveNext$0()))
        return "";
      buffer = P.StringBuffer$("");
      if (separator == null || separator === "") {
        do
          buffer.write$1(H.S(iterator.get$current()));
        while (H.boolConversionCheck(iterator.moveNext$0()));
      } else {
        buffer.write$1(H.S(iterator.get$current()));
        for (; H.boolConversionCheck(iterator.moveNext$0());) {
          buffer.write$1(separator);
          buffer.write$1(H.S(iterator.get$current()));
        }
      }
      return buffer.toString$0(0);
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$from(this, H.boolTypeCheck(growable), H.getRuntimeTypeArgument(this, "Iterable", 0));
    },
    get$length: function(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; H.boolConversionCheck(it.moveNext$0());)
        ++count;
      return count;
    },
    get$isEmpty: function(_) {
      return !H.boolConversionCheck(this.get$iterator(this).moveNext$0());
    },
    get$isNotEmpty: function(_) {
      return !H.boolConversionCheck(this.get$isEmpty(this));
    },
    take$1: function(_, count) {
      return H.TakeIterable_TakeIterable(this, H.intTypeCheck(count), H.getRuntimeTypeArgument(this, "Iterable", 0));
    },
    skip$1: function(_, count) {
      return H.SkipIterable_SkipIterable(this, H.intTypeCheck(count), H.getRuntimeTypeArgument(this, "Iterable", 0));
    },
    get$last: function(_) {
      var result,
        it = this.get$iterator(this);
      if (!H.boolConversionCheck(it.moveNext$0()))
        throw H.wrapException(H.IterableElementError_noElement());
      do
        result = it.get$current();
      while (H.boolConversionCheck(it.moveNext$0()));
      return result;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      H.intTypeCheck(index);
      P.ArgumentError_checkNotNull(index, _s5_);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; H.boolConversionCheck(t1.moveNext$0());) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P._GeneratorIterable.prototype = {};
  P.BidirectionalIterator.prototype = {$isIterator: 1};
  P.Iterator.prototype = {
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  P.List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1};
  P.Map.prototype = {};
  P.MapEntry.prototype = {};
  P.Null.prototype = {
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0: function(_) {
      return "null";
    }
  };
  P.num.prototype = {$isComparable: 1,
    $asComparable: function() {
      return [P.num];
    }
  };
  P.Object.prototype = {constructor: P.Object, $isObject: 1,
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return H.Primitives_objectToHumanReadableString(this);
    },
    noSuchMethod$1: function(_, invocation) {
      H.interceptedTypeCheck(invocation, "$isInvocation");
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    toString: function() {
      return this.toString$0(this);
    }
  };
  P.Pattern.prototype = {};
  P.Match.prototype = {};
  P.RegExp.prototype = {$isPattern: 1};
  P.RegExpMatch.prototype = {$isMatch: 1};
  P.Set.prototype = {};
  P.Sink.prototype = {};
  P.StackTrace.prototype = {};
  P._StringStackTrace.prototype = {$isStackTrace: 1};
  P.Stopwatch.prototype = {};
  P.String.prototype = {$isComparable: 1,
    $asComparable: function() {
      return [P.String];
    },
    $isPattern: 1
  };
  P.Runes.prototype = {
    $asIterable: function() {
      return [P.int];
    }
  };
  P.RuneIterator.prototype = {$isBidirectionalIterator: 1,
    $asBidirectionalIterator: function() {
      return [P.int];
    },
    $isIterator: 1,
    $asIterator: function() {
      return [P.int];
    }
  };
  P.StringBuffer.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._contents);
    },
    write$1: function(obj) {
      this._writeString$1(H.S(obj));
    },
    writeAll$2: function(objects, separator) {
      H.listSuperNativeTypeCheck(objects, "$isIterable");
      H.stringTypeCheck(separator);
      this._contents = H.stringTypeCheck(P.StringBuffer__writeAll(this._contents, objects, separator));
    },
    toString$0: function(_) {
      return H.Primitives_flattenString(this._contents);
    },
    _writeString$1: function(str) {
      this._contents = H.stringTypeCheck(H.Primitives_stringConcatUnchecked(this._contents, H.stringTypeCheck(str)));
    },
    get$isEmpty: function(_) {
      return J.$eq$(this.get$length(this), 0);
    },
    get$isNotEmpty: function(_) {
      return !H.boolConversionCheck(this.get$isEmpty(this));
    },
    $isStringSink: 1
  };
  P.StringSink.prototype = {};
  P.Symbol0.prototype = {};
  P.Type.prototype = {};
  P.Uri.prototype = {};
  P._Uri.prototype = {$isUri: 1};
  P.UriData.prototype = {};
  P._SimpleUri.prototype = {$isUri: 1};
  P._DataUri.prototype = {};
  P._FakeUserTag.prototype = {$isUserTag: 1};
  P.ServiceExtensionResponse.prototype = {};
  P.UserTag.prototype = {};
  P.Metric.prototype = {};
  P.Gauge.prototype = {};
  P.Counter.prototype = {};
  P.Metrics.prototype = {};
  P.ServiceProtocolInfo.prototype = {};
  P.Service.prototype = {};
  P.Flow.prototype = {};
  P.Timeline.prototype = {};
  P.TimelineTask.prototype = {};
  P._AsyncBlock.prototype = {};
  P._SyncBlock.prototype = {};
  W.HtmlElement.prototype = {$isHtmlElement: 1, $isNoncedElement: 1};
  W.AbortPaymentEvent.prototype = {$isAbortPaymentEvent: 1};
  W.AbsoluteOrientationSensor.prototype = {$isAbsoluteOrientationSensor: 1};
  W.AbstractWorker.prototype = {$isEventTarget: 1};
  W.Accelerometer.prototype = {$isAccelerometer: 1};
  W.AccessibleNode.prototype = {$isAccessibleNode: 1};
  W.AccessibleNodeList.prototype = {$isAccessibleNodeList: 1};
  W.AmbientLightSensor.prototype = {$isAmbientLightSensor: 1};
  W.AnchorElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isAnchorElement: 1,
    $isHtmlHyperlinkElementUtils: 1
  };
  W.Animation.prototype = {$isAnimation: 1};
  W.AnimationEffectReadOnly.prototype = {$isAnimationEffectReadOnly: 1};
  W.AnimationEffectTiming.prototype = {$isAnimationEffectTiming: 1};
  W.AnimationEffectTimingReadOnly.prototype = {$isAnimationEffectTimingReadOnly: 1};
  W.AnimationEvent.prototype = {$isAnimationEvent: 1};
  W.AnimationPlaybackEvent.prototype = {$isAnimationPlaybackEvent: 1};
  W.AnimationTimeline.prototype = {$isAnimationTimeline: 1};
  W.AnimationWorkletGlobalScope.prototype = {$isAnimationWorkletGlobalScope: 1};
  W.ApplicationCache.prototype = {$isApplicationCache: 1};
  W.ApplicationCacheErrorEvent.prototype = {$isApplicationCacheErrorEvent: 1};
  W.AreaElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isAreaElement: 1,
    $isHtmlHyperlinkElementUtils: 1
  };
  W.AudioElement.prototype = {$isAudioElement: 1};
  W.AuthenticatorAssertionResponse.prototype = {$isAuthenticatorAssertionResponse: 1};
  W.AuthenticatorAttestationResponse.prototype = {$isAuthenticatorAttestationResponse: 1};
  W.AuthenticatorResponse.prototype = {$isAuthenticatorResponse: 1};
  W.BRElement.prototype = {$isBRElement: 1};
  W.BackgroundFetchClickEvent.prototype = {$isBackgroundFetchClickEvent: 1};
  W.BackgroundFetchEvent.prototype = {$isBackgroundFetchEvent: 1};
  W.BackgroundFetchFailEvent.prototype = {$isBackgroundFetchFailEvent: 1};
  W.BackgroundFetchFetch.prototype = {$isBackgroundFetchFetch: 1};
  W.BackgroundFetchManager.prototype = {$isBackgroundFetchManager: 1};
  W.BackgroundFetchRegistration.prototype = {$isBackgroundFetchRegistration: 1};
  W.BackgroundFetchSettledFetch.prototype = {$isBackgroundFetchSettledFetch: 1};
  W.BackgroundFetchedEvent.prototype = {$isBackgroundFetchedEvent: 1};
  W.BarProp.prototype = {$isBarProp: 1};
  W.BarcodeDetector.prototype = {$isBarcodeDetector: 1};
  W.BaseElement.prototype = {$isBaseElement: 1};
  W.BatteryManager.prototype = {$isBatteryManager: 1};
  W.BeforeInstallPromptEvent.prototype = {$isBeforeInstallPromptEvent: 1};
  W.BeforeUnloadEvent.prototype = {$isBeforeUnloadEvent: 1};
  W.Blob.prototype = {$isBlob: 1};
  W.BlobEvent.prototype = {$isBlobEvent: 1};
  W.BluetoothRemoteGattDescriptor.prototype = {$isBluetoothRemoteGattDescriptor: 1};
  W.Body.prototype = {$isBody: 1};
  W.BodyElement.prototype = {$isBodyElement: 1, $isWindowEventHandlers: 1};
  W.BroadcastChannel.prototype = {$isBroadcastChannel: 1};
  W.BudgetState.prototype = {$isBudgetState: 1};
  W.ButtonElement.prototype = {$isButtonElement: 1};
  W.CDataSection.prototype = {$isCDataSection: 1};
  W.CacheStorage.prototype = {$isCacheStorage: 1};
  W.CanMakePaymentEvent.prototype = {$isCanMakePaymentEvent: 1};
  W.CanvasCaptureMediaStreamTrack.prototype = {$isCanvasCaptureMediaStreamTrack: 1};
  W.CanvasElement.prototype = {$isCanvasElement: 1, $isCanvasImageSource: 1};
  W.CanvasGradient.prototype = {$isCanvasGradient: 1};
  W.CanvasPattern.prototype = {$isCanvasPattern: 1};
  W.CanvasRenderingContext.prototype = {};
  W.CanvasRenderingContext2D.prototype = {$isCanvasRenderingContext: 1, $isCanvasRenderingContext2D: 1};
  W.CharacterData.prototype = {$isCharacterData: 1, $isChildNode: 1, $isNonDocumentTypeChildNode: 1,
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.ChildNode.prototype = {};
  W.Client.prototype = {$isClient: 1};
  W.Clients.prototype = {$isClients: 1};
  W.ClipboardEvent.prototype = {$isClipboardEvent: 1};
  W.CloseEvent.prototype = {$isCloseEvent: 1};
  W.Comment.prototype = {$isComment: 1};
  W.CompositionEvent.prototype = {$isCompositionEvent: 1};
  W.ContentElement.prototype = {$isContentElement: 1};
  W.CookieStore.prototype = {$isCookieStore: 1};
  W.Coordinates.prototype = {$isCoordinates: 1};
  W.Credential.prototype = {$isCredential: 1};
  W.CredentialUserData.prototype = {$isCredentialUserData: 1};
  W.CredentialsContainer.prototype = {$isCredentialsContainer: 1};
  W.Crypto.prototype = {$isCrypto: 1};
  W.CryptoKey.prototype = {$isCryptoKey: 1};
  W.Css.prototype = {$isCss: 1};
  W.CssCharsetRule.prototype = {$isCssCharsetRule: 1};
  W.CssConditionRule.prototype = {$isCssConditionRule: 1};
  W.CssFontFaceRule.prototype = {$isCssFontFaceRule: 1};
  W.CssGroupingRule.prototype = {$isCssGroupingRule: 1};
  W.CssImageValue.prototype = {$isCssImageValue: 1};
  W.CssImportRule.prototype = {$isCssImportRule: 1};
  W.CssKeyframeRule.prototype = {$isCssKeyframeRule: 1};
  W.CssKeyframesRule.prototype = {$isCssKeyframesRule: 1};
  W.CssKeywordValue.prototype = {$isCssKeywordValue: 1};
  W.CssMatrixComponent.prototype = {$isCssMatrixComponent: 1};
  W.CssMediaRule.prototype = {$isCssMediaRule: 1};
  W.CssNamespaceRule.prototype = {$isCssNamespaceRule: 1};
  W.CssNumericValue.prototype = {$isCssNumericValue: 1};
  W.CssPageRule.prototype = {$isCssPageRule: 1};
  W.CssPerspective.prototype = {$isCssPerspective: 1};
  W.CssPositionValue.prototype = {$isCssPositionValue: 1};
  W.CssResourceValue.prototype = {$isCssResourceValue: 1};
  W.CssRotation.prototype = {$isCssRotation: 1};
  W.CssRule.prototype = {$isCssRule: 1};
  W.CssScale.prototype = {$isCssScale: 1};
  W.CssSkew.prototype = {$isCssSkew: 1};
  W.CssStyleDeclaration.prototype = {$isCssStyleDeclaration: 1, $isCssStyleDeclarationBase: 1};
  W._CssStyleDeclarationSet.prototype = {$isCssStyleDeclarationBase: 1};
  W.CssStyleDeclarationBase.prototype = {};
  W.CssStyleRule.prototype = {$isCssStyleRule: 1};
  W.CssStyleSheet.prototype = {$isCssStyleSheet: 1};
  W.CssStyleValue.prototype = {$isCssStyleValue: 1};
  W.CssSupportsRule.prototype = {$isCssSupportsRule: 1};
  W.CssTransformComponent.prototype = {$isCssTransformComponent: 1};
  W.CssTransformValue.prototype = {$isCssTransformValue: 1};
  W.CssTranslation.prototype = {$isCssTranslation: 1};
  W.CssUnitValue.prototype = {$isCssUnitValue: 1};
  W.CssUnparsedValue.prototype = {$isCssUnparsedValue: 1};
  W.CssVariableReferenceValue.prototype = {$isCssVariableReferenceValue: 1};
  W.CssViewportRule.prototype = {$isCssViewportRule: 1};
  W.CssurlImageValue.prototype = {$isCssurlImageValue: 1};
  W.CustomElementRegistry.prototype = {$isCustomElementRegistry: 1};
  W.CustomEvent.prototype = {$isCustomEvent: 1};
  W.DListElement.prototype = {$isDListElement: 1};
  W.DataElement.prototype = {$isDataElement: 1};
  W.DataListElement.prototype = {$isDataListElement: 1};
  W.DataTransfer.prototype = {$isDataTransfer: 1};
  W.DataTransferItem.prototype = {$isDataTransferItem: 1};
  W.DataTransferItemList.prototype = {$isDataTransferItemList: 1};
  W.DedicatedWorkerGlobalScope.prototype = {$isDedicatedWorkerGlobalScope: 1};
  W.DeprecatedStorageInfo.prototype = {$isDeprecatedStorageInfo: 1};
  W.DeprecatedStorageQuota.prototype = {$isDeprecatedStorageQuota: 1};
  W.DeprecationReport.prototype = {$isDeprecationReport: 1};
  W.DetailsElement.prototype = {$isDetailsElement: 1};
  W.DetectedBarcode.prototype = {$isDetectedBarcode: 1};
  W.DetectedFace.prototype = {$isDetectedFace: 1};
  W.DetectedText.prototype = {$isDetectedText: 1};
  W.DeviceAcceleration.prototype = {$isDeviceAcceleration: 1};
  W.DeviceMotionEvent.prototype = {$isDeviceMotionEvent: 1};
  W.DeviceOrientationEvent.prototype = {$isDeviceOrientationEvent: 1};
  W.DeviceRotationRate.prototype = {$isDeviceRotationRate: 1};
  W.DialogElement.prototype = {$isDialogElement: 1};
  W.DirectoryEntry.prototype = {$isDirectoryEntry: 1};
  W.DirectoryReader.prototype = {$isDirectoryReader: 1};
  W.DivElement.prototype = {$isDivElement: 1};
  W.Document.prototype = {
    querySelector$1: function(receiver, selectors) {
      return receiver.querySelector(H.stringTypeCheck(selectors));
    },
    $isDocument: 1
  };
  W.DocumentFragment.prototype = {$isDocumentFragment: 1, $isNonElementParentNode: 1, $isParentNode: 1};
  W.DocumentOrShadowRoot.prototype = {$isDocumentOrShadowRoot: 1};
  W.DocumentTimeline.prototype = {$isDocumentTimeline: 1};
  W.DomError.prototype = {$isDomError: 1};
  W.DomException.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isDomException: 1
  };
  W.DomImplementation.prototype = {$isDomImplementation: 1};
  W.DomIterator.prototype = {$isDomIterator: 1};
  W.DomMatrix.prototype = {$isDomMatrix: 1};
  W.DomMatrixReadOnly.prototype = {$isDomMatrixReadOnly: 1};
  W.DomParser.prototype = {$isDomParser: 1};
  W.DomPoint.prototype = {$isDomPoint: 1};
  W.DomPointReadOnly.prototype = {$isDomPointReadOnly: 1};
  W.DomQuad.prototype = {$isDomQuad: 1};
  W.DomRectList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [[P.Rectangle, P.num]];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [[P.Rectangle, P.num]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Rectangle, P.num]];
    },
    $isDomRectList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [[P.Rectangle, P.num]];
    }
  };
  W.DomRectReadOnly.prototype = {$isDomRectReadOnly: 1, $is_RectangleBase: 1,
    $as_RectangleBase: function() {
      return [P.num];
    },
    $isRectangle: 1,
    $asRectangle: function() {
      return [P.num];
    }
  };
  W.DomStringList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [P.String];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [P.String];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [P.String];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    },
    $isDomStringList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.String];
    }
  };
  W.DomStringMap.prototype = {$isDomStringMap: 1};
  W.DomTokenList.prototype = {$isDomTokenList: 1};
  W._ChildrenElementList.prototype = {
    contains$1: function(_, element) {
      return J.contains$1$asx(this._childElements, element);
    },
    get$isEmpty: function(_) {
      return J.get$_firstElementChild$x(this._element) == null;
    },
    get$length: function(_) {
      return J.get$length$asx(this._childElements);
    },
    $index: function(_, index) {
      return H.interceptedTypeCheck(J.$index$asx(this._childElements, H.intTypeCheck(index)), "$isElement");
    },
    $indexSet: function(_, index, value) {
      H.intTypeCheck(index);
      J._replaceChild$2$x(this._element, H.interceptedTypeCheck(value, "$isElement"), J.$index$asx(this._childElements, index));
    },
    set$length: function(_, newLength) {
      H.intTypeCheck(newLength);
      throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
    },
    add$1: function(_, value) {
      H.interceptedTypeCheck(value, "$isElement");
      J.append$1$x(this._element, value);
      return value;
    },
    get$iterator: function(_) {
      return J.get$iterator$ax(this.toList$0(this));
    },
    addAll$1: function(_, iterable) {
      var t2, t3,
        t1 = W.Element;
      H.assertSubtype(iterable, "$isIterable", [t1], "$asIterable");
      for (t1 = J.get$iterator$ax(iterable instanceof W._ChildNodeListLazy ? P.List_List$from(iterable, true, t1) : iterable), t2 = this._element, t3 = J.getInterceptor$x(t2); H.boolConversionCheck(t1.moveNext$0());)
        t3.append$1(t2, t1.get$current());
    },
    clear$0: function(_) {
      J._clearChildren$0$x(this._element);
    },
    removeLast$0: function(_) {
      var result = this.get$last(this);
      if (result != null)
        J._removeChild$1$x(this._element, result);
      return result;
    },
    get$last: function(_) {
      var result = J.get$_lastElementChild$x(this._element);
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    $asEfficientLengthIterable: function() {
      return [W.Element];
    },
    $asListBase: function() {
      return [W.Element];
    },
    $asListMixin: function() {
      return [W.Element];
    },
    $asIterable: function() {
      return [W.Element];
    },
    $asList: function() {
      return [W.Element];
    },
    $isNodeListWrapper: 1,
    $as_ListBase_Object_ListMixin: function() {
      return [W.Element];
    }
  };
  W.ElementList.prototype = {};
  W._FrozenElementList.prototype = {$isElementList: 1, $isNodeListWrapper: 1};
  W.Element.prototype = {
    get$children: function(receiver) {
      return W._ChildrenElementList$_wrap(receiver);
    },
    get$localName: function(receiver) {
      return receiver.localName;
    },
    toString$0: function(receiver) {
      return this.get$localName(receiver);
    },
    get$onClick: function(receiver) {
      return C.EventStreamProvider_click.forElement$1(receiver);
    },
    $isChildNode: 1,
    $isElement: 1,
    $isGlobalEventHandlers: 1,
    $isNonDocumentTypeChildNode: 1,
    $isParentNode: 1,
    get$_firstElementChild: function(receiver) {
      return receiver.firstElementChild;
    },
    get$_lastElementChild: function(receiver) {
      return receiver.lastElementChild;
    }
  };
  W._ElementFactoryProvider.prototype = {};
  W.ScrollAlignment.prototype = {};
  W.EmbedElement.prototype = {$isEmbedElement: 1};
  W.Entry.prototype = {$isEntry: 1};
  W.ErrorEvent.prototype = {$isErrorEvent: 1};
  W.Event.prototype = {$isEvent: 1};
  W.EventSource.prototype = {$isEventSource: 1};
  W.Events.prototype = {};
  W.ElementEvents.prototype = {};
  W.EventTarget.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      H.stringTypeCheck(type);
      H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
      H.boolTypeCheck(useCapture);
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, useCapture);
    },
    _addEventListener$3: function(receiver, type, listener, options) {
      H.stringTypeCheck(type);
      H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
      H.boolTypeCheck(options);
      return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), options);
    },
    $isEventTarget: 1
  };
  W.ExtendableEvent.prototype = {$isExtendableEvent: 1};
  W.ExtendableMessageEvent.prototype = {$isExtendableMessageEvent: 1};
  W.External.prototype = {$isExternal: 1};
  W.FaceDetector.prototype = {$isFaceDetector: 1};
  W.FederatedCredential.prototype = {$isCredentialUserData: 1, $isFederatedCredential: 1};
  W.FetchEvent.prototype = {$isFetchEvent: 1};
  W.FieldSetElement.prototype = {$isFieldSetElement: 1};
  W.File.prototype = {$isFile: 1};
  W.FileEntry.prototype = {$isFileEntry: 1};
  W.FileList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.File];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.File];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.File];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.File];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.File];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.File];
    },
    $isList: 1,
    $asList: function() {
      return [W.File];
    },
    $isFileList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.File];
    }
  };
  W.FileReader.prototype = {$isFileReader: 1};
  W.FileSystem.prototype = {$isFileSystem: 1};
  W.FileWriter.prototype = {$isFileWriter: 1};
  W.FocusEvent.prototype = {$isFocusEvent: 1};
  W.FontFace.prototype = {$isFontFace: 1};
  W.FontFaceSet.prototype = {$isFontFaceSet: 1};
  W.FontFaceSetLoadEvent.prototype = {$isFontFaceSetLoadEvent: 1};
  W.FontFaceSource.prototype = {$isFontFaceSource: 1};
  W.ForeignFetchEvent.prototype = {$isForeignFetchEvent: 1};
  W.FormData.prototype = {$isFormData: 1};
  W.FormElement.prototype = {$isFormElement: 1,
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Gamepad.prototype = {$isGamepad: 1};
  W.GamepadButton.prototype = {$isGamepadButton: 1};
  W.GamepadEvent.prototype = {$isGamepadEvent: 1};
  W.GamepadPose.prototype = {$isGamepadPose: 1};
  W.Geolocation.prototype = {$isGeolocation: 1};
  W._GeopositionWrapper.prototype = {$isInterceptor: 1, $isGeoposition: 1};
  W.Geoposition.prototype = {$isGeoposition: 1};
  W.GlobalEventHandlers.prototype = {$isInterceptor: 1, $isEventTarget: 1};
  W.Gyroscope.prototype = {$isGyroscope: 1};
  W.HRElement.prototype = {$isHRElement: 1};
  W.HashChangeEvent.prototype = {$isHashChangeEvent: 1};
  W.HeadElement.prototype = {$isHeadElement: 1};
  W.Headers.prototype = {$isHeaders: 1};
  W.HeadingElement.prototype = {$isHeadingElement: 1};
  W.History.prototype = {$isHistory: 1, $isHistoryBase: 1};
  W.HtmlCollection.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isNode");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      H.intTypeCheck(value);
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, H.intTypeCheck(index));
    },
    $isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.Node];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.Node];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $isHtmlCollection: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W.HtmlDocument.prototype = {$isHtmlDocument: 1};
  W.HtmlFormControlsCollection.prototype = {$isHtmlFormControlsCollection: 1};
  W.HtmlHtmlElement.prototype = {$isHtmlHtmlElement: 1};
  W.HtmlHyperlinkElementUtils.prototype = {$isHtmlHyperlinkElementUtils: 1};
  W.HtmlOptionsCollection.prototype = {$isHtmlOptionsCollection: 1};
  W.HttpRequest0.prototype = {$isHttpRequest0: 1};
  W.HttpRequestEventTarget.prototype = {$isHttpRequestEventTarget: 1};
  W.HttpRequestUpload.prototype = {$isHttpRequestUpload: 1};
  W.IFrameElement.prototype = {$isIFrameElement: 1};
  W.IdleDeadline.prototype = {$isIdleDeadline: 1};
  W.ImageBitmap.prototype = {$isImageBitmap: 1};
  W.ImageBitmapRenderingContext.prototype = {$isImageBitmapRenderingContext: 1};
  W.ImageCapture.prototype = {$isImageCapture: 1};
  W.ImageData.prototype = {$isImageData: 1};
  W.ImageElement.prototype = {$isImageElement: 1, $isCanvasImageSource: 1};
  W.InputDeviceCapabilities.prototype = {$isInputDeviceCapabilities: 1};
  W.InputElement.prototype = {$isInputElement: 1, $isInputElementBase: 1, $isHiddenInputElement: 1, $isTextInputElementBase: 1, $isSearchInputElement: 1, $isTextInputElement: 1, $isUrlInputElement: 1, $isTelephoneInputElement: 1, $isEmailInputElement: 1, $isPasswordInputElement: 1, $isRangeInputElementBase: 1, $isDateInputElement: 1, $isMonthInputElement: 1, $isWeekInputElement: 1, $isTimeInputElement: 1, $isLocalDateTimeInputElement: 1, $isNumberInputElement: 1, $isRangeInputElement: 1, $isCheckboxInputElement: 1, $isRadioButtonInputElement: 1, $isFileUploadInputElement: 1, $isSubmitButtonInputElement: 1, $isImageButtonInputElement: 1, $isResetButtonInputElement: 1, $isButtonInputElement: 1};
  W.InputElementBase.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.HiddenInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.TextInputElementBase.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.SearchInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isTextInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.TextInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isTextInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.UrlInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isTextInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.TelephoneInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isTextInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.EmailInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isTextInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.PasswordInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isTextInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.RangeInputElementBase.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.DateInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isRangeInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.MonthInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isRangeInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.WeekInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isRangeInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.TimeInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isRangeInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.LocalDateTimeInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isRangeInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.NumberInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isRangeInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.RangeInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isRangeInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.CheckboxInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.RadioButtonInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.FileUploadInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.SubmitButtonInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.ImageButtonInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.ResetButtonInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.ButtonInputElement.prototype = {$isInterceptor: 1, $isChildNode: 1, $isElement: 1, $isEventTarget: 1, $isGlobalEventHandlers: 1, $isInputElementBase: 1, $isNode: 1, $isNonDocumentTypeChildNode: 1, $isParentNode: 1};
  W.InstallEvent.prototype = {$isInstallEvent: 1};
  W.IntersectionObserver.prototype = {$isIntersectionObserver: 1};
  W.IntersectionObserverEntry.prototype = {$isIntersectionObserverEntry: 1};
  W.InterventionReport.prototype = {$isInterventionReport: 1};
  W.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  W.KeyframeEffect.prototype = {$isKeyframeEffect: 1};
  W.KeyframeEffectReadOnly.prototype = {$isKeyframeEffectReadOnly: 1};
  W.LIElement.prototype = {$isLIElement: 1};
  W.LabelElement.prototype = {$isLabelElement: 1};
  W.LegendElement.prototype = {$isLegendElement: 1};
  W.LinearAccelerationSensor.prototype = {$isLinearAccelerationSensor: 1};
  W.LinkElement.prototype = {$isLinkElement: 1};
  W.Location.prototype = {$isLocation: 1, $isLocationBase: 1};
  W.Magnetometer.prototype = {$isMagnetometer: 1};
  W.MapElement.prototype = {$isMapElement: 1};
  W.MediaCapabilities.prototype = {$isMediaCapabilities: 1};
  W.MediaCapabilitiesInfo.prototype = {$isMediaCapabilitiesInfo: 1};
  W.MediaDeviceInfo.prototype = {$isMediaDeviceInfo: 1};
  W.MediaDevices.prototype = {$isMediaDevices: 1};
  W.MediaElement.prototype = {$isMediaElement: 1};
  W.MediaEncryptedEvent.prototype = {$isMediaEncryptedEvent: 1};
  W.MediaError.prototype = {$isMediaError: 1};
  W.MediaKeyMessageEvent.prototype = {$isMediaKeyMessageEvent: 1};
  W.MediaKeySession.prototype = {$isMediaKeySession: 1};
  W.MediaKeyStatusMap.prototype = {$isMediaKeyStatusMap: 1};
  W.MediaKeySystemAccess.prototype = {$isMediaKeySystemAccess: 1};
  W.MediaKeys.prototype = {$isMediaKeys: 1};
  W.MediaKeysPolicy.prototype = {$isMediaKeysPolicy: 1};
  W.MediaList.prototype = {$isMediaList: 1};
  W.MediaMetadata.prototype = {$isMediaMetadata: 1};
  W.MediaQueryList.prototype = {$isMediaQueryList: 1};
  W.MediaQueryListEvent.prototype = {$isMediaQueryListEvent: 1};
  W.MediaRecorder.prototype = {$isMediaRecorder: 1};
  W.MediaSession.prototype = {$isMediaSession: 1};
  W.MediaSettingsRange.prototype = {$isMediaSettingsRange: 1};
  W.MediaSource.prototype = {$isMediaSource: 1};
  W.MediaStream.prototype = {$isMediaStream: 1};
  W.MediaStreamEvent.prototype = {$isMediaStreamEvent: 1};
  W.MediaStreamTrack.prototype = {$isMediaStreamTrack: 1};
  W.MediaStreamTrackEvent.prototype = {$isMediaStreamTrackEvent: 1};
  W.MemoryInfo0.prototype = {$isMemoryInfo0: 1};
  W.MenuElement.prototype = {$isMenuElement: 1};
  W.MessageChannel.prototype = {$isMessageChannel: 1};
  W.MessageEvent.prototype = {$isMessageEvent: 1};
  W.MessagePort.prototype = {$isMessagePort: 1};
  W.MetaElement.prototype = {$isMetaElement: 1};
  W.Metadata.prototype = {$isMetadata: 1};
  W.MeterElement.prototype = {$isMeterElement: 1};
  W.MidiAccess.prototype = {$isMidiAccess: 1};
  W.MidiConnectionEvent.prototype = {$isMidiConnectionEvent: 1};
  W.MidiInput.prototype = {$isMidiInput: 1};
  W.MidiInputMap.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    },
    $isMidiInputMap: 1
  };
  W.MidiMessageEvent.prototype = {$isMidiMessageEvent: 1};
  W.MidiOutput.prototype = {$isMidiOutput: 1};
  W.MidiOutputMap.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    },
    $isMidiOutputMap: 1
  };
  W.MidiPort.prototype = {$isMidiPort: 1};
  W.MimeType.prototype = {$isMimeType: 1};
  W.MimeTypeArray.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.MimeType];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.MimeType];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.MimeType];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.MimeType];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.MimeType];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.MimeType];
    },
    $isList: 1,
    $asList: function() {
      return [W.MimeType];
    },
    $isMimeTypeArray: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.MimeType];
    }
  };
  W.ModElement.prototype = {$isModElement: 1};
  W.MouseEvent.prototype = {$isMouseEvent: 1};
  W.MutationEvent.prototype = {$isMutationEvent: 1};
  W.MutationObserver.prototype = {$isMutationObserver: 1};
  W.MutationRecord.prototype = {$isMutationRecord: 1};
  W.NavigationPreloadManager.prototype = {$isNavigationPreloadManager: 1};
  W.Navigator.prototype = {$isNavigator: 1, $isNavigatorAutomationInformation: 1, $isNavigatorCookies: 1, $isNavigatorID: 1, $isNavigatorLanguage: 1, $isNavigatorOnLine: 1};
  W.NavigatorAutomationInformation.prototype = {$isNavigatorAutomationInformation: 1};
  W.NavigatorConcurrentHardware.prototype = {$isNavigatorConcurrentHardware: 1};
  W.NavigatorCookies.prototype = {$isNavigatorCookies: 1};
  W.NavigatorID.prototype = {};
  W.NavigatorLanguage.prototype = {};
  W.NavigatorOnLine.prototype = {};
  W.NavigatorUserMediaError.prototype = {$isNavigatorUserMediaError: 1};
  W.NetworkInformation.prototype = {$isNetworkInformation: 1};
  W._ChildNodeListLazy.prototype = {
    get$last: function(_) {
      var result = this._this.lastChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    add$1: function(_, value) {
      J.append$1$x(this._this, H.interceptedTypeCheck(value, "$isNode"));
    },
    addAll$1: function(_, iterable) {
      var t1, t2, len, t3, t4, i;
      H.assertSubtype(iterable, "$isIterable", [W.Node], "$asIterable");
      t1 = J.getInterceptor$(iterable);
      if (!!t1.$is_ChildNodeListLazy) {
        t1 = iterable._this;
        t2 = this._this;
        if (t1 == null ? t2 != null : t1 !== t2) {
          len = iterable.get$length(iterable);
          if (typeof len !== "number")
            return H.iae(len);
          t3 = J.getInterceptor$x(t1);
          t4 = J.getInterceptor$x(t2);
          i = 0;
          for (; i < len; ++i)
            t4.append$1(t2, t3.get$firstChild(t1));
        }
        return;
      }
      for (t1 = t1.get$iterator(iterable), t2 = this._this, t3 = J.getInterceptor$x(t2); H.boolConversionCheck(t1.moveNext$0());)
        t3.append$1(t2, t1.get$current());
    },
    removeLast$0: function(_) {
      var result = this.get$last(this);
      if (result != null)
        J._removeChild$1$x(this._this, result);
      return result;
    },
    clear$0: function(_) {
      J._clearChildren$0$x(this._this);
    },
    $indexSet: function(_, index, value) {
      H.intTypeCheck(index);
      J._replaceChild$2$x(this._this, H.interceptedTypeCheck(value, "$isNode"), this.$index(0, index));
    },
    get$iterator: function(_) {
      return J.get$iterator$ax(J.get$childNodes$x(this._this));
    },
    get$length: function(_) {
      return J.get$length$asx(J.get$childNodes$x(this._this));
    },
    set$length: function(_, value) {
      H.intTypeCheck(value);
      throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index: function(_, index) {
      H.intTypeCheck(index);
      return J.$index$asx(J.get$childNodes$x(this._this), index);
    },
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $asListBase: function() {
      return [W.Node];
    },
    $asListMixin: function() {
      return [W.Node];
    },
    $asIterable: function() {
      return [W.Node];
    },
    $asList: function() {
      return [W.Node];
    },
    $isNodeListWrapper: 1,
    $as_ListBase_Object_ListMixin: function() {
      return [W.Node];
    }
  };
  W.Node.prototype = {
    get$nodes: function(receiver) {
      return W._ChildNodeListLazy$(receiver);
    },
    remove$0: function(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        J._removeChild$1$x(t1, receiver);
    },
    replaceWith$1: function(receiver, otherNode) {
      var $parent, exception;
      H.interceptedTypeCheck(otherNode, "$isNode");
      try {
        $parent = receiver.parentNode;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return receiver;
    },
    _clearChildren$0: function(receiver) {
      var t1;
      for (; t1 = receiver.firstChild, t1 != null;)
        this._removeChild$1(receiver, t1);
    },
    toString$0: function(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    append$1: function(receiver, node) {
      return receiver.appendChild(H.interceptedTypeCheck(node, "$isNode"));
    },
    _removeChild$1: function(receiver, child) {
      return receiver.removeChild(H.interceptedTypeCheck(child, "$isNode"));
    },
    _replaceChild$2: function(receiver, node, child) {
      return receiver.replaceChild(H.interceptedTypeCheck(node, "$isNode"), H.interceptedTypeCheck(child, "$isNode"));
    },
    set$text: function(receiver, text) {
      receiver.textContent = H.stringTypeCheck(text);
    },
    $isNode: 1,
    get$childNodes: function(receiver) {
      return receiver.childNodes;
    },
    get$firstChild: function(receiver) {
      return receiver.firstChild;
    }
  };
  W.NodeFilter.prototype = {$isNodeFilter: 1};
  W.NodeIterator.prototype = {$isNodeIterator: 1};
  W.NodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H.intTypeCheck(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isNode");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      H.intTypeCheck(value);
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, H.intTypeCheck(index));
    },
    $isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.Node];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.Node];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $isNodeList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W.NonDocumentTypeChildNode.prototype = {$isNonDocumentTypeChildNode: 1};
  W.NonElementParentNode.prototype = {$isNonElementParentNode: 1};
  W.NoncedElement.prototype = {$isNoncedElement: 1};
  W.Notification.prototype = {$isNotification: 1};
  W.NotificationEvent.prototype = {$isNotificationEvent: 1};
  W.OListElement.prototype = {$isOListElement: 1};
  W.ObjectElement.prototype = {$isObjectElement: 1};
  W.OffscreenCanvas.prototype = {$isOffscreenCanvas: 1};
  W.OffscreenCanvasRenderingContext2D.prototype = {$isOffscreenCanvasRenderingContext2D: 1, $is_CanvasPath: 1};
  W.OptGroupElement.prototype = {$isOptGroupElement: 1};
  W.OptionElement.prototype = {$isOptionElement: 1};
  W.OrientationSensor.prototype = {$isOrientationSensor: 1};
  W.OutputElement.prototype = {$isOutputElement: 1};
  W.OverconstrainedError.prototype = {$isOverconstrainedError: 1};
  W.PageTransitionEvent.prototype = {$isPageTransitionEvent: 1};
  W.PaintRenderingContext2D.prototype = {$isPaintRenderingContext2D: 1, $is_CanvasPath: 1};
  W.PaintSize.prototype = {$isPaintSize: 1};
  W.PaintWorkletGlobalScope.prototype = {$isPaintWorkletGlobalScope: 1};
  W.ParagraphElement.prototype = {$isParagraphElement: 1};
  W.ParamElement.prototype = {$isParamElement: 1};
  W.ParentNode.prototype = {};
  W.PasswordCredential.prototype = {$isCredentialUserData: 1, $isPasswordCredential: 1};
  W.Path2D.prototype = {$isPath2D: 1, $is_CanvasPath: 1};
  W.PaymentAddress.prototype = {$isPaymentAddress: 1};
  W.PaymentInstruments.prototype = {$isPaymentInstruments: 1};
  W.PaymentManager.prototype = {$isPaymentManager: 1};
  W.PaymentRequest.prototype = {$isPaymentRequest: 1};
  W.PaymentRequestEvent.prototype = {$isPaymentRequestEvent: 1};
  W.PaymentRequestUpdateEvent.prototype = {$isPaymentRequestUpdateEvent: 1};
  W.PaymentResponse.prototype = {$isPaymentResponse: 1};
  W.Performance.prototype = {$isPerformance: 1};
  W.PerformanceEntry.prototype = {$isPerformanceEntry: 1};
  W.PerformanceLongTaskTiming.prototype = {$isPerformanceLongTaskTiming: 1};
  W.PerformanceMark.prototype = {$isPerformanceMark: 1};
  W.PerformanceMeasure.prototype = {$isPerformanceMeasure: 1};
  W.PerformanceNavigation.prototype = {$isPerformanceNavigation: 1};
  W.PerformanceNavigationTiming.prototype = {$isPerformanceNavigationTiming: 1};
  W.PerformanceObserver.prototype = {$isPerformanceObserver: 1};
  W.PerformanceObserverEntryList.prototype = {$isPerformanceObserverEntryList: 1};
  W.PerformancePaintTiming.prototype = {$isPerformancePaintTiming: 1};
  W.PerformanceResourceTiming.prototype = {$isPerformanceResourceTiming: 1};
  W.PerformanceServerTiming.prototype = {$isPerformanceServerTiming: 1};
  W.PerformanceTiming.prototype = {$isPerformanceTiming: 1};
  W.PermissionStatus.prototype = {$isPermissionStatus: 1};
  W.Permissions0.prototype = {$isPermissions0: 1};
  W.PhotoCapabilities.prototype = {$isPhotoCapabilities: 1};
  W.PictureElement.prototype = {$isPictureElement: 1};
  W.Plugin.prototype = {$isPlugin: 1};
  W.PluginArray.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.Plugin];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.Plugin];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Plugin];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Plugin];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Plugin];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Plugin];
    },
    $isList: 1,
    $asList: function() {
      return [W.Plugin];
    },
    $isPluginArray: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Plugin];
    }
  };
  W.PointerEvent.prototype = {$isPointerEvent: 1};
  W.PopStateEvent.prototype = {$isPopStateEvent: 1};
  W.PositionError.prototype = {$isPositionError: 1};
  W.PreElement.prototype = {$isPreElement: 1};
  W.Presentation.prototype = {$isPresentation: 1};
  W.PresentationAvailability.prototype = {$isPresentationAvailability: 1};
  W.PresentationConnection.prototype = {$isPresentationConnection: 1};
  W.PresentationConnectionAvailableEvent.prototype = {$isPresentationConnectionAvailableEvent: 1};
  W.PresentationConnectionCloseEvent.prototype = {$isPresentationConnectionCloseEvent: 1};
  W.PresentationConnectionList.prototype = {$isPresentationConnectionList: 1};
  W.PresentationReceiver.prototype = {$isPresentationReceiver: 1};
  W.PresentationRequest.prototype = {$isPresentationRequest: 1};
  W.ProcessingInstruction.prototype = {$isProcessingInstruction: 1};
  W.ProgressElement.prototype = {$isProgressElement: 1};
  W.ProgressEvent.prototype = {$isProgressEvent: 1};
  W.PromiseRejectionEvent.prototype = {$isPromiseRejectionEvent: 1};
  W.PublicKeyCredential.prototype = {$isPublicKeyCredential: 1};
  W.PushEvent.prototype = {$isPushEvent: 1};
  W.PushManager.prototype = {$isPushManager: 1};
  W.PushMessageData.prototype = {$isPushMessageData: 1};
  W.PushSubscription.prototype = {$isPushSubscription: 1};
  W.PushSubscriptionOptions.prototype = {$isPushSubscriptionOptions: 1};
  W.QuoteElement.prototype = {$isQuoteElement: 1};
  W.Range.prototype = {$isRange: 1};
  W.RelatedApplication.prototype = {$isRelatedApplication: 1};
  W.RelativeOrientationSensor.prototype = {$isRelativeOrientationSensor: 1};
  W.RemotePlayback.prototype = {$isRemotePlayback: 1};
  W.ReportBody.prototype = {$isReportBody: 1};
  W.ReportingObserver.prototype = {$isReportingObserver: 1};
  W.ResizeObserver.prototype = {$isResizeObserver: 1};
  W.ResizeObserverEntry.prototype = {$isResizeObserverEntry: 1};
  W.RtcCertificate.prototype = {$isRtcCertificate: 1};
  W.RtcDataChannel.prototype = {$isRtcDataChannel: 1};
  W.RtcDataChannelEvent.prototype = {$isRtcDataChannelEvent: 1};
  W.RtcDtmfSender.prototype = {$isRtcDtmfSender: 1};
  W.RtcDtmfToneChangeEvent.prototype = {$isRtcDtmfToneChangeEvent: 1};
  W.RtcIceCandidate.prototype = {$isRtcIceCandidate: 1};
  W.RtcLegacyStatsReport.prototype = {$isRtcLegacyStatsReport: 1};
  W.RtcPeerConnection.prototype = {$isRtcPeerConnection: 1};
  W.RtcPeerConnectionIceEvent.prototype = {$isRtcPeerConnectionIceEvent: 1};
  W.RtcRtpContributingSource.prototype = {$isRtcRtpContributingSource: 1};
  W.RtcRtpReceiver.prototype = {$isRtcRtpReceiver: 1};
  W.RtcRtpSender.prototype = {$isRtcRtpSender: 1};
  W.RtcSessionDescription.prototype = {$isRtcSessionDescription: 1};
  W.RtcStatsReport.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    },
    $isRtcStatsReport: 1
  };
  W.RtcStatsResponse.prototype = {$isRtcStatsResponse: 1};
  W.RtcTrackEvent.prototype = {$isRtcTrackEvent: 1};
  W.Screen.prototype = {$isScreen: 1};
  W.ScreenOrientation.prototype = {$isScreenOrientation: 1};
  W.ScriptElement.prototype = {$isScriptElement: 1};
  W.ScrollState.prototype = {$isScrollState: 1};
  W.ScrollTimeline.prototype = {$isScrollTimeline: 1};
  W.SecurityPolicyViolationEvent.prototype = {$isSecurityPolicyViolationEvent: 1};
  W.SelectElement.prototype = {$isSelectElement: 1,
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Selection.prototype = {$isSelection: 1};
  W.Sensor.prototype = {$isSensor: 1};
  W.SensorErrorEvent.prototype = {$isSensorErrorEvent: 1};
  W.ServiceWorker.prototype = {$isAbstractWorker: 1, $isServiceWorker: 1};
  W.ServiceWorkerContainer.prototype = {$isServiceWorkerContainer: 1};
  W.ServiceWorkerGlobalScope.prototype = {$isServiceWorkerGlobalScope: 1};
  W.ServiceWorkerRegistration.prototype = {$isServiceWorkerRegistration: 1};
  W.ShadowElement.prototype = {$isShadowElement: 1};
  W.ShadowRoot.prototype = {$isDocumentOrShadowRoot: 1, $isShadowRoot: 1};
  W.SharedArrayBuffer.prototype = {$isSharedArrayBuffer: 1};
  W.SharedWorker.prototype = {$isAbstractWorker: 1, $isSharedWorker: 1};
  W.SharedWorkerGlobalScope.prototype = {$isSharedWorkerGlobalScope: 1};
  W.SlotElement.prototype = {$isSlotElement: 1};
  W.SourceBuffer.prototype = {$isSourceBuffer: 1};
  W.SourceBufferList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.SourceBuffer];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.SourceBuffer];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SourceBuffer];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.SourceBuffer];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SourceBuffer];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SourceBuffer];
    },
    $isList: 1,
    $asList: function() {
      return [W.SourceBuffer];
    },
    $isSourceBufferList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.SourceBuffer];
    }
  };
  W.SourceElement.prototype = {$isSourceElement: 1};
  W.SpanElement.prototype = {$isSpanElement: 1};
  W.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  W.SpeechGrammarList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.SpeechGrammar];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.SpeechGrammar];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechGrammar];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.SpeechGrammar];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SpeechGrammar];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechGrammar];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechGrammar];
    },
    $isSpeechGrammarList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.SpeechGrammar];
    }
  };
  W.SpeechRecognition.prototype = {$isSpeechRecognition: 1};
  W.SpeechRecognitionAlternative.prototype = {$isSpeechRecognitionAlternative: 1};
  W.SpeechRecognitionError.prototype = {$isSpeechRecognitionError: 1};
  W.SpeechRecognitionEvent.prototype = {$isSpeechRecognitionEvent: 1};
  W.SpeechRecognitionResult.prototype = {$isSpeechRecognitionResult: 1};
  W.SpeechSynthesis.prototype = {$isSpeechSynthesis: 1};
  W.SpeechSynthesisEvent.prototype = {$isSpeechSynthesisEvent: 1};
  W.SpeechSynthesisUtterance.prototype = {$isSpeechSynthesisUtterance: 1};
  W.SpeechSynthesisVoice.prototype = {$isSpeechSynthesisVoice: 1};
  W.StaticRange.prototype = {$isStaticRange: 1};
  W.Storage.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, P.String];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, P.String];
    },
    $isStorage: 1
  };
  W.StorageEvent.prototype = {$isStorageEvent: 1};
  W.StorageManager.prototype = {$isStorageManager: 1};
  W.StyleElement.prototype = {$isStyleElement: 1};
  W.StyleMedia.prototype = {$isStyleMedia: 1};
  W.StylePropertyMap.prototype = {$isStylePropertyMap: 1};
  W.StylePropertyMapReadonly.prototype = {$isStylePropertyMapReadonly: 1};
  W.StyleSheet.prototype = {$isStyleSheet: 1};
  W.SyncEvent.prototype = {$isSyncEvent: 1};
  W.SyncManager.prototype = {$isSyncManager: 1};
  W.TableCaptionElement.prototype = {$isTableCaptionElement: 1};
  W.TableCellElement.prototype = {$isTableCellElement: 1};
  W.TableColElement.prototype = {$isTableColElement: 1};
  W.TableElement.prototype = {$isTableElement: 1};
  W.TableRowElement.prototype = {$isTableRowElement: 1};
  W.TableSectionElement.prototype = {$isTableSectionElement: 1};
  W.TaskAttributionTiming.prototype = {$isTaskAttributionTiming: 1};
  W.TemplateElement.prototype = {$isTemplateElement: 1};
  W.Text.prototype = {$isText: 1};
  W.TextAreaElement.prototype = {$isTextAreaElement: 1};
  W.TextDetector.prototype = {$isTextDetector: 1};
  W.TextEvent.prototype = {$isTextEvent: 1};
  W.TextMetrics.prototype = {$isTextMetrics: 1};
  W.TextTrack.prototype = {$isTextTrack: 1};
  W.TextTrackCue.prototype = {$isTextTrackCue: 1};
  W.TextTrackCueList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.TextTrackCue];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.TextTrackCue];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrackCue];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.TextTrackCue];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.TextTrackCue];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrackCue];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrackCue];
    },
    $isTextTrackCueList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.TextTrackCue];
    }
  };
  W.TextTrackList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.TextTrack];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.TextTrack];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrack];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.TextTrack];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.TextTrack];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrack];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrack];
    },
    $isTextTrackList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.TextTrack];
    }
  };
  W.TimeElement.prototype = {$isTimeElement: 1};
  W.TimeRanges.prototype = {$isTimeRanges: 1};
  W.TitleElement.prototype = {$isTitleElement: 1};
  W.Touch.prototype = {$isTouch: 1};
  W.TouchEvent.prototype = {$isTouchEvent: 1};
  W.TouchList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.Touch];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.Touch];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Touch];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Touch];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Touch];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Touch];
    },
    $isList: 1,
    $asList: function() {
      return [W.Touch];
    },
    $isTouchList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Touch];
    }
  };
  W.TrackDefault.prototype = {$isTrackDefault: 1};
  W.TrackDefaultList.prototype = {$isTrackDefaultList: 1};
  W.TrackElement.prototype = {$isTrackElement: 1};
  W.TrackEvent.prototype = {$isTrackEvent: 1};
  W.TransitionEvent.prototype = {$isTransitionEvent: 1};
  W.TreeWalker.prototype = {$isTreeWalker: 1};
  W.TrustedHtml.prototype = {$isTrustedHtml: 1};
  W.TrustedScriptUrl.prototype = {$isTrustedScriptUrl: 1};
  W.TrustedUrl.prototype = {$isTrustedUrl: 1};
  W.UIEvent.prototype = {$isUIEvent: 1};
  W.UListElement.prototype = {$isUListElement: 1};
  W.UnderlyingSourceBase.prototype = {$isUnderlyingSourceBase: 1};
  W.UnknownElement.prototype = {$isUnknownElement: 1};
  W.Url.prototype = {$isUrl: 1};
  W.UrlSearchParams.prototype = {$isUrlSearchParams: 1};
  W.UrlUtilsReadOnly.prototype = {};
  W.VR.prototype = {$isVR: 1};
  W.VRCoordinateSystem.prototype = {$isVRCoordinateSystem: 1};
  W.VRDevice.prototype = {$isVRDevice: 1};
  W.VRDeviceEvent.prototype = {$isVRDeviceEvent: 1};
  W.VRDisplay.prototype = {$isVRDisplay: 1};
  W.VRDisplayCapabilities.prototype = {$isVRDisplayCapabilities: 1};
  W.VRDisplayEvent.prototype = {$isVRDisplayEvent: 1};
  W.VREyeParameters.prototype = {$isVREyeParameters: 1};
  W.VRFrameData.prototype = {$isVRFrameData: 1};
  W.VRFrameOfReference.prototype = {$isVRFrameOfReference: 1};
  W.VRPose.prototype = {$isVRPose: 1};
  W.VRSession.prototype = {$isVRSession: 1};
  W.VRSessionEvent.prototype = {$isVRSessionEvent: 1};
  W.VRStageBounds.prototype = {$isVRStageBounds: 1};
  W.VRStageBoundsPoint.prototype = {$isVRStageBoundsPoint: 1};
  W.VRStageParameters.prototype = {$isVRStageParameters: 1};
  W.ValidityState.prototype = {$isValidityState: 1};
  W.VideoElement.prototype = {$isVideoElement: 1, $isCanvasImageSource: 1};
  W.VideoPlaybackQuality.prototype = {$isVideoPlaybackQuality: 1};
  W.VideoTrack.prototype = {$isVideoTrack: 1};
  W.VideoTrackList.prototype = {$isVideoTrackList: 1};
  W.VisualViewport.prototype = {$isVisualViewport: 1};
  W.VttCue.prototype = {$isVttCue: 1};
  W.VttRegion.prototype = {$isVttRegion: 1};
  W.WebSocket0.prototype = {$isWebSocket0: 1};
  W.WheelEvent.prototype = {$isWheelEvent: 1};
  W.Window.prototype = {$isGlobalEventHandlers: 1, $isWindow: 1, $isWindowBase64: 1, $isWindowEventHandlers: 1, $is_WindowTimers: 1, $isWindowBase: 1};
  W._BeforeUnloadEvent.prototype = {$isBeforeUnloadEvent: 1};
  W._BeforeUnloadEventStreamProvider.prototype = {$isEventStreamProvider: 1,
    $asEventStreamProvider: function() {
      return [W.BeforeUnloadEvent];
    }
  };
  W.WindowBase64.prototype = {};
  W.WindowClient.prototype = {$isWindowClient: 1};
  W.WindowEventHandlers.prototype = {};
  W.Worker.prototype = {$isAbstractWorker: 1, $isWorker: 1};
  W.WorkerGlobalScope.prototype = {$isWindowBase64: 1, $isWorkerGlobalScope: 1, $is_WindowTimers: 1};
  W.WorkerPerformance.prototype = {$isWorkerPerformance: 1};
  W.WorkletAnimation.prototype = {$isWorkletAnimation: 1};
  W.WorkletGlobalScope.prototype = {$isWorkletGlobalScope: 1};
  W.XPathEvaluator.prototype = {$isXPathEvaluator: 1};
  W.XPathExpression.prototype = {$isXPathExpression: 1};
  W.XPathNSResolver.prototype = {$isXPathNSResolver: 1};
  W.XPathResult.prototype = {$isXPathResult: 1};
  W.XmlDocument.prototype = {$isXmlDocument: 1};
  W.XmlSerializer.prototype = {$isXmlSerializer: 1};
  W.XsltProcessor.prototype = {$isXsltProcessor: 1};
  W._Attr.prototype = {$is_Attr: 1};
  W._Bluetooth.prototype = {$is_Bluetooth: 1};
  W._BluetoothCharacteristicProperties.prototype = {$is_BluetoothCharacteristicProperties: 1};
  W._BluetoothDevice.prototype = {$is_BluetoothDevice: 1};
  W._BluetoothRemoteGATTCharacteristic.prototype = {$is_BluetoothRemoteGATTCharacteristic: 1};
  W._BluetoothRemoteGATTServer.prototype = {$is_BluetoothRemoteGATTServer: 1};
  W._BluetoothRemoteGATTService.prototype = {$is_BluetoothRemoteGATTService: 1};
  W._BluetoothUUID.prototype = {$is_BluetoothUUID: 1};
  W._BudgetService.prototype = {$is_BudgetService: 1};
  W._Cache.prototype = {$is_Cache: 1};
  W._CanvasPath.prototype = {};
  W._Clipboard.prototype = {$is_Clipboard: 1};
  W._CssRuleList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.CssRule];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.CssRule];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.CssRule];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.CssRule];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.CssRule];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.CssRule];
    },
    $isList: 1,
    $asList: function() {
      return [W.CssRule];
    },
    $is_CssRuleList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.CssRule];
    }
  };
  W._DOMFileSystemSync.prototype = {$is_DOMFileSystemSync: 1};
  W._DirectoryEntrySync.prototype = {$is_DirectoryEntrySync: 1};
  W._DirectoryReaderSync.prototype = {$is_DirectoryReaderSync: 1};
  W._DocumentType.prototype = {$isChildNode: 1, $is_DocumentType: 1};
  W._DomRect.prototype = {$is_DomRect: 1};
  W._JenkinsSmiHash.prototype = {};
  W._EntrySync.prototype = {$is_EntrySync: 1};
  W._FileEntrySync.prototype = {$is_FileEntrySync: 1};
  W._FileReaderSync.prototype = {$is_FileReaderSync: 1};
  W._FileWriterSync.prototype = {$is_FileWriterSync: 1};
  W._GamepadList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.Gamepad];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.Gamepad];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Gamepad];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Gamepad];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Gamepad];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Gamepad];
    },
    $isList: 1,
    $asList: function() {
      return [W.Gamepad];
    },
    $is_GamepadList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Gamepad];
    }
  };
  W._HTMLAllCollection.prototype = {$is_HTMLAllCollection: 1};
  W._HTMLDirectoryElement.prototype = {$is_HTMLDirectoryElement: 1};
  W._HTMLFontElement.prototype = {$is_HTMLFontElement: 1};
  W._HTMLFrameElement.prototype = {$is_HTMLFrameElement: 1};
  W._HTMLFrameSetElement.prototype = {$isWindowEventHandlers: 1, $is_HTMLFrameSetElement: 1};
  W._HTMLMarqueeElement.prototype = {$is_HTMLMarqueeElement: 1};
  W._Mojo.prototype = {$is_Mojo: 1};
  W._MojoHandle.prototype = {$is_MojoHandle: 1};
  W._MojoInterfaceInterceptor.prototype = {$is_MojoInterfaceInterceptor: 1};
  W._MojoInterfaceRequestEvent.prototype = {$is_MojoInterfaceRequestEvent: 1};
  W._MojoWatcher.prototype = {$is_MojoWatcher: 1};
  W._NFC.prototype = {$is_NFC: 1};
  W._NamedNodeMap.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.Node];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.Node];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $is_NamedNodeMap: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W._PagePopupController.prototype = {$is_PagePopupController: 1};
  W._Report.prototype = {$is_Report: 1};
  W._Request.prototype = {$is_Request: 1};
  W._ResourceProgressEvent.prototype = {$is_ResourceProgressEvent: 1};
  W._Response.prototype = {$is_Response: 1};
  W._SpeechRecognitionResultList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.SpeechRecognitionResult];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SpeechRecognitionResult];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechRecognitionResult];
    },
    $is_SpeechRecognitionResultList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.SpeechRecognitionResult];
    }
  };
  W._StyleSheetList.prototype = {$isJSIndexable: 1,
    $asJSIndexable: function() {
      return [W.StyleSheet];
    },
    $isJSMutableIndexable: 1,
    $asJSMutableIndexable: function() {
      return [W.StyleSheet];
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.StyleSheet];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.StyleSheet];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.StyleSheet];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.StyleSheet];
    },
    $isList: 1,
    $asList: function() {
      return [W.StyleSheet];
    },
    $is_StyleSheetList: 1,
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.StyleSheet];
    }
  };
  W._SubtleCrypto.prototype = {$is_SubtleCrypto: 1};
  W._USB.prototype = {$is_USB: 1};
  W._USBAlternateInterface.prototype = {$is_USBAlternateInterface: 1};
  W._USBConfiguration.prototype = {$is_USBConfiguration: 1};
  W._USBConnectionEvent.prototype = {$is_USBConnectionEvent: 1};
  W._USBDevice.prototype = {$is_USBDevice: 1};
  W._USBEndpoint.prototype = {$is_USBEndpoint: 1};
  W._USBInTransferResult.prototype = {$is_USBInTransferResult: 1};
  W._USBInterface.prototype = {$is_USBInterface: 1};
  W._USBIsochronousInTransferPacket.prototype = {$is_USBIsochronousInTransferPacket: 1};
  W._USBIsochronousInTransferResult.prototype = {$is_USBIsochronousInTransferResult: 1};
  W._USBIsochronousOutTransferPacket.prototype = {$is_USBIsochronousOutTransferPacket: 1};
  W._USBIsochronousOutTransferResult.prototype = {$is_USBIsochronousOutTransferResult: 1};
  W._USBOutTransferResult.prototype = {$is_USBOutTransferResult: 1};
  W._WindowTimers.prototype = {};
  W._WorkerLocation.prototype = {$isUrlUtilsReadOnly: 1, $is_WorkerLocation: 1};
  W._WorkerNavigator.prototype = {$isNavigatorID: 1, $isNavigatorOnLine: 1, $is_WorkerNavigator: 1};
  W._Worklet.prototype = {$is_Worklet: 1};
  W._AttributeMap.prototype = {
    $asMapBase: function() {
      return [P.String, P.String];
    },
    $asMapMixin: function() {
      return [P.String, P.String];
    },
    $asMap: function() {
      return [P.String, P.String];
    }
  };
  W._ElementAttributeMap.prototype = {};
  W._NamespacedAttributeMap.prototype = {};
  W._DataAttributeMap.prototype = {
    $asMapBase: function() {
      return [P.String, P.String];
    },
    $asMapMixin: function() {
      return [P.String, P.String];
    },
    $asMap: function() {
      return [P.String, P.String];
    }
  };
  W.CanvasImageSource.prototype = {};
  W.WindowBase.prototype = {$isInterceptor: 1, $isEventTarget: 1};
  W.LocationBase.prototype = {};
  W.HistoryBase.prototype = {};
  W.CssClassSet.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isSet: 1,
    $asSet: function() {
      return [P.String];
    }
  };
  W._ContentCssRect.prototype = {};
  W._ContentCssListRect.prototype = {};
  W._PaddingCssRect.prototype = {};
  W._BorderCssRect.prototype = {};
  W._MarginCssRect.prototype = {};
  W.CssRect.prototype = {$is_RectangleBase: 1,
    $as_RectangleBase: function() {
      return [P.num];
    },
    $isRectangle: 1,
    $asRectangle: function() {
      return [P.num];
    }
  };
  W._MultiElementCssClassSet.prototype = {};
  W._ElementCssClassSet.prototype = {};
  W.Dimension.prototype = {};
  W.EventStreamProvider.prototype = {
    forElement$1: function(e) {
      return W._ElementEventStreamImpl$(H.interceptedTypeCheck(e, "$isElement"), this._eventType, false, H.getTypeArgumentByIndex(this, 0));
    }
  };
  W.ElementStream.prototype = {$isStream: 1};
  W._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.interceptedTypeCheck(onError, "$isFunction");
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      H.boolTypeCheck(cancelOnError);
      return W._EventStreamSubscription$(_this._html$_target, _this._eventType, onData, _this._useCapture, t1);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  W._ElementEventStreamImpl.prototype = {$isElementStream: 1};
  W._ElementListEventStreamImpl.prototype = {$isElementStream: 1};
  W._EventStreamSubscription.prototype = {
    _EventStreamSubscription$4: function(_target, _eventType, onData, _useCapture, $T) {
      this._tryResume$0();
    },
    get$isPaused: function() {
      return false;
    },
    _tryResume$0: function() {
      var _this = this,
        t1 = _this._html$_onData;
      if (t1 != null && !H.boolConversionCheck(_this.get$isPaused()))
        J.addEventListener$3$x(_this._html$_target, _this._eventType, t1, _this._useCapture);
    }
  };
  W._EventStreamSubscription_closure.prototype = {
    call$1: function(e) {
      return this.onData.call$1(H.interceptedTypeCheck(e, "$isEvent"));
    },
    $signature: 37
  };
  W.CustomStream.prototype = {$isStream: 1};
  W._CustomEventStreamImpl.prototype = {$isCustomStream: 1};
  W._CustomKeyEventStreamImpl.prototype = {
    $asStream: function() {
      return [W.KeyEvent];
    },
    $asCustomStream: function() {
      return [W.KeyEvent];
    },
    $as_CustomEventStreamImpl: function() {
      return [W.KeyEvent];
    }
  };
  W._StreamPool.prototype = {};
  W._CustomEventStreamProvider.prototype = {$isEventStreamProvider: 1};
  W._Html5NodeValidator.prototype = {$isNodeValidator: 1};
  W.ImmutableListMixin.prototype = {
    get$iterator: function(receiver) {
      return W.FixedSizeListIterator$(receiver, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0));
    },
    add$1: function(receiver, value) {
      H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0));
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    },
    addAll$1: function(receiver, iterable) {
      H.assertSubtype(iterable, "$isIterable", [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0)], "$asIterable");
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    },
    removeLast$0: function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.KeyCode.prototype = {};
  W.KeyLocation.prototype = {};
  W._KeyName.prototype = {};
  W._KeyboardEventHandler.prototype = {
    $asEventStreamProvider: function() {
      return [W.KeyEvent];
    }
  };
  W.KeyboardEventStream.prototype = {};
  W.NodeValidatorBuilder.prototype = {$isNodeValidator: 1};
  W._SimpleNodeValidator.prototype = {$isNodeValidator: 1};
  W._CustomElementNodeValidator.prototype = {};
  W._TemplatingNodeValidator.prototype = {};
  W._SvgNodeValidator.prototype = {$isNodeValidator: 1};
  W.ReadyState.prototype = {};
  W._WrappedList.prototype = {$isNodeListWrapper: 1};
  W._WrappedIterator.prototype = {$isIterator: 1};
  W._HttpRequestUtils.prototype = {};
  W.FixedSizeListIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        nextPosition = J.$add$ansx(_this._position, 1),
        t1 = _this._length;
      if (typeof nextPosition !== "number")
        return nextPosition.$lt();
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (nextPosition < t1) {
        _this.set$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_current(null);
      _this._position = H.intTypeCheck(t1);
      return false;
    },
    get$current: function() {
      return this._current;
    },
    set$_current: function(_current) {
      this._current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1,
    current$0: function() {
      return this.get$current().call$0();
    }
  };
  W._VariableSizeListIterator.prototype = {$isIterator: 1};
  W.Console.prototype = {};
  W._JSElementUpgrader.prototype = {$isElementUpgrader: 1};
  W._DOMWindowCrossFrame.prototype = {$isInterceptor: 1, $isEventTarget: 1, $isWindowBase: 1};
  W._LocationCrossFrame.prototype = {$isLocationBase: 1};
  W._HistoryCrossFrame.prototype = {$isHistoryBase: 1};
  W.KeyEvent.prototype = {$isKeyboardEvent: 1, $isUIEvent: 1};
  W.Platform.prototype = {};
  W._WrappedEvent.prototype = {$isInterceptor: 1, $isEvent: 1};
  W.ElementUpgrader.prototype = {};
  W.NodeValidator.prototype = {};
  W.NodeTreeSanitizer.prototype = {};
  W._TrustedHtmlTreeSanitizer.prototype = {$isNodeTreeSanitizer: 1};
  W.UriPolicy.prototype = {};
  W._SameOriginUriPolicy.prototype = {$isUriPolicy: 1};
  W._ThrowsNodeValidator.prototype = {$isNodeValidator: 1};
  W._ValidatingTreeSanitizer.prototype = {$isNodeTreeSanitizer: 1};
  W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase.prototype = {$isCssStyleDeclarationBase: 1};
  W._DomRectList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [[P.Rectangle, P.num]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Rectangle, P.num]];
    }
  };
  W._DomRectList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [[P.Rectangle, P.num]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Rectangle, P.num]];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [[P.Rectangle, P.num]];
    }
  };
  W._DomStringList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    }
  };
  W._DomStringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.String];
    }
  };
  W._FileList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.File];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.File];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.File];
    },
    $isList: 1,
    $asList: function() {
      return [W.File];
    }
  };
  W._FileList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.File];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.File];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.File];
    },
    $isList: 1,
    $asList: function() {
      return [W.File];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.File];
    }
  };
  W._HtmlCollection_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    }
  };
  W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W._MidiInputMap_Interceptor_MapMixin.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  W._MidiOutputMap_Interceptor_MapMixin.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  W._MimeTypeArray_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.MimeType];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.MimeType];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.MimeType];
    },
    $isList: 1,
    $asList: function() {
      return [W.MimeType];
    }
  };
  W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.MimeType];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.MimeType];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.MimeType];
    },
    $isList: 1,
    $asList: function() {
      return [W.MimeType];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.MimeType];
    }
  };
  W._NodeList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    }
  };
  W._NodeList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W._PluginArray_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Plugin];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Plugin];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Plugin];
    },
    $isList: 1,
    $asList: function() {
      return [W.Plugin];
    }
  };
  W._PluginArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Plugin];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Plugin];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Plugin];
    },
    $isList: 1,
    $asList: function() {
      return [W.Plugin];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Plugin];
    }
  };
  W._RtcStatsReport_Interceptor_MapMixin.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  W._SourceBufferList_EventTarget_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SourceBuffer];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SourceBuffer];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SourceBuffer];
    },
    $isList: 1,
    $asList: function() {
      return [W.SourceBuffer];
    }
  };
  W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SourceBuffer];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SourceBuffer];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SourceBuffer];
    },
    $isList: 1,
    $asList: function() {
      return [W.SourceBuffer];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.SourceBuffer];
    }
  };
  W._SpeechGrammarList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechGrammar];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SpeechGrammar];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechGrammar];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechGrammar];
    }
  };
  W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechGrammar];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SpeechGrammar];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechGrammar];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechGrammar];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.SpeechGrammar];
    }
  };
  W._Storage_Interceptor_MapMixin.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, P.String];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, P.String];
    }
  };
  W._TextTrackCueList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrackCue];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.TextTrackCue];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrackCue];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrackCue];
    }
  };
  W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrackCue];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.TextTrackCue];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrackCue];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrackCue];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.TextTrackCue];
    }
  };
  W._TextTrackList_EventTarget_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrack];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.TextTrack];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrack];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrack];
    }
  };
  W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrack];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.TextTrack];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrack];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrack];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.TextTrack];
    }
  };
  W._TouchList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Touch];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Touch];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Touch];
    },
    $isList: 1,
    $asList: function() {
      return [W.Touch];
    }
  };
  W._TouchList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Touch];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Touch];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Touch];
    },
    $isList: 1,
    $asList: function() {
      return [W.Touch];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Touch];
    }
  };
  W.__CssRuleList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.CssRule];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.CssRule];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.CssRule];
    },
    $isList: 1,
    $asList: function() {
      return [W.CssRule];
    }
  };
  W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.CssRule];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.CssRule];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.CssRule];
    },
    $isList: 1,
    $asList: function() {
      return [W.CssRule];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.CssRule];
    }
  };
  W.__CssStyleDeclarationSet_Object_CssStyleDeclarationBase.prototype = {$isCssStyleDeclarationBase: 1};
  W.__GamepadList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Gamepad];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Gamepad];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Gamepad];
    },
    $isList: 1,
    $asList: function() {
      return [W.Gamepad];
    }
  };
  W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Gamepad];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Gamepad];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Gamepad];
    },
    $isList: 1,
    $asList: function() {
      return [W.Gamepad];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Gamepad];
    }
  };
  W.__NamedNodeMap_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    }
  };
  W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W.__SpeechRecognitionResultList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SpeechRecognitionResult];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechRecognitionResult];
    }
  };
  W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.SpeechRecognitionResult];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechRecognitionResult];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.SpeechRecognitionResult];
    }
  };
  W.__StyleSheetList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.StyleSheet];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.StyleSheet];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.StyleSheet];
    },
    $isList: 1,
    $asList: function() {
      return [W.StyleSheet];
    }
  };
  W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.StyleSheet];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [W.StyleSheet];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.StyleSheet];
    },
    $isList: 1,
    $asList: function() {
      return [W.StyleSheet];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [W.StyleSheet];
    }
  };
  P._StructuredClone.prototype = {};
  P._AcceptStructuredClone.prototype = {};
  P.ContextAttributes.prototype = {};
  P._TypedImageData.prototype = {$isInterceptor: 1, $isImageData: 1};
  P._StructuredCloneDart2Js.prototype = {};
  P._AcceptStructuredCloneDart2Js.prototype = {};
  P.CssClassSetImpl.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $asSetMixin: function() {
      return [P.String];
    },
    $asSetBase: function() {
      return [P.String];
    },
    $asIterable: function() {
      return [P.String];
    },
    $asSet: function() {
      return [P.String];
    },
    $isCssClassSet: 1,
    $as_SetBase_Object_SetMixin: function() {
      return [P.String];
    }
  };
  P.Device.prototype = {};
  P.FilteredElementList.prototype = {
    get$_html_common$_iterable: function() {
      return J.map$1$1$ax(J.where$1$ax(this._childNodes, new P.FilteredElementList__iterable_closure()), new P.FilteredElementList__iterable_closure0(), W.Element);
    },
    get$_filtered: function() {
      return P.List_List$from(this.get$_html_common$_iterable(), false, W.Element);
    },
    forEach$1: function(_, f) {
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [W.Element]});
      J.forEach$1$ax(this.get$_filtered(), f);
    },
    $indexSet: function(_, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isElement");
      J.replaceWith$1$x(this.$index(0, index), value);
    },
    set$length: function(_, newLength) {
      var len;
      H.intTypeCheck(newLength);
      len = this.get$length(this);
      if (typeof newLength !== "number")
        return newLength.$ge();
      if (typeof len !== "number")
        return H.iae(len);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw H.wrapException(P.ArgumentError$("Invalid list length"));
      this.removeRange$2(0, newLength, len);
    },
    add$1: function(_, value) {
      J.add$1$ax(this._childNodes, H.interceptedTypeCheck(value, "$isElement"));
    },
    addAll$1: function(_, iterable) {
      var t1;
      for (t1 = J.get$iterator$ax(H.assertSubtype(iterable, "$isIterable", [W.Element], "$asIterable")); H.boolConversionCheck(t1.moveNext$0());)
        this.add$1(0, t1.get$current());
    },
    contains$1: function(_, needle) {
      var t1, t2;
      if (!J.getInterceptor$(needle).$isElement)
        return false;
      t1 = needle.parentNode;
      t2 = this._node;
      return t1 == null ? t2 == null : t1 === t2;
    },
    removeRange$2: function(_, start, end) {
      var t1;
      H.intTypeCheck(start);
      H.intTypeCheck(end);
      t1 = J.skip$1$ax(this.get$_html_common$_iterable(), start);
      if (typeof end !== "number")
        return end.$sub();
      if (typeof start !== "number")
        return H.iae(start);
      J.forEach$1$ax(P.List_List$from(J.take$1$ax(t1, end - start), true, null), new P.FilteredElementList_removeRange_closure());
    },
    clear$0: function(_) {
      J.clear$0$ax(this._childNodes);
    },
    removeLast$0: function(_) {
      var result = J.get$last$ax(this.get$_html_common$_iterable());
      if (result != null)
        J.remove$0$x(result);
      return result;
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$_html_common$_iterable());
    },
    $index: function(_, index) {
      H.intTypeCheck(index);
      return J.elementAt$1$ax(this.get$_html_common$_iterable(), index);
    },
    get$iterator: function(_) {
      return J.get$iterator$ax(this.get$_filtered());
    },
    $asEfficientLengthIterable: function() {
      return [W.Element];
    },
    $asListBase: function() {
      return [W.Element];
    },
    $asListMixin: function() {
      return [W.Element];
    },
    $asIterable: function() {
      return [W.Element];
    },
    $asList: function() {
      return [W.Element];
    },
    $isNodeListWrapper: 1,
    $as_ListBase_Object_ListMixin: function() {
      return [W.Element];
    }
  };
  P.FilteredElementList__iterable_closure.prototype = {
    call$1: function(n) {
      return !!J.getInterceptor$(H.interceptedTypeCheck(n, "$isNode")).$isElement;
    },
    $signature: 43
  };
  P.FilteredElementList__iterable_closure0.prototype = {
    call$1: function(n) {
      return H.interceptedTypeCast(H.interceptedTypeCheck(n, "$isNode"), "$isElement");
    },
    $signature: 47
  };
  P.FilteredElementList_removeRange_closure.prototype = {
    call$1: function(el) {
      return J.remove$0$x(el);
    },
    $signature: 4
  };
  P.Lists.prototype = {};
  P.NodeListWrapper.prototype = {};
  P._KeyRangeFactoryProvider.prototype = {};
  P.Cursor.prototype = {$isCursor: 1};
  P.CursorWithValue.prototype = {$isCursorWithValue: 1};
  P.Database.prototype = {$isDatabase: 1};
  P.IdbFactory.prototype = {$isIdbFactory: 1};
  P.Index.prototype = {$isIndex: 1};
  P.KeyRange.prototype = {$isKeyRange: 1};
  P.ObjectStore.prototype = {$isObjectStore: 1};
  P.Observation.prototype = {$isObservation: 1};
  P.Observer.prototype = {$isObserver: 1};
  P.ObserverChanges.prototype = {$isObserverChanges: 1};
  P.OpenDBRequest.prototype = {$isOpenDBRequest: 1};
  P.Request.prototype = {$isRequest: 1};
  P.Transaction.prototype = {$isTransaction: 1};
  P.VersionChangeEvent.prototype = {$isVersionChangeEvent: 1};
  P.BytesBuilder.prototype = {};
  P._CopyingBytesBuilder0.prototype = {$isBytesBuilder: 1};
  P._BytesBuilder.prototype = {$isBytesBuilder: 1};
  P.IOException.prototype = {$isException: 1};
  P.OSError.prototype = {};
  P._BufferAndStart.prototype = {};
  P._IOCrypto.prototype = {};
  P.ZLibOption.prototype = {};
  P.ZLibCodec.prototype = {
    $asCodec: function() {
      return [[P.List, P.int], [P.List, P.int]];
    }
  };
  P.GZipCodec.prototype = {
    $asCodec: function() {
      return [[P.List, P.int], [P.List, P.int]];
    }
  };
  P.ZLibEncoder.prototype = {
    $asStreamTransformer: function() {
      return [[P.List, P.int], [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [[P.List, P.int], [P.List, P.int]];
    },
    $asConverter: function() {
      return [[P.List, P.int], [P.List, P.int]];
    }
  };
  P.ZLibDecoder.prototype = {
    $asStreamTransformer: function() {
      return [[P.List, P.int], [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [[P.List, P.int], [P.List, P.int]];
    },
    $asConverter: function() {
      return [[P.List, P.int], [P.List, P.int]];
    }
  };
  P.RawZLibFilter.prototype = {};
  P._BufferSink.prototype = {};
  P._ZLibEncoderSink.prototype = {};
  P._ZLibDecoderSink.prototype = {};
  P._FilterSink.prototype = {};
  P.Directory.prototype = {$isFileSystemEntity: 1};
  P._Directory.prototype = {$isDirectory: 1};
  P._AsyncDirectoryListerOps.prototype = {};
  P._AsyncDirectoryLister.prototype = {};
  P._EmbedderConfig.prototype = {};
  P._EventHandler.prototype = {};
  P.FileMode.prototype = {};
  P.FileLock.prototype = {};
  P.File0.prototype = {$isFileSystemEntity: 1};
  P.RandomAccessFile.prototype = {};
  P.FileSystemException.prototype = {$isException: 1, $isIOException: 1};
  P._FileStream.prototype = {
    $asStream: function() {
      return [[P.List, P.int]];
    }
  };
  P._FileStreamConsumer.prototype = {
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    }
  };
  P._File.prototype = {$isFile0: 1};
  P._RandomAccessFileOps.prototype = {};
  P._RandomAccessFile.prototype = {$isRandomAccessFile: 1};
  P.FileSystemEntityType.prototype = {};
  P.FileStat.prototype = {};
  P.FileSystemEntity.prototype = {};
  P.FileSystemEvent.prototype = {};
  P.FileSystemCreateEvent.prototype = {};
  P.FileSystemModifyEvent.prototype = {};
  P.FileSystemDeleteEvent.prototype = {};
  P.FileSystemMoveEvent.prototype = {};
  P._FileSystemWatcher.prototype = {};
  P._IOResourceInfo.prototype = {};
  P._ReadWriteResourceInfo.prototype = {};
  P._FileResourceInfo.prototype = {};
  P._ProcessResourceInfo.prototype = {};
  P._SocketResourceInfo.prototype = {};
  P._IOService.prototype = {};
  P.IOSink.prototype = {$isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1
  };
  P._StreamSinkImpl0.prototype = {$isEventSink: 1, $isStreamConsumer: 1, $isStreamSink: 1, $isSink: 1};
  P._IOSinkImpl0.prototype = {
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1,
    $as_StreamSinkImpl0: function() {
      return [[P.List, P.int]];
    }
  };
  P.Link.prototype = {$isFileSystemEntity: 1};
  P._Link.prototype = {$isLink: 1};
  P._Namespace.prototype = {};
  P.IOOverrides.prototype = {};
  P._IOOverridesScope.prototype = {};
  P.Platform0.prototype = {};
  P._Platform.prototype = {};
  P._CaseInsensitiveStringMap.prototype = {
    $asMapBase: function($V) {
      return [P.String, $V];
    },
    $asMapMixin: function($V) {
      return [P.String, $V];
    },
    $asMap: function($V) {
      return [P.String, $V];
    }
  };
  P._ProcessUtils.prototype = {};
  P.ProcessInfo.prototype = {};
  P.ProcessStartMode.prototype = {};
  P.Process.prototype = {};
  P.ProcessResult.prototype = {};
  P.ProcessSignal.prototype = {};
  P.SignalException.prototype = {$isException: 1, $isIOException: 1};
  P.ProcessException.prototype = {$isException: 1, $isIOException: 1};
  P.SecureServerSocket.prototype = {
    $asStream: function() {
      return [P.SecureSocket];
    }
  };
  P.RawSecureServerSocket.prototype = {
    $asStream: function() {
      return [P.RawSecureSocket];
    }
  };
  P.SecureSocket.prototype = {$isStream: 1,
    $asStream: function() {
      return [[P.List, P.int]];
    },
    $isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1,
    $isSocket: 1
  };
  P.RawSecureSocket.prototype = {$isStream: 1,
    $asStream: function() {
      return [P.RawSocketEvent];
    },
    $isRawSocket: 1
  };
  P.X509Certificate.prototype = {};
  P._FilterStatus.prototype = {};
  P._RawSecureSocket.prototype = {
    $asStream: function() {
      return [P.RawSocketEvent];
    },
    $isRawSecureSocket: 1,
    $isRawSocket: 1
  };
  P._ExternalBuffer.prototype = {};
  P._SecureFilter.prototype = {};
  P.TlsException.prototype = {$isException: 1, $isIOException: 1};
  P.HandshakeException.prototype = {};
  P.CertificateException.prototype = {};
  P.SecurityContext.prototype = {};
  P._ServiceObject0.prototype = {};
  P.InternetAddressType.prototype = {};
  P.InternetAddress.prototype = {};
  P.NetworkInterface.prototype = {};
  P.RawServerSocket.prototype = {$isStream: 1,
    $asStream: function() {
      return [P.RawSocket];
    }
  };
  P.ServerSocket.prototype = {$isStream: 1,
    $asStream: function() {
      return [P.Socket];
    }
  };
  P.SocketDirection.prototype = {};
  P.SocketOption.prototype = {};
  P._RawSocketOptions.prototype = {};
  P.RawSocketOption.prototype = {};
  P.RawSocketEvent.prototype = {};
  P.ConnectionTask.prototype = {};
  P.RawSocket.prototype = {$isStream: 1,
    $asStream: function() {
      return [P.RawSocketEvent];
    }
  };
  P.Socket.prototype = {$isStream: 1,
    $asStream: function() {
      return [[P.List, P.int]];
    },
    $isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1
  };
  P.Datagram.prototype = {};
  P.RawDatagramSocket.prototype = {
    $asStream: function() {
      return [P.RawSocketEvent];
    }
  };
  P.SocketException.prototype = {$isException: 1, $isIOException: 1};
  P._StdStream.prototype = {
    $asStream: function() {
      return [[P.List, P.int]];
    }
  };
  P.Stdin.prototype = {};
  P.Stdout.prototype = {};
  P.StdoutException.prototype = {$isException: 1, $isIOException: 1};
  P.StdinException.prototype = {$isException: 1, $isIOException: 1};
  P._StdConsumer.prototype = {$isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    }
  };
  P._StdSink.prototype = {$isEventSink: 1,
    $asEventSink: function() {
      return [[P.List, P.int]];
    },
    $isStreamConsumer: 1,
    $asStreamConsumer: function() {
      return [[P.List, P.int]];
    },
    $isStreamSink: 1,
    $asStreamSink: function() {
      return [[P.List, P.int]];
    },
    $isSink: 1,
    $asSink: function() {
      return [[P.List, P.int]];
    },
    $isStringSink: 1,
    $isIOSink: 1
  };
  P.StdioType.prototype = {};
  P._StdIOUtils.prototype = {};
  P.SystemEncoding.prototype = {};
  P._WindowsCodePageEncoder.prototype = {
    $asStreamTransformer: function() {
      return [P.String, [P.List, P.int]];
    },
    $asStreamTransformerBase: function() {
      return [P.String, [P.List, P.int]];
    },
    $asConverter: function() {
      return [P.String, [P.List, P.int]];
    }
  };
  P._WindowsCodePageEncoderSink.prototype = {};
  P._WindowsCodePageDecoder.prototype = {
    $asStreamTransformer: function() {
      return [[P.List, P.int], P.String];
    },
    $asStreamTransformerBase: function() {
      return [[P.List, P.int], P.String];
    },
    $asConverter: function() {
      return [[P.List, P.int], P.String];
    }
  };
  P._WindowsCodePageDecoderSink.prototype = {};
  P.RawSynchronousSocket.prototype = {};
  P._ReceivePortImpl.prototype = {
    $asStream: function() {
    },
    $isReceivePort: 1
  };
  P.Capability.prototype = {};
  P.IsolateSpawnException.prototype = {$isException: 1};
  P.Isolate.prototype = {};
  P.SendPort.prototype = {$isCapability: 1};
  P.ReceivePort.prototype = {$isStream: 1,
    $asStream: function() {
    }
  };
  P.RawReceivePort.prototype = {};
  P.RemoteError.prototype = {$isError: 1};
  P.JsObject.prototype = {
    JsObject$_fromJs$1: function(_jsObject) {
    },
    $index: function(_, property) {
      if (typeof property !== "string" && typeof property !== "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      return P._convertToDart(this._jsObject[property]);
    },
    $indexSet: function(_, property, value) {
      if (typeof property !== "string" && typeof property !== "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      this._jsObject[property] = P._convertToJS(value);
    },
    get$hashCode: function(_) {
      return 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.JsObject && this._jsObject === other._jsObject;
    },
    toString$0: function(_) {
      var t1, exception;
      try {
        t1 = String(this._jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        t1 = this.super$Object$toString(this);
        return t1;
      }
    },
    callMethod$2: function(method, args) {
      var t1, t2;
      H.listTypeCheck(args);
      if (typeof method !== "string" && typeof method !== "number")
        throw H.wrapException(P.ArgumentError$("method is not a String or num"));
      t1 = this._jsObject;
      t2 = args == null ? null : P.List_List$from(J.map$1$1$ax(args, P.js___convertToJS$closure(), null), true, null);
      return P._convertToDart(t1[method].apply(t1, t2));
    },
    callMethod$1: function(method) {
      return this.callMethod$2(method, null);
    }
  };
  P.JsObject__convertDataTree__convert.prototype = {
    call$1: function(o) {
      var t2, convertedMap, key, convertedList,
        t1 = this._convertedObjects;
      if (H.boolConversionCheck(t1.containsKey$1(o)))
        return J.$index$asx(t1, o);
      t2 = J.getInterceptor$(o);
      if (!!t2.$isMap) {
        convertedMap = {};
        J.$indexSet$ax(t1, o, convertedMap);
        for (t1 = J.get$iterator$ax(o.get$keys()); H.boolConversionCheck(t1.moveNext$0());) {
          key = t1.get$current();
          convertedMap[key] = this.call$1(o.$index(0, key));
        }
        return convertedMap;
      } else if (!!t2.$isIterable) {
        convertedList = [];
        J.$indexSet$ax(t1, o, convertedList);
        C.JSArray_methods.addAll$1(convertedList, t2.map$1$1(o, this, null));
        return convertedList;
      } else
        return P._convertToJS(o);
    },
    $signature: 4
  };
  P.JsFunction.prototype = {};
  P.JsArray.prototype = {
    _checkIndex$1: function(index) {
      var t1, _this = this;
      H.intTypeCheck(index);
      if (typeof index === "number" && Math.floor(index) === index)
        if (!(index < 0)) {
          t1 = _this.get$length(_this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = index >= t1;
        } else
          t1 = true;
      else
        t1 = false;
      if (t1)
        throw H.wrapException(P.RangeError$range(index, 0, _this.get$length(_this), null, null));
    },
    $index: function(_, index) {
      if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index))
        this._checkIndex$1(H.intTypeCheck(index));
      return H.assertSubtypeOfRuntimeType(this.super$JsObject$$index(0, index), H.getTypeArgumentByIndex(this, 0));
    },
    $indexSet: function(_, index, value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index))
        this._checkIndex$1(H.intTypeCheck(index));
      this.super$JsObject$$indexSet(0, index, value);
    },
    get$length: function(_) {
      var len = this._jsObject.length;
      if (typeof len === "number" && len >>> 0 === len)
        return len;
      throw H.wrapException(P.StateError$("Bad JsArray length"));
    },
    set$length: function(_, $length) {
      this.super$JsObject$$indexSet(0, "length", H.intTypeCheck($length));
    },
    add$1: function(_, value) {
      this.callMethod$2("push", [H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0))]);
    },
    addAll$1: function(_, iterable) {
      H.assertSubtype(iterable, "$isIterable", this.$ti, "$asIterable");
      this.callMethod$2("push", H.listTypeCheck(iterable instanceof Array ? iterable : P.List_List$from(iterable, true, null)));
    },
    removeLast$0: function(_) {
      var _this = this;
      if (H.boolConversionCheck(J.$eq$(_this.get$length(_this), 0)))
        throw H.wrapException(P.RangeError$(-1));
      return H.assertSubtypeOfRuntimeType(_this.callMethod$1("pop"), H.getTypeArgumentByIndex(_this, 0));
    },
    $isEfficientLengthIterable: 1,
    $isListMixin: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._convertToJS_closure.prototype = {
    call$1: function(o) {
      var jsFunction;
      H.interceptedTypeCheck(o, "$isFunction");
      jsFunction = P._convertDartFunction(o);
      P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
      return jsFunction;
    },
    $signature: 4
  };
  P._convertToJS_closure0.prototype = {
    call$1: function(o) {
      return new this.ctor(o);
    },
    $signature: 4
  };
  P._wrapToDart_closure.prototype = {
    call$1: function(o) {
      return P.JsFunction$_fromJs(o);
    },
    $signature: 50
  };
  P._wrapToDart_closure0.prototype = {
    call$1: function(o) {
      return P.JsArray$_fromJs(o, null);
    },
    $signature: 23
  };
  P._wrapToDart_closure1.prototype = {
    call$1: function(o) {
      return P.JsObject$_fromJs(o);
    },
    $signature: 55
  };
  P._JsArray_JsObject_ListMixin.prototype = {$isEfficientLengthIterable: 1, $isListMixin: 1, $isIterable: 1, $isList: 1};
  P._JSRandom.prototype = {$isRandom: 1};
  P._Random.prototype = {$isRandom: 1};
  P._JSSecureRandom.prototype = {$isRandom: 1};
  P._JenkinsSmiHash0.prototype = {};
  P.Point.prototype = {};
  P.Random.prototype = {};
  P._RectangleBase.prototype = {};
  P.Rectangle.prototype = {};
  P.MutableRectangle.prototype = {$isRectangle: 1};
  P.MirrorSystem.prototype = {};
  P.Mirror.prototype = {};
  P.IsolateMirror.prototype = {$isMirror: 1};
  P.DeclarationMirror.prototype = {$isMirror: 1};
  P.ObjectMirror.prototype = {$isMirror: 1};
  P.InstanceMirror.prototype = {$isMirror: 1, $isObjectMirror: 1};
  P.ClosureMirror.prototype = {$isMirror: 1, $isObjectMirror: 1, $isInstanceMirror: 1};
  P.LibraryMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1, $isObjectMirror: 1};
  P.LibraryDependencyMirror.prototype = {$isMirror: 1};
  P.CombinatorMirror.prototype = {$isMirror: 1};
  P.TypeMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1};
  P.ClassMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1, $isObjectMirror: 1, $isTypeMirror: 1};
  P.FunctionTypeMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1, $isObjectMirror: 1, $isTypeMirror: 1, $isClassMirror: 1};
  P.TypeVariableMirror.prototype = {};
  P.TypedefMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1, $isTypeMirror: 1};
  P.MethodMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1};
  P.VariableMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1};
  P.ParameterMirror.prototype = {$isMirror: 1, $isDeclarationMirror: 1, $isVariableMirror: 1};
  P.SourceLocation.prototype = {};
  P.Comment0.prototype = {};
  P.MirrorsUsed.prototype = {};
  P._SvgElementFactoryProvider.prototype = {};
  P.AElement.prototype = {$isAElement: 1, $isUriReference: 1};
  P.Angle.prototype = {$isAngle: 1};
  P.AnimateElement.prototype = {$isAnimateElement: 1};
  P.AnimateMotionElement.prototype = {$isAnimateMotionElement: 1};
  P.AnimateTransformElement.prototype = {$isAnimateTransformElement: 1};
  P.AnimatedAngle.prototype = {$isAnimatedAngle: 1};
  P.AnimatedBoolean.prototype = {$isAnimatedBoolean: 1};
  P.AnimatedEnumeration.prototype = {$isAnimatedEnumeration: 1};
  P.AnimatedInteger.prototype = {$isAnimatedInteger: 1};
  P.AnimatedLength.prototype = {$isAnimatedLength: 1};
  P.AnimatedLengthList.prototype = {$isAnimatedLengthList: 1};
  P.AnimatedNumber.prototype = {$isAnimatedNumber: 1};
  P.AnimatedNumberList.prototype = {$isAnimatedNumberList: 1};
  P.AnimatedPreserveAspectRatio.prototype = {$isAnimatedPreserveAspectRatio: 1};
  P.AnimatedRect.prototype = {$isAnimatedRect: 1};
  P.AnimatedString.prototype = {$isAnimatedString: 1};
  P.AnimatedTransformList.prototype = {$isAnimatedTransformList: 1};
  P.AnimationElement.prototype = {$isAnimationElement: 1, $isTests: 1};
  P.CircleElement.prototype = {$isCircleElement: 1};
  P.ClipPathElement.prototype = {$isClipPathElement: 1};
  P.DefsElement.prototype = {$isDefsElement: 1};
  P.DescElement.prototype = {$isDescElement: 1};
  P.DiscardElement.prototype = {$isDiscardElement: 1};
  P.EllipseElement.prototype = {$isEllipseElement: 1};
  P.FEBlendElement.prototype = {$isFEBlendElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEColorMatrixElement.prototype = {$isFEColorMatrixElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEComponentTransferElement.prototype = {$isFEComponentTransferElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FECompositeElement.prototype = {$isFECompositeElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEConvolveMatrixElement.prototype = {$isFEConvolveMatrixElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEDiffuseLightingElement.prototype = {$isFEDiffuseLightingElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEDisplacementMapElement.prototype = {$isFEDisplacementMapElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEDistantLightElement.prototype = {$isFEDistantLightElement: 1};
  P.FEFloodElement.prototype = {$isFEFloodElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEFuncAElement.prototype = {$isFEFuncAElement: 1};
  P.FEFuncBElement.prototype = {$isFEFuncBElement: 1};
  P.FEFuncGElement.prototype = {$isFEFuncGElement: 1};
  P.FEFuncRElement.prototype = {$isFEFuncRElement: 1};
  P.FEGaussianBlurElement.prototype = {$isFEGaussianBlurElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEImageElement.prototype = {$isFEImageElement: 1, $isFilterPrimitiveStandardAttributes: 1, $isUriReference: 1};
  P.FEMergeElement.prototype = {$isFEMergeElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEMergeNodeElement.prototype = {$isFEMergeNodeElement: 1};
  P.FEMorphologyElement.prototype = {$isFEMorphologyElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEOffsetElement.prototype = {$isFEOffsetElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FEPointLightElement.prototype = {$isFEPointLightElement: 1};
  P.FESpecularLightingElement.prototype = {$isFESpecularLightingElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FESpotLightElement.prototype = {$isFESpotLightElement: 1};
  P.FETileElement.prototype = {$isFETileElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FETurbulenceElement.prototype = {$isFETurbulenceElement: 1, $isFilterPrimitiveStandardAttributes: 1};
  P.FilterElement.prototype = {$isFilterElement: 1, $isUriReference: 1};
  P.FilterPrimitiveStandardAttributes.prototype = {};
  P.FitToViewBox.prototype = {};
  P.ForeignObjectElement.prototype = {$isForeignObjectElement: 1};
  P.GElement.prototype = {$isGElement: 1};
  P.GeometryElement.prototype = {$isGeometryElement: 1};
  P.GraphicsElement.prototype = {$isGraphicsElement: 1, $isTests: 1};
  P.ImageElement0.prototype = {$isImageElement0: 1, $isUriReference: 1};
  P.Length.prototype = {$isLength: 1};
  P.LengthList.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Length];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Length];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Length];
    },
    $isList: 1,
    $asList: function() {
      return [P.Length];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.Length];
    },
    $isLengthList: 1
  };
  P.LineElement.prototype = {$isLineElement: 1};
  P.LinearGradientElement.prototype = {$isLinearGradientElement: 1};
  P.MarkerElement.prototype = {$isFitToViewBox: 1, $isMarkerElement: 1};
  P.MaskElement.prototype = {$isMaskElement: 1, $isTests: 1};
  P.Matrix.prototype = {$isMatrix: 1};
  P.MetadataElement.prototype = {$isMetadataElement: 1};
  P.Number.prototype = {$isNumber: 1};
  P.NumberList.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Number];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Number];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Number];
    },
    $isList: 1,
    $asList: function() {
      return [P.Number];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.Number];
    },
    $isNumberList: 1
  };
  P.PathElement.prototype = {$isPathElement: 1};
  P.PatternElement.prototype = {$isFitToViewBox: 1, $isPatternElement: 1, $isTests: 1, $isUriReference: 1};
  P.Point0.prototype = {$isPoint0: 1};
  P.PointList.prototype = {$isPointList: 1};
  P.PolygonElement.prototype = {$isPolygonElement: 1};
  P.PolylineElement.prototype = {$isPolylineElement: 1};
  P.PreserveAspectRatio.prototype = {$isPreserveAspectRatio: 1};
  P.RadialGradientElement.prototype = {$isRadialGradientElement: 1};
  P.Rect.prototype = {$isRect: 1};
  P.RectElement.prototype = {$isRectElement: 1};
  P.ScriptElement0.prototype = {$isScriptElement0: 1, $isUriReference: 1};
  P.SetElement.prototype = {$isSetElement: 1};
  P.StopElement.prototype = {$isStopElement: 1};
  P.StringList.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.String];
    },
    $isStringList: 1
  };
  P.StyleElement0.prototype = {$isStyleElement0: 1};
  P.AttributeClassSet.prototype = {};
  P.SvgElement.prototype = {
    get$children: function(receiver) {
      return P.FilteredElementList$(receiver);
    },
    $isNoncedElement: 1,
    $isSvgElement: 1
  };
  P.SvgSvgElement.prototype = {$isFitToViewBox: 1, $isSvgSvgElement: 1, $isZoomAndPan: 1};
  P.SwitchElement.prototype = {$isSwitchElement: 1};
  P.SymbolElement.prototype = {$isFitToViewBox: 1, $isSymbolElement: 1};
  P.TSpanElement.prototype = {$isTSpanElement: 1};
  P.Tests.prototype = {};
  P.TextContentElement.prototype = {$isTextContentElement: 1};
  P.TextElement.prototype = {$isTextElement: 1};
  P.TextPathElement.prototype = {$isTextPathElement: 1, $isUriReference: 1};
  P.TextPositioningElement.prototype = {$isTextPositioningElement: 1};
  P.TitleElement0.prototype = {$isTitleElement0: 1};
  P.Transform.prototype = {$isTransform: 1};
  P.TransformList.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Transform];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Transform];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Transform];
    },
    $isList: 1,
    $asList: function() {
      return [P.Transform];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.Transform];
    },
    $isTransformList: 1
  };
  P.UnitTypes.prototype = {$isUnitTypes: 1};
  P.UriReference.prototype = {};
  P.UseElement.prototype = {$isUriReference: 1, $isUseElement: 1};
  P.ViewElement.prototype = {$isFitToViewBox: 1, $isViewElement: 1, $isZoomAndPan: 1};
  P.ZoomAndPan.prototype = {};
  P._GradientElement.prototype = {$isUriReference: 1, $is_GradientElement: 1};
  P._SVGComponentTransferFunctionElement.prototype = {$is_SVGComponentTransferFunctionElement: 1};
  P._SVGFEDropShadowElement.prototype = {$isFilterPrimitiveStandardAttributes: 1, $is_SVGFEDropShadowElement: 1};
  P._SVGMPathElement.prototype = {$isUriReference: 1, $is_SVGMPathElement: 1};
  P._LengthList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Length];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Length];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Length];
    },
    $isList: 1,
    $asList: function() {
      return [P.Length];
    }
  };
  P._LengthList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Length];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Length];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Length];
    },
    $isList: 1,
    $asList: function() {
      return [P.Length];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.Length];
    }
  };
  P._NumberList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Number];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Number];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Number];
    },
    $isList: 1,
    $asList: function() {
      return [P.Number];
    }
  };
  P._NumberList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Number];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Number];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Number];
    },
    $isList: 1,
    $asList: function() {
      return [P.Number];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.Number];
    }
  };
  P._StringList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    }
  };
  P._StringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.String];
    }
  };
  P._TransformList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Transform];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Transform];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Transform];
    },
    $isList: 1,
    $asList: function() {
      return [P.Transform];
    }
  };
  P._TransformList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Transform];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [P.Transform];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Transform];
    },
    $isList: 1,
    $asList: function() {
      return [P.Transform];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [P.Transform];
    }
  };
  P.ByteBuffer.prototype = {};
  P.TypedData.prototype = {};
  P._TypedIntList.prototype = {};
  P._TypedFloatList.prototype = {};
  P.Endian.prototype = {};
  P.ByteData.prototype = {$isTypedData: 1};
  P.Int8List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Uint8List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Uint8ClampedList.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Int16List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Uint16List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Int32List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Uint32List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Int64List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Uint64List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1
  };
  P.Float32List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.double];
    },
    $isList: 1,
    $asList: function() {
      return [P.double];
    },
    $isTypedData: 1,
    $is_TypedFloatList: 1
  };
  P.Float64List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.double];
    },
    $isList: 1,
    $asList: function() {
      return [P.double];
    },
    $isTypedData: 1,
    $is_TypedFloatList: 1
  };
  P.Float32x4List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float32x4];
    },
    $isTypedData: 1
  };
  P.Int32x4List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Int32x4];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Int32x4];
    },
    $isList: 1,
    $asList: function() {
      return [P.Int32x4];
    },
    $isTypedData: 1
  };
  P.Float64x2List.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Float64x2];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Float64x2];
    },
    $isList: 1,
    $asList: function() {
      return [P.Float64x2];
    },
    $isTypedData: 1
  };
  P.Float32x4.prototype = {};
  P.Int32x4.prototype = {};
  P.Float64x2.prototype = {};
  P.UnmodifiableByteBufferView.prototype = {$isByteBuffer: 1};
  P.UnmodifiableByteDataView.prototype = {$isTypedData: 1, $isByteData: 1};
  P._UnmodifiableListMixin.prototype = {};
  P.UnmodifiableUint8ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isUint8List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint8List, P.Uint8List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableInt8ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isInt8List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int8List, P.Int8List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableUint8ClampedListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isUint8ClampedList: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint8ClampedList, P.Uint8ClampedList];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableUint16ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isUint16List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint16List, P.Uint16List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableInt16ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isInt16List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int16List, P.Int16List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableUint32ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isUint32List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint32List, P.Uint32List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableInt32ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isInt32List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int32List, P.Int32List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableUint64ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isUint64List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint64List, P.Uint64List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableInt64ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $isTypedData: 1,
    $is_TypedIntList: 1,
    $isInt64List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int64List, P.Int64List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.UnmodifiableInt32x4ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.Int32x4];
    },
    $asUnmodifiableListMixin: function() {
      return [P.Int32x4];
    },
    $asUnmodifiableListBase: function() {
      return [P.Int32x4];
    },
    $asListBase: function() {
      return [P.Int32x4];
    },
    $asListMixin: function() {
      return [P.Int32x4];
    },
    $asIterable: function() {
      return [P.Int32x4];
    },
    $asList: function() {
      return [P.Int32x4];
    },
    $isTypedData: 1,
    $isInt32x4List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.Int32x4, P.Int32x4List, P.Int32x4List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.Int32x4];
    }
  };
  P.UnmodifiableFloat32x4ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.Float32x4];
    },
    $asUnmodifiableListMixin: function() {
      return [P.Float32x4];
    },
    $asUnmodifiableListBase: function() {
      return [P.Float32x4];
    },
    $asListBase: function() {
      return [P.Float32x4];
    },
    $asListMixin: function() {
      return [P.Float32x4];
    },
    $asIterable: function() {
      return [P.Float32x4];
    },
    $asList: function() {
      return [P.Float32x4];
    },
    $isTypedData: 1,
    $isFloat32x4List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.Float32x4, P.Float32x4List, P.Float32x4List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.Float32x4];
    }
  };
  P.UnmodifiableFloat64x2ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.Float64x2];
    },
    $asUnmodifiableListMixin: function() {
      return [P.Float64x2];
    },
    $asUnmodifiableListBase: function() {
      return [P.Float64x2];
    },
    $asListBase: function() {
      return [P.Float64x2];
    },
    $asListMixin: function() {
      return [P.Float64x2];
    },
    $asIterable: function() {
      return [P.Float64x2];
    },
    $asList: function() {
      return [P.Float64x2];
    },
    $isTypedData: 1,
    $isFloat64x2List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.Float64x2, P.Float64x2List, P.Float64x2List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.Float64x2];
    }
  };
  P.UnmodifiableFloat32ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $asUnmodifiableListMixin: function() {
      return [P.double];
    },
    $asUnmodifiableListBase: function() {
      return [P.double];
    },
    $asListBase: function() {
      return [P.double];
    },
    $asListMixin: function() {
      return [P.double];
    },
    $asIterable: function() {
      return [P.double];
    },
    $asList: function() {
      return [P.double];
    },
    $isTypedData: 1,
    $is_TypedFloatList: 1,
    $isFloat32List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.double, P.Float32List, P.Float32List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.double];
    }
  };
  P.UnmodifiableFloat64ListView.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $asUnmodifiableListMixin: function() {
      return [P.double];
    },
    $asUnmodifiableListBase: function() {
      return [P.double];
    },
    $asListBase: function() {
      return [P.double];
    },
    $asListMixin: function() {
      return [P.double];
    },
    $asIterable: function() {
      return [P.double];
    },
    $asList: function() {
      return [P.double];
    },
    $isTypedData: 1,
    $is_TypedFloatList: 1,
    $isFloat64List: 1,
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.double, P.Float64List, P.Float64List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.double];
    }
  };
  P._UnmodifiableFloat32ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $asUnmodifiableListMixin: function() {
      return [P.double];
    },
    $asUnmodifiableListBase: function() {
      return [P.double];
    },
    $asListBase: function() {
      return [P.double];
    },
    $asListMixin: function() {
      return [P.double];
    },
    $asIterable: function() {
      return [P.double];
    },
    $asList: function() {
      return [P.double];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.double, P.Float32List, P.Float32List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.double];
    }
  };
  P._UnmodifiableFloat32x4ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.Float32x4];
    },
    $asUnmodifiableListMixin: function() {
      return [P.Float32x4];
    },
    $asUnmodifiableListBase: function() {
      return [P.Float32x4];
    },
    $asListBase: function() {
      return [P.Float32x4];
    },
    $asListMixin: function() {
      return [P.Float32x4];
    },
    $asIterable: function() {
      return [P.Float32x4];
    },
    $asList: function() {
      return [P.Float32x4];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.Float32x4, P.Float32x4List, P.Float32x4List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.Float32x4];
    }
  };
  P._UnmodifiableFloat64ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $asUnmodifiableListMixin: function() {
      return [P.double];
    },
    $asUnmodifiableListBase: function() {
      return [P.double];
    },
    $asListBase: function() {
      return [P.double];
    },
    $asListMixin: function() {
      return [P.double];
    },
    $asIterable: function() {
      return [P.double];
    },
    $asList: function() {
      return [P.double];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.double, P.Float64List, P.Float64List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.double];
    }
  };
  P._UnmodifiableFloat64x2ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.Float64x2];
    },
    $asUnmodifiableListMixin: function() {
      return [P.Float64x2];
    },
    $asUnmodifiableListBase: function() {
      return [P.Float64x2];
    },
    $asListBase: function() {
      return [P.Float64x2];
    },
    $asListMixin: function() {
      return [P.Float64x2];
    },
    $asIterable: function() {
      return [P.Float64x2];
    },
    $asList: function() {
      return [P.Float64x2];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.Float64x2, P.Float64x2List, P.Float64x2List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.Float64x2];
    }
  };
  P._UnmodifiableInt16ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int16List, P.Int16List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableInt32ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int32List, P.Int32List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableInt32x4ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.Int32x4];
    },
    $asUnmodifiableListMixin: function() {
      return [P.Int32x4];
    },
    $asUnmodifiableListBase: function() {
      return [P.Int32x4];
    },
    $asListBase: function() {
      return [P.Int32x4];
    },
    $asListMixin: function() {
      return [P.Int32x4];
    },
    $asIterable: function() {
      return [P.Int32x4];
    },
    $asList: function() {
      return [P.Int32x4];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.Int32x4, P.Int32x4List, P.Int32x4List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.Int32x4];
    }
  };
  P._UnmodifiableInt64ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int64List, P.Int64List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableInt8ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Int8List, P.Int8List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableUint16ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint16List, P.Uint16List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableUint32ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint32List, P.Uint32List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableUint64ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint64List, P.Uint64List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableUint8ClampedListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint8ClampedList, P.Uint8ClampedList];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P._UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asUnmodifiableListBase: function() {
      return [P.int];
    },
    $asListBase: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    },
    $is_UnmodifiableListMixin: 1,
    $as_UnmodifiableListMixin: function() {
      return [P.int, P.Uint8List, P.Uint8List];
    },
    $as_ListBase_Object_ListMixin: function() {
      return [P.int];
    }
  };
  P.AnalyserNode.prototype = {$isAnalyserNode: 1};
  P.AudioBuffer.prototype = {$isAudioBuffer: 1};
  P.AudioBufferSourceNode.prototype = {$isAudioBufferSourceNode: 1};
  P.AudioContext.prototype = {$isAudioContext: 1};
  P.AudioDestinationNode.prototype = {$isAudioDestinationNode: 1};
  P.AudioListener.prototype = {$isAudioListener: 1};
  P.AudioNode.prototype = {$isAudioNode: 1};
  P.AudioParam.prototype = {$isAudioParam: 1};
  P.AudioParamMap.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    },
    $isAudioParamMap: 1
  };
  P.AudioProcessingEvent.prototype = {$isAudioProcessingEvent: 1};
  P.AudioScheduledSourceNode.prototype = {$isAudioScheduledSourceNode: 1};
  P.AudioTrack.prototype = {$isAudioTrack: 1};
  P.AudioTrackList.prototype = {$isAudioTrackList: 1};
  P.AudioWorkletGlobalScope.prototype = {$isAudioWorkletGlobalScope: 1};
  P.AudioWorkletNode.prototype = {$isAudioWorkletNode: 1};
  P.AudioWorkletProcessor.prototype = {$isAudioWorkletProcessor: 1};
  P.BaseAudioContext.prototype = {$isBaseAudioContext: 1};
  P.BiquadFilterNode.prototype = {$isBiquadFilterNode: 1};
  P.ChannelMergerNode.prototype = {$isChannelMergerNode: 1};
  P.ChannelSplitterNode.prototype = {$isChannelSplitterNode: 1};
  P.ConstantSourceNode.prototype = {$isConstantSourceNode: 1};
  P.ConvolverNode.prototype = {$isConvolverNode: 1};
  P.DelayNode.prototype = {$isDelayNode: 1};
  P.DynamicsCompressorNode.prototype = {$isDynamicsCompressorNode: 1};
  P.GainNode.prototype = {$isGainNode: 1};
  P.IirFilterNode.prototype = {$isIirFilterNode: 1};
  P.MediaElementAudioSourceNode.prototype = {$isMediaElementAudioSourceNode: 1};
  P.MediaStreamAudioDestinationNode.prototype = {$isMediaStreamAudioDestinationNode: 1};
  P.MediaStreamAudioSourceNode.prototype = {$isMediaStreamAudioSourceNode: 1};
  P.OfflineAudioCompletionEvent.prototype = {$isOfflineAudioCompletionEvent: 1};
  P.OfflineAudioContext.prototype = {$isOfflineAudioContext: 1};
  P.OscillatorNode.prototype = {$isOscillatorNode: 1};
  P.PannerNode.prototype = {$isPannerNode: 1};
  P.PeriodicWave.prototype = {$isPeriodicWave: 1};
  P.ScriptProcessorNode.prototype = {$isScriptProcessorNode: 1};
  P.StereoPannerNode.prototype = {$isStereoPannerNode: 1};
  P.WaveShaperNode.prototype = {$isWaveShaperNode: 1};
  P._AudioParamMap_Interceptor_MapMixin.prototype = {$isMapMixin: 1,
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  P.ActiveInfo.prototype = {$isActiveInfo: 1};
  P.AngleInstancedArrays.prototype = {$isAngleInstancedArrays: 1};
  P.Buffer.prototype = {$isBuffer: 1};
  P.Canvas.prototype = {$isCanvas: 1};
  P.ColorBufferFloat.prototype = {$isColorBufferFloat: 1};
  P.CompressedTextureAstc.prototype = {$isCompressedTextureAstc: 1};
  P.CompressedTextureAtc.prototype = {$isCompressedTextureAtc: 1};
  P.CompressedTextureETC1.prototype = {$isCompressedTextureETC1: 1};
  P.CompressedTextureEtc.prototype = {$isCompressedTextureEtc: 1};
  P.CompressedTexturePvrtc.prototype = {$isCompressedTexturePvrtc: 1};
  P.CompressedTextureS3TC.prototype = {$isCompressedTextureS3TC: 1};
  P.CompressedTextureS3TCsRgb.prototype = {$isCompressedTextureS3TCsRgb: 1};
  P.ContextEvent.prototype = {$isContextEvent: 1};
  P.DebugRendererInfo.prototype = {$isDebugRendererInfo: 1};
  P.DebugShaders.prototype = {$isDebugShaders: 1};
  P.DepthTexture.prototype = {$isDepthTexture: 1};
  P.DrawBuffers.prototype = {$isDrawBuffers: 1};
  P.EXTsRgb.prototype = {$isEXTsRgb: 1};
  P.ExtBlendMinMax.prototype = {$isExtBlendMinMax: 1};
  P.ExtColorBufferFloat.prototype = {$isExtColorBufferFloat: 1};
  P.ExtColorBufferHalfFloat.prototype = {$isExtColorBufferHalfFloat: 1};
  P.ExtDisjointTimerQuery.prototype = {$isExtDisjointTimerQuery: 1};
  P.ExtDisjointTimerQueryWebGL2.prototype = {$isExtDisjointTimerQueryWebGL2: 1};
  P.ExtFragDepth.prototype = {$isExtFragDepth: 1};
  P.ExtShaderTextureLod.prototype = {$isExtShaderTextureLod: 1};
  P.ExtTextureFilterAnisotropic.prototype = {$isExtTextureFilterAnisotropic: 1};
  P.Framebuffer.prototype = {$isFramebuffer: 1};
  P.GetBufferSubDataAsync.prototype = {$isGetBufferSubDataAsync: 1};
  P.LoseContext.prototype = {$isLoseContext: 1};
  P.OesElementIndexUint.prototype = {$isOesElementIndexUint: 1};
  P.OesStandardDerivatives.prototype = {$isOesStandardDerivatives: 1};
  P.OesTextureFloat.prototype = {$isOesTextureFloat: 1};
  P.OesTextureFloatLinear.prototype = {$isOesTextureFloatLinear: 1};
  P.OesTextureHalfFloat.prototype = {$isOesTextureHalfFloat: 1};
  P.OesTextureHalfFloatLinear.prototype = {$isOesTextureHalfFloatLinear: 1};
  P.OesVertexArrayObject.prototype = {$isOesVertexArrayObject: 1};
  P.Program.prototype = {$isProgram: 1};
  P.Query.prototype = {$isQuery: 1};
  P.Renderbuffer.prototype = {$isRenderbuffer: 1};
  P.RenderingContext.prototype = {$isCanvasRenderingContext: 1, $isRenderingContext: 1};
  P.RenderingContext2.prototype = {$isRenderingContext2: 1, $is_WebGL2RenderingContextBase: 1, $is_WebGLRenderingContextBase: 1};
  P.Sampler.prototype = {$isSampler: 1};
  P.Shader.prototype = {$isShader: 1};
  P.ShaderPrecisionFormat.prototype = {$isShaderPrecisionFormat: 1};
  P.Sync.prototype = {$isSync: 1};
  P.Texture.prototype = {$isTexture: 1};
  P.TimerQueryExt.prototype = {$isTimerQueryExt: 1};
  P.TransformFeedback.prototype = {$isTransformFeedback: 1};
  P.UniformLocation.prototype = {$isUniformLocation: 1};
  P.VertexArrayObject.prototype = {$isVertexArrayObject: 1};
  P.VertexArrayObjectOes.prototype = {$isVertexArrayObjectOes: 1};
  P.WebGL.prototype = {$isWebGL: 1};
  P._WebGL2RenderingContextBase.prototype = {$is_WebGL2RenderingContextBase: 1, $is_WebGLRenderingContextBase: 1};
  P._WebGLRenderingContextBase.prototype = {};
  P.SqlDatabase.prototype = {$isSqlDatabase: 1};
  P.SqlError.prototype = {$isSqlError: 1};
  P.SqlResultSet.prototype = {$isSqlResultSet: 1};
  P.SqlResultSetRowList.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Map,,,]];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [[P.Map,,,]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Map,,,]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Map,,,]];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [[P.Map,,,]];
    },
    $isSqlResultSetRowList: 1
  };
  P.SqlTransaction.prototype = {$isSqlTransaction: 1};
  P._SqlResultSetRowList_Interceptor_ListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Map,,,]];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [[P.Map,,,]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Map,,,]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Map,,,]];
    }
  };
  P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Map,,,]];
    },
    $isListMixin: 1,
    $asListMixin: function() {
      return [[P.Map,,,]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Map,,,]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Map,,,]];
    },
    $isImmutableListMixin: 1,
    $asImmutableListMixin: function() {
      return [[P.Map,,,]];
    }
  };
  L.ChromeAlarms.prototype = {
    get$_alarms: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "alarms"), "$isJsObject");
    },
    get$onAlarm: function() {
      return J.get$stream$z(this._onAlarm);
    },
    ChromeAlarms$_$0: function() {
      this.set$_onAlarm(F.ChromeStreamController$oneArg(new L.ChromeAlarms$__closure(this), "onAlarm", L.alarms___createAlarm$closure(), L.Alarm));
    },
    create$2: function(alarmInfo, $name) {
      H.interceptedTypeCheck(alarmInfo, "$isAlarmCreateInfo");
      H.stringTypeCheck($name);
      if (this.get$_alarms() == null)
        this._alarms$_throwNotAvailable$0();
      this.get$_alarms().callMethod$2("create", [$name, F.toJS(alarmInfo)]);
    },
    create$1: function(alarmInfo) {
      return this.create$2(alarmInfo, null);
    },
    _alarms$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.alarms' is not available"));
    },
    set$_onAlarm: function(_onAlarm) {
      this._onAlarm = H.assertSubtype(_onAlarm, "$isChromeStreamController", [L.Alarm], "$asChromeStreamController");
    }
  };
  L.ChromeAlarms$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_alarms();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  L.Alarm.prototype = {};
  L.AlarmCreateInfo.prototype = {
    AlarmCreateInfo$3$delayInMinutes$periodInMinutes$when: function(delayInMinutes, periodInMinutes, when) {
      if (when != null)
        this.set$when(when);
      if (delayInMinutes != null)
        this.set$delayInMinutes(delayInMinutes);
      if (periodInMinutes != null)
        this.set$periodInMinutes(periodInMinutes);
    },
    set$when: function(value) {
      J.$indexSet$ax(this.jsProxy, "when", F.toJS(H.numTypeCheck(value)));
    },
    set$delayInMinutes: function(value) {
      J.$indexSet$ax(this.jsProxy, "delayInMinutes", F.toJS(H.numTypeCheck(value)));
    },
    set$periodInMinutes: function(value) {
      J.$indexSet$ax(this.jsProxy, "periodInMinutes", F.toJS(H.numTypeCheck(value)));
    }
  };
  B.ChromeApp.prototype = {
    get$window: function(receiver) {
      return this.window;
    }
  };
  B.ChromeAppRuntime.prototype = {
    get$_app_runtime: function() {
      return H.interceptedTypeCheck(J.$index$asx(J.$index$asx($.$get$chrome(), "app"), "runtime"), "$isJsObject");
    },
    ChromeAppRuntime$_$0: function() {
      var getApi = new B.ChromeAppRuntime$__closure(this);
      this.set$_onEmbedRequested(F.ChromeStreamController$oneArg(getApi, "onEmbedRequested", B.app___createEmbedRequest$closure(), B.EmbedRequest));
      this.set$_onLaunched(F.ChromeStreamController$oneArg(getApi, "onLaunched", B.app___createLaunchData$closure(), B.LaunchData));
      F.ChromeStreamController$noArgs(getApi, "onRestarted", null);
    },
    set$_onEmbedRequested: function(_onEmbedRequested) {
      H.assertSubtype(_onEmbedRequested, "$isChromeStreamController", [B.EmbedRequest], "$asChromeStreamController");
    },
    set$_onLaunched: function(_onLaunched) {
      H.assertSubtype(_onLaunched, "$isChromeStreamController", [B.LaunchData], "$asChromeStreamController");
    }
  };
  B.ChromeAppRuntime$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_app_runtime();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  B.LaunchSource.prototype = {};
  B.AppRuntimeActionType.prototype = {};
  B.PlayStoreStatus.prototype = {};
  B.LaunchItem.prototype = {};
  B.ActionData.prototype = {};
  B.LaunchData.prototype = {};
  B.EmbedRequest.prototype = {};
  B._ChromeAppWindow.prototype = {
    get$_app_window: function() {
      return H.interceptedTypeCheck(J.$index$asx(J.$index$asx($.$get$chrome(), "app"), "window"), "$isJsObject");
    },
    get$onClosed: function() {
      return J.get$stream$z(this._onClosed);
    },
    get$onFullscreened: function() {
      return J.get$stream$z(this._onFullscreened);
    },
    get$onMaximized: function() {
      return J.get$stream$z(this._onMaximized);
    },
    get$onMinimized: function() {
      return J.get$stream$z(this._onMinimized);
    },
    get$onRestored: function() {
      return J.get$stream$z(this._onRestored);
    },
    _ChromeAppWindow$_$0: function() {
      var _this = this, _null = null,
        getApi = new B._ChromeAppWindow$__closure(_this);
      F.ChromeStreamController$noArgs(getApi, "onBoundsChanged", _null);
      _this._onClosed = F.ChromeStreamController$noArgs(getApi, "onClosed", _null);
      _this._onFullscreened = F.ChromeStreamController$noArgs(getApi, "onFullscreened", _null);
      _this._onMaximized = F.ChromeStreamController$noArgs(getApi, "onMaximized", _null);
      _this._onMinimized = F.ChromeStreamController$noArgs(getApi, "onMinimized", _null);
      _this._onRestored = F.ChromeStreamController$noArgs(getApi, "onRestored", _null);
      F.ChromeStreamController$noArgs(getApi, "onAlphaEnabledChanged", _null);
    },
    create$2: function(url, options) {
      var completer;
      H.stringTypeCheck(url);
      H.interceptedTypeCheck(options, "$isCreateWindowOptions");
      if (this.get$_app_window() == null)
        this._app$_throwNotAvailable$0();
      completer = F.ChromeCompleter$oneArg(B.app___createAppWindow$closure(), B.AppWindow);
      this.get$_app_window().callMethod$2("create", [url, F.toJS(options), completer.get$callback()]);
      return completer.get$future();
    },
    create$1: function(url) {
      return this.create$2(url, null);
    },
    current$0: function() {
      if (this.get$_app_window() == null)
        this._app$_throwNotAvailable$0();
      return B._createAppWindow(H.interceptedTypeCheck(this.get$_app_window().callMethod$1("current"), "$isJsObject"));
    },
    _app$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.app.window' is not available"));
    }
  };
  B._ChromeAppWindow$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_app_window();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  B.State.prototype = {};
  B.WindowType.prototype = {};
  B.ContentBounds.prototype = {};
  B.BoundsSpecification.prototype = {};
  B.FrameOptions.prototype = {};
  B.CreateWindowOptions.prototype = {
    CreateWindowOptions$29$alphaEnabled$alwaysOnTop$bounds$defaultHeight$defaultLeft$defaultTop$defaultWidth$focused$frame$height$hidden$icon$id$ime$innerBounds$left$maxHeight$maxWidth$minHeight$minWidth$outerBounds$resizable$showInShelf$singleton$state$top$type$visibleOnAllWorkspaces$width: function(alphaEnabled, alwaysOnTop, bounds, defaultHeight, defaultLeft, defaultTop, defaultWidth, focused, frame, height, hidden, icon, id, ime, innerBounds, left, maxHeight, maxWidth, minHeight, minWidth, outerBounds, resizable, showInShelf, singleton, state, $top, type, visibleOnAllWorkspaces, width) {
      var _this = this;
      if (id != null)
        _this.set$id(0, id);
      if (defaultWidth != null)
        _this.set$defaultWidth(defaultWidth);
      if (defaultHeight != null)
        _this.set$defaultHeight(defaultHeight);
      if (defaultLeft != null)
        _this.set$defaultLeft(defaultLeft);
      if (defaultTop != null)
        _this.set$defaultTop(defaultTop);
      if (width != null)
        _this.set$width(0, width);
      if (height != null)
        _this.set$height(0, height);
      if (left != null)
        _this.set$left(left);
      if ($top != null)
        _this.set$top(0, $top);
      if (minWidth != null)
        _this.set$minWidth(minWidth);
      if (minHeight != null)
        _this.set$minHeight(minHeight);
      if (maxWidth != null)
        _this.set$maxWidth(maxWidth);
      if (maxHeight != null)
        _this.set$maxHeight(maxHeight);
      if (ime != null)
        _this.set$ime(ime);
      if (showInShelf != null)
        _this.set$showInShelf(showInShelf);
      if (icon != null)
        _this.set$icon(icon);
      if (frame != null)
        _this.set$frame(frame);
      if (alphaEnabled != null)
        _this.set$alphaEnabled(alphaEnabled);
      if (hidden != null)
        _this.set$hidden(0, hidden);
      if (resizable != null)
        _this.set$resizable(resizable);
      if (singleton != null)
        _this.set$singleton(singleton);
      if (alwaysOnTop != null)
        _this.set$alwaysOnTop(alwaysOnTop);
      if (focused != null)
        _this.set$focused(focused);
      if (visibleOnAllWorkspaces != null)
        _this.set$visibleOnAllWorkspaces(visibleOnAllWorkspaces);
    },
    set$id: function(_, value) {
      J.$indexSet$ax(this.jsProxy, "id", H.stringTypeCheck(value));
    },
    set$defaultWidth: function(value) {
      J.$indexSet$ax(this.jsProxy, "defaultWidth", H.intTypeCheck(value));
    },
    set$defaultHeight: function(value) {
      J.$indexSet$ax(this.jsProxy, "defaultHeight", H.intTypeCheck(value));
    },
    set$defaultLeft: function(value) {
      J.$indexSet$ax(this.jsProxy, "defaultLeft", H.intTypeCheck(value));
    },
    set$defaultTop: function(value) {
      J.$indexSet$ax(this.jsProxy, "defaultTop", H.intTypeCheck(value));
    },
    set$width: function(_, value) {
      J.$indexSet$ax(this.jsProxy, "width", H.intTypeCheck(value));
    },
    set$height: function(_, value) {
      J.$indexSet$ax(this.jsProxy, "height", H.intTypeCheck(value));
    },
    set$left: function(value) {
      J.$indexSet$ax(this.jsProxy, "left", H.intTypeCheck(value));
    },
    set$top: function(_, value) {
      J.$indexSet$ax(this.jsProxy, "top", H.intTypeCheck(value));
    },
    set$minWidth: function(value) {
      J.$indexSet$ax(this.jsProxy, "minWidth", H.intTypeCheck(value));
    },
    set$minHeight: function(value) {
      J.$indexSet$ax(this.jsProxy, "minHeight", H.intTypeCheck(value));
    },
    set$maxWidth: function(value) {
      J.$indexSet$ax(this.jsProxy, "maxWidth", H.intTypeCheck(value));
    },
    set$maxHeight: function(value) {
      J.$indexSet$ax(this.jsProxy, "maxHeight", H.intTypeCheck(value));
    },
    set$ime: function(value) {
      J.$indexSet$ax(this.jsProxy, "ime", H.boolTypeCheck(value));
    },
    set$showInShelf: function(value) {
      J.$indexSet$ax(this.jsProxy, "showInShelf", H.boolTypeCheck(value));
    },
    set$icon: function(value) {
      J.$indexSet$ax(this.jsProxy, "icon", H.stringTypeCheck(value));
    },
    set$frame: function(value) {
      J.$indexSet$ax(this.jsProxy, "frame", F.toJS(value));
    },
    set$alphaEnabled: function(value) {
      J.$indexSet$ax(this.jsProxy, "alphaEnabled", H.boolTypeCheck(value));
    },
    set$hidden: function(_, value) {
      J.$indexSet$ax(this.jsProxy, "hidden", H.boolTypeCheck(value));
    },
    set$resizable: function(value) {
      J.$indexSet$ax(this.jsProxy, "resizable", H.boolTypeCheck(value));
    },
    set$singleton: function(value) {
      J.$indexSet$ax(this.jsProxy, "singleton", H.boolTypeCheck(value));
    },
    set$alwaysOnTop: function(value) {
      J.$indexSet$ax(this.jsProxy, "alwaysOnTop", H.boolTypeCheck(value));
    },
    set$focused: function(value) {
      J.$indexSet$ax(this.jsProxy, "focused", H.boolTypeCheck(value));
    },
    set$visibleOnAllWorkspaces: function(value) {
      J.$indexSet$ax(this.jsProxy, "visibleOnAllWorkspaces", H.boolTypeCheck(value));
    }
  };
  B._AppWindow.prototype = {
    fullscreen$0: function() {
      this.jsProxy.callMethod$1("fullscreen");
    },
    close$0: function(_) {
      this.jsProxy.callMethod$1("close");
    }
  };
  B.ChromeAppWindow.prototype = {
    get$onClosed: function() {
      return this.current$0().get$onClosed();
    },
    get$onFullscreened: function() {
      return this.current$0().get$onFullscreened();
    },
    get$onMaximized: function() {
      return this.current$0().get$onMaximized();
    },
    get$onMinimized: function() {
      return this.current$0().get$onMinimized();
    },
    get$onRestored: function() {
      return this.current$0().get$onRestored();
    }
  };
  B.AppWindow.prototype = {
    get$onClosed: function() {
      var _this = this;
      if (_this._onClosedStream == null) {
        _this._onClosedStream = H.interceptedTypeCheck(P.StreamController_StreamController$broadcast(null, null, true, null), "$isStreamController");
        J.$index$asx(_this.jsProxy, "onClosed").callMethod$2("addListener", H.setRuntimeTypeInfo([new B.AppWindow_onClosed_closure(_this)], [{func: 1, ret: -1}]));
      }
      return J.get$stream$z(_this._onClosedStream);
    },
    get$onBoundsChanged: function() {
      return this._streamFor$1("onBoundsChanged");
    },
    get$onFullscreened: function() {
      return this._streamFor$1("onFullscreened");
    },
    get$onMaximized: function() {
      return this._streamFor$1("onMaximized");
    },
    get$onMinimized: function() {
      return this._streamFor$1("onMinimized");
    },
    get$onRestored: function() {
      return this._streamFor$1("onRestored");
    },
    _streamFor$1: function($event) {
      var t1, t2, t3;
      H.stringTypeCheck($event);
      t1 = this._streamMap;
      t2 = J.getInterceptor$asx(t1);
      if (t2.$index(t1, $event) == null) {
        t3 = F.ChromeStreamController$noArgs(new B.AppWindow__streamFor_closure(this), $event, null);
        t2.$indexSet(t1, $event, t3.get$stream(t3));
      }
      return t2.$index(t1, $event);
    },
    get$_onClosedStream: function() {
      return this._onClosedStream;
    }
  };
  B.AppWindow_onClosed_closure.prototype = {
    call$0: function() {
      return J.add$1$ax(this.$this.get$_onClosedStream(), null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  B.AppWindow__streamFor_closure.prototype = {
    call$0: function() {
      return this.$this.get$jsProxy();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 62
  };
  Q.ChromeAudio.prototype = {
    get$_audio: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "audio"), "$isJsObject");
    },
    ChromeAudio$_$0: function() {
      var _this = this,
        getApi = new Q.ChromeAudio$__closure(_this);
      _this.set$_onLevelChanged(F.ChromeStreamController$oneArg(getApi, "onLevelChanged", Q.audio___createLevelChangedEvent$closure(), Q.LevelChangedEvent));
      _this.set$_onMuteChanged(F.ChromeStreamController$oneArg(getApi, "onMuteChanged", Q.audio___createMuteChangedEvent$closure(), Q.MuteChangedEvent));
      _this.set$_onDeviceListChanged(F.ChromeStreamController$oneArg(getApi, "onDeviceListChanged", new Q.ChromeAudio$__closure0(), [P.List, Q.AudioDeviceInfo]));
      F.ChromeStreamController$noArgs(getApi, "onDeviceChanged", null);
    },
    getInfo$0: function() {
      if (this.get$_audio() == null)
        this._audio$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$twoArgs(Q.audio_GetInfoResult__create$closure(), Q.GetInfoResult);
      this.get$_audio().callMethod$2("getInfo", [completer.get$callback()]);
      return completer.get$future();
    },
    _audio$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.audio' is not available"));
    },
    set$_onLevelChanged: function(_onLevelChanged) {
      H.assertSubtype(_onLevelChanged, "$isChromeStreamController", [Q.LevelChangedEvent], "$asChromeStreamController");
    },
    set$_onMuteChanged: function(_onMuteChanged) {
      H.assertSubtype(_onMuteChanged, "$isChromeStreamController", [Q.MuteChangedEvent], "$asChromeStreamController");
    },
    set$_onDeviceListChanged: function(_onDeviceListChanged) {
      H.assertSubtype(_onDeviceListChanged, "$isChromeStreamController", [[P.List, Q.AudioDeviceInfo]], "$asChromeStreamController");
    }
  };
  Q.ChromeAudio$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_audio();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  Q.ChromeAudio$__closure0.prototype = {
    call$1: function(e) {
      return F.toList(H.interceptedTypeCheck(e, "$isJsObject"), Q.audio___createAudioDeviceInfo$closure());
    },
    $signature: 10
  };
  Q.StreamType.prototype = {};
  Q.DeviceType.prototype = {};
  Q.OutputDeviceInfo.prototype = {};
  Q.InputDeviceInfo.prototype = {};
  Q.AudioDeviceInfo.prototype = {};
  Q.DeviceFilter.prototype = {};
  Q.DeviceProperties.prototype = {};
  Q.DeviceIdLists.prototype = {};
  Q.MuteChangedEvent.prototype = {};
  Q.LevelChangedEvent.prototype = {};
  Q.GetInfoResult.prototype = {};
  Q.ChromeBluetooth.prototype = {
    get$_bluetooth: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "bluetooth"), "$isJsObject");
    },
    ChromeBluetooth$_$0: function() {
      var t1, _this = this,
        getApi = new Q.ChromeBluetooth$__closure(_this);
      _this.set$_onAdapterStateChanged(F.ChromeStreamController$oneArg(getApi, "onAdapterStateChanged", Q.bluetooth___createAdapterState$closure(), Q.AdapterState));
      t1 = Q.BluetoothDevice;
      _this.set$_onDeviceAdded(F.ChromeStreamController$oneArg(getApi, "onDeviceAdded", Q.bluetooth___createDevice$closure(), t1));
      _this.set$_onDeviceChanged(F.ChromeStreamController$oneArg(getApi, "onDeviceChanged", Q.bluetooth___createDevice$closure(), t1));
      _this.set$_onDeviceRemoved(F.ChromeStreamController$oneArg(getApi, "onDeviceRemoved", Q.bluetooth___createDevice$closure(), t1));
    },
    get$available: function() {
      return this.get$_bluetooth() != null;
    },
    getAdapterState$0: function() {
      if (this.get$_bluetooth() == null)
        this._bluetooth$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(Q.bluetooth___createAdapterState$closure(), Q.AdapterState);
      this.get$_bluetooth().callMethod$2("getAdapterState", [completer.get$callback()]);
      return completer.get$future();
    },
    _bluetooth$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.bluetooth' is not available"));
    },
    set$_onAdapterStateChanged: function(_onAdapterStateChanged) {
      H.assertSubtype(_onAdapterStateChanged, "$isChromeStreamController", [Q.AdapterState], "$asChromeStreamController");
    },
    set$_onDeviceAdded: function(_onDeviceAdded) {
      H.assertSubtype(_onDeviceAdded, "$isChromeStreamController", [Q.BluetoothDevice], "$asChromeStreamController");
    },
    set$_onDeviceChanged: function(_onDeviceChanged) {
      H.assertSubtype(_onDeviceChanged, "$isChromeStreamController", [Q.BluetoothDevice], "$asChromeStreamController");
    },
    set$_onDeviceRemoved: function(_onDeviceRemoved) {
      H.assertSubtype(_onDeviceRemoved, "$isChromeStreamController", [Q.BluetoothDevice], "$asChromeStreamController");
    }
  };
  Q.ChromeBluetooth$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_bluetooth();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  Q.VendorIdSource.prototype = {};
  Q.BluetoothDeviceType.prototype = {};
  Q.AdapterState.prototype = {
    get$address: function() {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "address"));
    },
    get$powered: function() {
      return H.boolTypeCheck(J.$index$asx(this.jsProxy, "powered"));
    },
    get$available: function() {
      return H.boolTypeCheck(J.$index$asx(this.jsProxy, "available"));
    },
    get$discovering: function() {
      return H.boolTypeCheck(J.$index$asx(this.jsProxy, "discovering"));
    }
  };
  Q.BluetoothDevice.prototype = {};
  R.ChromeBluetoothLowEnergy.prototype = {};
  R.OnCharacteristicReadRequestEvent.prototype = {};
  R.OnCharacteristicWriteRequestEvent.prototype = {};
  R.OnDescriptorReadRequestEvent.prototype = {};
  R.OnDescriptorWriteRequestEvent.prototype = {};
  R.CharacteristicProperty.prototype = {};
  R.DescriptorPermission.prototype = {};
  R.AdvertisementType.prototype = {};
  R.Device0.prototype = {};
  R.Service0.prototype = {};
  R.Characteristic.prototype = {};
  R.Descriptor.prototype = {};
  R.ConnectProperties.prototype = {};
  R.NotificationProperties.prototype = {};
  R.ManufacturerData.prototype = {};
  R.ServiceData.prototype = {};
  R.Advertisement.prototype = {};
  R.Request0.prototype = {};
  R.Response.prototype = {};
  R.Notification0.prototype = {};
  L.ChromeBluetoothSocket.prototype = {};
  L.AcceptError.prototype = {};
  L.BluetoothReceiveError.prototype = {};
  L.BluetoothSocketProperties.prototype = {};
  L.BluetoothCreateInfo.prototype = {};
  L.ListenOptions.prototype = {};
  L.BluetoothSocketInfo.prototype = {};
  L.BluetoothAcceptInfo.prototype = {};
  L.BluetoothAcceptErrorInfo.prototype = {};
  L.BluetoothReceiveInfo.prototype = {};
  L.BluetoothReceiveErrorInfo.prototype = {};
  K.ChromeBrowser.prototype = {
    get$_browser: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "browser"), "$isJsObject");
    },
    get$available: function() {
      return this.get$_browser() != null;
    },
    openTab$1: function(options) {
      var completer;
      H.interceptedTypeCheck(options, "$isOpenTabOptions");
      if (this.get$_browser() == null)
        this._browser$_throwNotAvailable$0();
      completer = F.ChromeCompleter$noArgs(null);
      this.get$_browser().callMethod$2("openTab", [F.toJS(options), completer.get$callback()]);
      return completer.get$future();
    },
    _browser$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.browser' is not available"));
    }
  };
  K.OpenTabOptions.prototype = {
    OpenTabOptions$1$url: function(url) {
      if (url != null)
        this.set$url(0, url);
    },
    set$url: function(_, value) {
      J.$indexSet$ax(this.jsProxy, "url", H.stringTypeCheck(value));
    }
  };
  Q.ChromeCommands.prototype = {};
  Q.Command.prototype = {};
  F.ChromeContextMenus.prototype = {};
  F.ContextType.prototype = {};
  F.ItemType.prototype = {};
  F.ContextMenusCreateParams.prototype = {};
  F.ContextMenusUpdateParams.prototype = {};
  A.ChromeDocumentScan.prototype = {};
  A.ScanOptions.prototype = {};
  A.ScanResults.prototype = {};
  L.ChromeEvents.prototype = {};
  L.Rule0.prototype = {};
  L.ChromeEvent.prototype = {};
  L.UrlFilter.prototype = {};
  T.ChromeExtensionTypes.prototype = {};
  T.ImageFormat.prototype = {};
  T.RunAt.prototype = {};
  T.CSSOrigin.prototype = {};
  T.ImageDetails.prototype = {};
  T.InjectDetails.prototype = {};
  V.ChromeFileSystem.prototype = {
    get$_fileSystem: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "fileSystem"), "$isJsObject");
    },
    ChromeFileSystem$_$0: function() {
      var _this = this,
        getApi = new V.ChromeFileSystem$__closure(_this);
      _this.set$_onVolumeListChanged(F.ChromeStreamController$oneArg(getApi, "onVolumeListChanged", V.file_system___createVolumeListChangedEvent$closure(), V.VolumeListChangedEvent));
      _this.set$_onEntryChanged(F.ChromeStreamController$oneArg(getApi, "onEntryChanged", V.file_system___createEntryChangedEvent$closure(), V.EntryChangedEvent));
      _this.set$_onEntryRemoved(F.ChromeStreamController$oneArg(getApi, "onEntryRemoved", V.file_system___createEntryRemovedEvent$closure(), V.EntryRemovedEvent));
    },
    chooseEntry$1: function(options) {
      var completer;
      H.interceptedTypeCheck(options, "$isChooseEntryOptions");
      if (this.get$_fileSystem() == null)
        this._file_system$_throwNotAvailable$0();
      completer = F.ChromeCompleter$twoArgs(V.file_system_ChooseEntryResult__create$closure(), V.ChooseEntryResult);
      this.get$_fileSystem().callMethod$2("chooseEntry", [F.toJS(options), completer.get$callback()]);
      return completer.get$future();
    },
    _file_system$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.fileSystem' is not available"));
    },
    set$_onVolumeListChanged: function(_onVolumeListChanged) {
      H.assertSubtype(_onVolumeListChanged, "$isChromeStreamController", [V.VolumeListChangedEvent], "$asChromeStreamController");
    },
    set$_onEntryChanged: function(_onEntryChanged) {
      H.assertSubtype(_onEntryChanged, "$isChromeStreamController", [V.EntryChangedEvent], "$asChromeStreamController");
    },
    set$_onEntryRemoved: function(_onEntryRemoved) {
      H.assertSubtype(_onEntryRemoved, "$isChromeStreamController", [V.EntryRemovedEvent], "$asChromeStreamController");
    }
  };
  V.ChromeFileSystem$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_fileSystem();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  V.ChooseEntryType.prototype = {};
  V.ChildChangeType.prototype = {};
  V.AcceptOption.prototype = {};
  V.ChooseEntryOptions.prototype = {
    ChooseEntryOptions$5$accepts$acceptsAllTypes$acceptsMultiple$suggestedName$type: function(accepts, acceptsAllTypes, acceptsMultiple, suggestedName, type) {
      var _this = this;
      if (type != null)
        _this.set$type(0, type);
      if (suggestedName != null)
        _this.set$suggestedName(suggestedName);
      if (accepts != null)
        _this.set$accepts(accepts);
      if (acceptsAllTypes != null)
        _this.set$acceptsAllTypes(acceptsAllTypes);
      if (acceptsMultiple != null)
        _this.set$acceptsMultiple(acceptsMultiple);
    },
    set$type: function(_, value) {
      J.$indexSet$ax(this.jsProxy, "type", F.toJS(H.interceptedTypeCheck(value, "$isChooseEntryType")));
    },
    set$suggestedName: function(value) {
      J.$indexSet$ax(this.jsProxy, "suggestedName", H.stringTypeCheck(value));
    },
    set$accepts: function(value) {
      J.$indexSet$ax(this.jsProxy, "accepts", F.toJS(H.assertSubtype(value, "$isList", [V.AcceptOption], "$asList")));
    },
    set$acceptsAllTypes: function(value) {
      J.$indexSet$ax(this.jsProxy, "acceptsAllTypes", H.boolTypeCheck(value));
    },
    set$acceptsMultiple: function(value) {
      J.$indexSet$ax(this.jsProxy, "acceptsMultiple", H.boolTypeCheck(value));
    }
  };
  V.RequestFileSystemOptions.prototype = {};
  V.Volume.prototype = {};
  V.ChildChange.prototype = {};
  V.VolumeListChangedEvent.prototype = {};
  V.EntryChangedEvent.prototype = {};
  V.EntryRemovedEvent.prototype = {};
  V.ChooseEntryResult.prototype = {};
  Y.ChromeFileSystemProvider.prototype = {};
  Y.OnUnmountRequestedEvent.prototype = {};
  Y.OnGetMetadataRequestedEvent.prototype = {};
  Y.OnGetActionsRequestedEvent.prototype = {};
  Y.OnReadDirectoryRequestedEvent.prototype = {};
  Y.OnOpenFileRequestedEvent.prototype = {};
  Y.OnCloseFileRequestedEvent.prototype = {};
  Y.OnReadFileRequestedEvent.prototype = {};
  Y.OnCreateDirectoryRequestedEvent.prototype = {};
  Y.OnDeleteEntryRequestedEvent.prototype = {};
  Y.OnCreateFileRequestedEvent.prototype = {};
  Y.OnCopyEntryRequestedEvent.prototype = {};
  Y.OnMoveEntryRequestedEvent.prototype = {};
  Y.OnTruncateRequestedEvent.prototype = {};
  Y.OnWriteFileRequestedEvent.prototype = {};
  Y.OnAbortRequestedEvent.prototype = {};
  Y.OnConfigureRequestedEvent.prototype = {};
  Y.OnMountRequestedEvent.prototype = {};
  Y.OnAddWatcherRequestedEvent.prototype = {};
  Y.OnRemoveWatcherRequestedEvent.prototype = {};
  Y.OnExecuteActionRequestedEvent.prototype = {};
  Y.ProviderError.prototype = {};
  Y.OpenFileMode.prototype = {};
  Y.ChangeType.prototype = {};
  Y.CommonActionId.prototype = {};
  Y.EntryMetadata.prototype = {};
  Y.Watcher.prototype = {};
  Y.OpenedFile.prototype = {};
  Y.FileSystemInfo.prototype = {};
  Y.MountOptions.prototype = {};
  Y.UnmountOptions.prototype = {};
  Y.UnmountRequestedOptions.prototype = {};
  Y.GetMetadataRequestedOptions.prototype = {};
  Y.GetActionsRequestedOptions.prototype = {};
  Y.ReadDirectoryRequestedOptions.prototype = {};
  Y.OpenFileRequestedOptions.prototype = {};
  Y.CloseFileRequestedOptions.prototype = {};
  Y.ReadFileRequestedOptions.prototype = {};
  Y.CreateDirectoryRequestedOptions.prototype = {};
  Y.DeleteEntryRequestedOptions.prototype = {};
  Y.CreateFileRequestedOptions.prototype = {};
  Y.CopyEntryRequestedOptions.prototype = {};
  Y.MoveEntryRequestedOptions.prototype = {};
  Y.TruncateRequestedOptions.prototype = {};
  Y.WriteFileRequestedOptions.prototype = {};
  Y.AbortRequestedOptions.prototype = {};
  Y.AddWatcherRequestedOptions.prototype = {};
  Y.RemoveWatcherRequestedOptions.prototype = {};
  Y.Action.prototype = {};
  Y.ExecuteActionRequestedOptions.prototype = {};
  Y.Change.prototype = {};
  Y.NotifyOptions.prototype = {};
  Y.ConfigureRequestedOptions.prototype = {};
  T.ChromeGcm.prototype = {};
  T.GcmSendParams.prototype = {};
  Y.ChromeHid.prototype = {};
  Y.HidCollectionInfo.prototype = {};
  Y.HidDeviceInfo.prototype = {};
  Y.HidConnectInfo.prototype = {};
  Y.HidDeviceFilter.prototype = {};
  Y.HidGetDevicesOptions.prototype = {};
  Y.HidDevicePromptOptions.prototype = {};
  Y.ReceiveResult.prototype = {};
  R.ChromeI18N.prototype = {
    get$_i18n: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "i18n"), "$isJsObject");
    },
    getAcceptLanguages$0: function() {
      if (this.get$_i18n() == null)
        this._i18n$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(new R.ChromeI18N_getAcceptLanguages_closure(), [P.List, R.LanguageCode]);
      this.get$_i18n().callMethod$2("getAcceptLanguages", [completer.get$callback()]);
      return completer.get$future();
    },
    getMessage$1: function(messageName) {
      H.stringTypeCheck(messageName);
      if (this.get$_i18n() == null)
        this._i18n$_throwNotAvailable$0();
      return H.stringTypeCheck(this.get$_i18n().callMethod$2("getMessage", [messageName, F.toJS(null)]));
    },
    _i18n$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.i18n' is not available"));
    }
  };
  R.ChromeI18N_getAcceptLanguages_closure.prototype = {
    call$1: function(e) {
      return F.toList(H.interceptedTypeCheck(e, "$isJsObject"), R.i18n___createLanguageCode$closure());
    },
    $signature: 10
  };
  R.LanguageCode.prototype = {};
  Q.ChromeIdentity.prototype = {
    get$_identity: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "identity"), "$isJsObject");
    },
    ChromeIdentity$_$0: function() {
      this.set$_onSignInChanged(F.ChromeStreamController$twoArgs(new Q.ChromeIdentity$__closure(this), "onSignInChanged", Q.identity___createOnSignInChangedEvent$closure(), Q.OnSignInChangedEvent));
    },
    get$available: function() {
      return this.get$_identity() != null;
    },
    getAuthToken$0: function() {
      if (this.get$_identity() == null)
        this._identity$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(null, P.String);
      this.get$_identity().callMethod$2("getAuthToken", [F.toJS(null), completer.get$callback()]);
      return completer.get$future();
    },
    _identity$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.identity' is not available"));
    },
    set$_onSignInChanged: function(_onSignInChanged) {
      H.assertSubtype(_onSignInChanged, "$isChromeStreamController", [Q.OnSignInChangedEvent], "$asChromeStreamController");
    }
  };
  Q.ChromeIdentity$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_identity();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  Q.OnSignInChangedEvent.prototype = {};
  Q.AccountInfo.prototype = {};
  Q.ProfileUserInfo.prototype = {};
  Q.TokenDetails.prototype = {};
  Q.InvalidTokenDetails.prototype = {};
  Q.WebAuthFlowDetails.prototype = {};
  V.ChromeIdle.prototype = {
    get$_idle: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "idle"), "$isJsObject");
    },
    ChromeIdle$_$0: function() {
      this.set$_onStateChanged(F.ChromeStreamController$oneArg(new V.ChromeIdle$__closure(this), "onStateChanged", V.idle___createIdleState$closure(), V.IdleState));
    },
    queryState$1: function(detectionIntervalInSeconds) {
      var completer;
      H.intTypeCheck(detectionIntervalInSeconds);
      if (this.get$_idle() == null)
        this._idle$_throwNotAvailable$0();
      completer = F.ChromeCompleter$oneArg(V.idle___createIdleState$closure(), V.IdleState);
      this.get$_idle().callMethod$2("queryState", [detectionIntervalInSeconds, completer.get$callback()]);
      return completer.get$future();
    },
    _idle$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.idle' is not available"));
    },
    set$_onStateChanged: function(_onStateChanged) {
      H.assertSubtype(_onStateChanged, "$isChromeStreamController", [V.IdleState], "$asChromeStreamController");
    }
  };
  V.ChromeIdle$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_idle();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  V.IdleState.prototype = {};
  V._createIdleState_closure.prototype = {
    call$1: function(e) {
      return J.$eq$(H.interceptedTypeCheck(e, "$isChromeEnum").value, this.value);
    },
    $signature: 11
  };
  S.ChromeInstanceID.prototype = {};
  S.InstanceIDGetTokenParams.prototype = {};
  S.InstanceIDDeleteTokenParams.prototype = {};
  M.ChromeLocation.prototype = {};
  M.Coordinates0.prototype = {};
  M.Location0.prototype = {};
  M.WatchLocationRequestInfo.prototype = {};
  B.ChromeMediaGalleries.prototype = {};
  B.GalleryChangeType.prototype = {};
  B.GetMediaFileSystemsInteractivity.prototype = {};
  B.GetMetadataType.prototype = {};
  B.ScanProgressType.prototype = {};
  B.GalleryChangeDetails.prototype = {};
  B.MediaFileSystemsDetails.prototype = {};
  B.MediaMetadataOptions.prototype = {};
  B.MediaFileSystemMetadata.prototype = {};
  B.ScanProgressDetails.prototype = {};
  B.StreamInfo.prototype = {};
  B.MediaMetadata0.prototype = {};
  B.AddGalleryWatchResult.prototype = {};
  B.AddUserSelectedFolderResult.prototype = {};
  V.ChromeNotifications.prototype = {};
  V.OnClosedEvent.prototype = {};
  V.OnButtonClickedEvent.prototype = {};
  V.TemplateType.prototype = {};
  V.PermissionLevel.prototype = {};
  V.NotificationItem.prototype = {};
  V.NotificationBitmap.prototype = {};
  V.NotificationButton.prototype = {};
  V.NotificationOptions.prototype = {};
  S.ChromePermissions.prototype = {
    get$_permissions: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "permissions"), "$isJsObject");
    },
    ChromePermissions$_$0: function() {
      var getApi = new S.ChromePermissions$__closure(this),
        t1 = S.Permissions;
      this.set$_onAdded(F.ChromeStreamController$oneArg(getApi, "onAdded", S.permissions___createPermissions$closure(), t1));
      this.set$_onRemoved(F.ChromeStreamController$oneArg(getApi, "onRemoved", S.permissions___createPermissions$closure(), t1));
    },
    getAll$0: function() {
      if (this.get$_permissions() == null)
        this._permissions$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(S.permissions___createPermissions$closure(), S.Permissions);
      this.get$_permissions().callMethod$2("getAll", [completer.get$callback()]);
      return completer.get$future();
    },
    _permissions$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.permissions' is not available"));
    },
    set$_onAdded: function(_onAdded) {
      H.assertSubtype(_onAdded, "$isChromeStreamController", [S.Permissions], "$asChromeStreamController");
    },
    set$_onRemoved: function(_onRemoved) {
      H.assertSubtype(_onRemoved, "$isChromeStreamController", [S.Permissions], "$asChromeStreamController");
    }
  };
  S.ChromePermissions$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_permissions();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  S.Permissions.prototype = {
    get$permissions: function() {
      return H.assertSubtype(F.toList(H.interceptedTypeCheck(J.$index$asx(this.jsProxy, "permissions"), "$isJsObject"), null), "$isList", [P.String], "$asList");
    },
    get$origins: function() {
      return H.assertSubtype(F.toList(H.interceptedTypeCheck(J.$index$asx(this.jsProxy, "origins"), "$isJsObject"), null), "$isList", [P.String], "$asList");
    }
  };
  D.ChromePower.prototype = {};
  D.Level.prototype = {};
  R.ChromePrinterProvider.prototype = {};
  R.OnGetUsbPrinterInfoRequestedEvent.prototype = {};
  R.OnGetCapabilityRequestedEvent.prototype = {};
  R.OnPrintRequestedEvent.prototype = {};
  R.PrintError.prototype = {};
  R.PrinterInfo.prototype = {};
  R.PrintJob.prototype = {};
  T.ChromeRuntime.prototype = {
    get$_runtime: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "runtime"), "$isJsObject");
    },
    get$onStartup: function() {
      return J.get$stream$z(this._onStartup);
    },
    ChromeRuntime$_$0: function() {
      var t1, _this = this, _null = null,
        getApi = new T.ChromeRuntime$__closure(_this);
      _this._onStartup = F.ChromeStreamController$noArgs(getApi, "onStartup", _null);
      _this.set$_onInstalled(F.ChromeStreamController$oneArg(getApi, "onInstalled", F.common__toMap$closure(), [P.Map,,,]));
      F.ChromeStreamController$noArgs(getApi, "onSuspend", _null);
      F.ChromeStreamController$noArgs(getApi, "onSuspendCanceled", _null);
      _this.set$_onUpdateAvailable(F.ChromeStreamController$oneArg(getApi, "onUpdateAvailable", F.common__toMap$closure(), [P.Map, P.String,,]));
      F.ChromeStreamController$noArgs(getApi, "onBrowserUpdateAvailable", _null);
      t1 = T.Port;
      _this.set$_onConnect(F.ChromeStreamController$oneArg(getApi, "onConnect", T.runtime___createPort$closure(), t1));
      _this.set$_onConnectExternal(F.ChromeStreamController$oneArg(getApi, "onConnectExternal", T.runtime___createPort$closure(), t1));
      _this.set$_onMessage(F.ChromeStreamController$threeArgs(getApi, "onMessage", T.runtime___createOnMessageEvent$closure(), T.OnMessageEvent));
      _this.set$_onMessageExternal(F.ChromeStreamController$threeArgs(getApi, "onMessageExternal", T.runtime___createOnMessageExternalEvent$closure(), T.OnMessageExternalEvent));
      _this.set$_onRestartRequired(F.ChromeStreamController$oneArg(getApi, "onRestartRequired", T.runtime___createOnRestartRequiredReason$closure(), T.OnRestartRequiredReason));
    },
    get$id: function(_) {
      return H.stringTypeCheck(J.$index$asx(this.get$_runtime(), "id"));
    },
    getManifest$0: function() {
      if (this.get$_runtime() == null)
        this._runtime$_throwNotAvailable$0();
      return H.assertSubtype(F.toMap(H.interceptedTypeCheck(this.get$_runtime().callMethod$1("getManifest"), "$isJsObject")), "$isMap", [P.String, null], "$asMap");
    },
    getURL$1: function(path) {
      H.stringTypeCheck(path);
      if (this.get$_runtime() == null)
        this._runtime$_throwNotAvailable$0();
      return H.stringTypeCheck(this.get$_runtime().callMethod$2("getURL", [path]));
    },
    reload$0: function() {
      if (this.get$_runtime() == null)
        this._runtime$_throwNotAvailable$0();
      this.get$_runtime().callMethod$1("reload");
    },
    requestUpdateCheck$0: function() {
      if (this.get$_runtime() == null)
        this._runtime$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$twoArgs(T.runtime_RequestUpdateCheckResult__create$closure(), T.RequestUpdateCheckResult);
      this.get$_runtime().callMethod$2("requestUpdateCheck", [completer.get$callback()]);
      return completer.get$future();
    },
    getPlatformInfo$0: function() {
      if (this.get$_runtime() == null)
        this._runtime$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(T.runtime___createPlatformInfo$closure(), T.PlatformInfo);
      this.get$_runtime().callMethod$2("getPlatformInfo", [completer.get$callback()]);
      return completer.get$future();
    },
    getPackageDirectoryEntry$0: function() {
      if (this.get$_runtime() == null)
        this._runtime$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(T.runtime___createDirectoryEntry$closure(), W.DirectoryEntry);
      this.get$_runtime().callMethod$2("getPackageDirectoryEntry", [completer.get$callback()]);
      return completer.get$future();
    },
    _runtime$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.runtime' is not available"));
    },
    set$_onInstalled: function(_onInstalled) {
      H.assertSubtype(_onInstalled, "$isChromeStreamController", [[P.Map,,,]], "$asChromeStreamController");
    },
    set$_onUpdateAvailable: function(_onUpdateAvailable) {
      H.assertSubtype(_onUpdateAvailable, "$isChromeStreamController", [[P.Map, P.String,,]], "$asChromeStreamController");
    },
    set$_onConnect: function(_onConnect) {
      H.assertSubtype(_onConnect, "$isChromeStreamController", [T.Port], "$asChromeStreamController");
    },
    set$_onConnectExternal: function(_onConnectExternal) {
      H.assertSubtype(_onConnectExternal, "$isChromeStreamController", [T.Port], "$asChromeStreamController");
    },
    set$_onMessage: function(_onMessage) {
      H.assertSubtype(_onMessage, "$isChromeStreamController", [T.OnMessageEvent], "$asChromeStreamController");
    },
    set$_onMessageExternal: function(_onMessageExternal) {
      H.assertSubtype(_onMessageExternal, "$isChromeStreamController", [T.OnMessageExternalEvent], "$asChromeStreamController");
    },
    set$_onRestartRequired: function(_onRestartRequired) {
      H.assertSubtype(_onRestartRequired, "$isChromeStreamController", [T.OnRestartRequiredReason], "$asChromeStreamController");
    }
  };
  T.ChromeRuntime$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_runtime();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  T.OnMessageEvent.prototype = {};
  T.OnMessageExternalEvent.prototype = {};
  T.PlatformOs.prototype = {};
  T.PlatformArch.prototype = {};
  T.PlatformNaclArch.prototype = {};
  T.RequestUpdateCheckStatus.prototype = {};
  T.OnInstalledReason.prototype = {};
  T.OnRestartRequiredReason.prototype = {};
  T.LastErrorRuntime.prototype = {};
  T.Port.prototype = {};
  T.MessageSender.prototype = {};
  T.PlatformInfo.prototype = {};
  T.RuntimeConnectParams.prototype = {};
  T.RuntimeSendMessageParams.prototype = {};
  T.RequestUpdateCheckResult.prototype = {};
  T._createOnRestartRequiredReason_closure.prototype = {
    call$1: function(e) {
      return J.$eq$(H.interceptedTypeCheck(e, "$isChromeEnum").value, this.value);
    },
    $signature: 11
  };
  T._createRequestUpdateCheckStatus_closure.prototype = {
    call$1: function(e) {
      return J.$eq$(H.interceptedTypeCheck(e, "$isChromeEnum").value, this.value);
    },
    $signature: 11
  };
  T.ChromeSerial.prototype = {};
  T.DataBits.prototype = {};
  T.ParityBit.prototype = {};
  T.StopBits.prototype = {};
  T.SendError.prototype = {};
  T.ReceiveError.prototype = {};
  T.DeviceInfo.prototype = {};
  T.ConnectionOptions.prototype = {};
  T.ConnectionInfo.prototype = {};
  T.SerialSendInfo.prototype = {};
  T.HostControlSignals.prototype = {};
  T.DeviceControlSignals.prototype = {};
  T.SerialReceiveInfo.prototype = {};
  T.SerialReceiveErrorInfo.prototype = {};
  A.ChromeSockets.prototype = {};
  A.ChromeSocketsTcp.prototype = {};
  A.SocketProperties.prototype = {};
  A.CreateInfo.prototype = {};
  A.SendInfo.prototype = {};
  A.TLSVersionConstraints.prototype = {};
  A.SecureOptions.prototype = {};
  A.SocketInfo.prototype = {};
  A.ReceiveInfo.prototype = {};
  A.ReceiveErrorInfo.prototype = {};
  A.ChromeSocketsTcpServer.prototype = {};
  A.AcceptInfo.prototype = {};
  A.AcceptErrorInfo.prototype = {};
  A.ChromeSocketsUdp.prototype = {};
  N.ChromeStorage.prototype = {
    get$_storage: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "storage"), "$isJsObject");
    },
    ChromeStorage$_$0: function() {
      this.set$_onChanged(F.ChromeStreamController$twoArgs(new N.ChromeStorage$__closure(this), "onChanged", N.storage___createOnChangedEvent$closure(), N.StorageOnChangedEvent));
    },
    get$sync: function() {
      return N._createSyncStorageArea(H.interceptedTypeCheck(J.$index$asx(this.get$_storage(), "sync"), "$isJsObject"));
    },
    get$local: function() {
      return N._createLocalStorageArea(H.interceptedTypeCheck(J.$index$asx(this.get$_storage(), "local"), "$isJsObject"));
    },
    set$_onChanged: function(_onChanged) {
      H.assertSubtype(_onChanged, "$isChromeStreamController", [N.StorageOnChangedEvent], "$asChromeStreamController");
    }
  };
  N.ChromeStorage$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_storage();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  N.StorageOnChangedEvent.prototype = {};
  N.SyncStorageArea.prototype = {
    get$MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE: function() {
      return H.intTypeCheck(J.$index$asx(this.jsProxy, "MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE"));
    }
  };
  N.LocalStorageArea.prototype = {};
  N.StorageChange.prototype = {};
  N.StorageArea.prototype = {
    $get$1: function(keys) {
      var completer = F.ChromeCompleter$oneArg(F.common__toMap$closure(), [P.Map, P.String,,]);
      this.jsProxy.callMethod$2("get", [F.toJS(keys), completer.get$callback()]);
      return completer.get$future();
    },
    $set$1: function(items) {
      var completer;
      H.assertSubtype(items, "$isMap", [P.String, null], "$asMap");
      completer = F.ChromeCompleter$noArgs(null);
      this.jsProxy.callMethod$2("set", [F.toJS(items), completer.get$callback()]);
      return completer.get$future();
    }
  };
  O.ChromeSyncFileSystem.prototype = {
    get$_syncFileSystem: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "syncFileSystem"), "$isJsObject");
    },
    ChromeSyncFileSystem$_$0: function() {
      var getApi = new O.ChromeSyncFileSystem$__closure(this);
      this.set$_onServiceStatusChanged(F.ChromeStreamController$oneArg(getApi, "onServiceStatusChanged", O.sync_file_system___createServiceInfo$closure(), O.ServiceInfo));
      this.set$_onFileStatusChanged(F.ChromeStreamController$oneArg(getApi, "onFileStatusChanged", O.sync_file_system___createFileInfo$closure(), O.FileInfo));
    },
    requestFileSystem$0: function(_) {
      var completer;
      if (this.get$_syncFileSystem() == null)
        this._sync_file_system$_throwNotAvailable$0();
      completer = F.ChromeCompleter$oneArg(O.sync_file_system___createDOMFileSystem$closure(), W.FileSystem);
      this.get$_syncFileSystem().callMethod$2("requestFileSystem", [completer.get$callback()]);
      return completer.get$future();
    },
    _sync_file_system$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.syncFileSystem' is not available"));
    },
    set$_onServiceStatusChanged: function(_onServiceStatusChanged) {
      H.assertSubtype(_onServiceStatusChanged, "$isChromeStreamController", [O.ServiceInfo], "$asChromeStreamController");
    },
    set$_onFileStatusChanged: function(_onFileStatusChanged) {
      H.assertSubtype(_onFileStatusChanged, "$isChromeStreamController", [O.FileInfo], "$asChromeStreamController");
    }
  };
  O.ChromeSyncFileSystem$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_syncFileSystem();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  O.SyncAction.prototype = {};
  O.ServiceStatus.prototype = {};
  O.FileStatus.prototype = {};
  O.SyncDirection.prototype = {};
  O.ConflictResolutionPolicy.prototype = {};
  O.FileInfo.prototype = {};
  O.FileStatusInfo.prototype = {};
  O.StorageInfo.prototype = {};
  O.ServiceInfo.prototype = {};
  Q.ChromeSystem.prototype = {
    get$cpu: function() {
      return this.cpu;
    },
    get$memory: function() {
      return this.memory;
    }
  };
  Q.ChromeSystemCpu.prototype = {
    get$_system_cpu: function() {
      return H.interceptedTypeCheck(J.$index$asx(J.$index$asx($.$get$chrome(), "system"), "cpu"), "$isJsObject");
    },
    getInfo$0: function() {
      if (this.get$_system_cpu() == null)
        this._system$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(Q.system___createCpuInfo$closure(), Q.CpuInfo);
      this.get$_system_cpu().callMethod$2("getInfo", [completer.get$callback()]);
      return completer.get$future();
    },
    _system$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.system.cpu' is not available"));
    }
  };
  Q.CpuTime.prototype = {};
  Q.ProcessorInfo.prototype = {};
  Q.CpuInfo.prototype = {
    get$numOfProcessors: function() {
      return H.intTypeCheck(J.$index$asx(this.jsProxy, "numOfProcessors"));
    },
    get$archName: function() {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "archName"));
    }
  };
  Q.ChromeSystemDisplay.prototype = {
    get$_system_display: function() {
      return H.interceptedTypeCheck(J.$index$asx(J.$index$asx($.$get$chrome(), "system"), "display"), "$isJsObject");
    },
    ChromeSystemDisplay$_$0: function() {
      F.ChromeStreamController$noArgs(new Q.ChromeSystemDisplay$__closure(this), "onDisplayChanged", null);
    }
  };
  Q.ChromeSystemDisplay$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_system_display();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  Q.LayoutPosition.prototype = {};
  Q.MirrorMode.prototype = {};
  Q.Insets.prototype = {};
  Q.Point1.prototype = {};
  Q.TouchCalibrationPair.prototype = {};
  Q.TouchCalibrationPairQuad.prototype = {};
  Q.DisplayMode.prototype = {};
  Q.DisplayLayout.prototype = {};
  Q.DisplayUnitInfo.prototype = {};
  Q.DisplayProperties.prototype = {};
  Q.GetInfoFlags.prototype = {};
  Q.MirrorModeInfo.prototype = {};
  Q.ChromeSystemMemory.prototype = {
    get$_system_memory: function() {
      return H.interceptedTypeCheck(J.$index$asx(J.$index$asx($.$get$chrome(), "system"), "memory"), "$isJsObject");
    },
    getInfo$0: function() {
      if (this.get$_system_memory() == null)
        this._system$_throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(Q.system___createMemoryInfo$closure(), Q.MemoryInfo);
      this.get$_system_memory().callMethod$2("getInfo", [completer.get$callback()]);
      return completer.get$future();
    },
    _system$_throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.system.memory' is not available"));
    }
  };
  Q.MemoryInfo.prototype = {
    get$capacity: function() {
      return H.numTypeCheck(J.$index$asx(this.jsProxy, "capacity"));
    }
  };
  Q.ChromeSystemNetwork.prototype = {};
  Q.NetworkInterface0.prototype = {};
  Q.ChromeSystemStorage.prototype = {
    get$_system_storage: function() {
      return H.interceptedTypeCheck(J.$index$asx(J.$index$asx($.$get$chrome(), "system"), "storage"), "$isJsObject");
    },
    ChromeSystemStorage$_$0: function() {
      var getApi = new Q.ChromeSystemStorage$__closure(this);
      this.set$_onAttached(F.ChromeStreamController$oneArg(getApi, "onAttached", Q.system___createStorageUnitInfo$closure(), Q.StorageUnitInfo));
      this.set$_onDetached(F.ChromeStreamController$oneArg(getApi, "onDetached", F.common__selfConverter$closure(), P.String));
    },
    set$_onAttached: function(_onAttached) {
      H.assertSubtype(_onAttached, "$isChromeStreamController", [Q.StorageUnitInfo], "$asChromeStreamController");
    },
    set$_onDetached: function(_onDetached) {
      H.assertSubtype(_onDetached, "$isChromeStreamController", [P.String], "$asChromeStreamController");
    }
  };
  Q.ChromeSystemStorage$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_system_storage();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  Q.StorageUnitType.prototype = {};
  Q.EjectDeviceResultCode.prototype = {};
  Q.StorageUnitInfo.prototype = {};
  Q.StorageAvailableCapacityInfo.prototype = {};
  G.ChromeTabs.prototype = {};
  G.OnUpdatedEvent.prototype = {};
  G.TabsOnMovedEvent.prototype = {};
  G.OnSelectionChangedEvent.prototype = {};
  G.OnActiveChangedEvent.prototype = {};
  G.OnDetachedEvent.prototype = {};
  G.OnAttachedEvent.prototype = {};
  G.TabsOnRemovedEvent.prototype = {};
  G.OnReplacedEvent.prototype = {};
  G.MutedInfoReason.prototype = {};
  G.ZoomSettingsMode.prototype = {};
  G.ZoomSettingsScope.prototype = {};
  G.TabStatus.prototype = {};
  G.TabsWindowType.prototype = {};
  G.MutedInfo.prototype = {};
  G.Tab.prototype = {};
  G.ZoomSettings.prototype = {};
  G.TabsConnectParams.prototype = {};
  G.TabsSendMessageParams.prototype = {};
  G.TabsCreateParams.prototype = {};
  G.TabsQueryParams.prototype = {};
  G.TabsHighlightParams.prototype = {};
  G.TabsUpdateParams.prototype = {};
  G.TabsMoveParams.prototype = {};
  G.TabsReloadParams.prototype = {};
  G.ChromeTts.prototype = {
    get$_tts: function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$chrome(), "tts"), "$isJsObject");
    },
    ChromeTts$_$0: function() {
      this.set$_onEvent(F.ChromeStreamController$oneArg(new G.ChromeTts$__closure(this), "onEvent", G.tts___createTtsEvent$closure(), G.TtsEvent));
    },
    speak$1: function(utterance) {
      var completer;
      H.stringTypeCheck(utterance);
      if (this.get$_tts() == null)
        this._throwNotAvailable$0();
      completer = F.ChromeCompleter$noArgs(null);
      this.get$_tts().callMethod$2("speak", [utterance, F.toJS(null), completer.get$callback()]);
      return completer.get$future();
    },
    getVoices$0: function() {
      if (this.get$_tts() == null)
        this._throwNotAvailable$0();
      var completer = F.ChromeCompleter$oneArg(new G.ChromeTts_getVoices_closure(), [P.List, G.TtsVoice]);
      this.get$_tts().callMethod$2("getVoices", [completer.get$callback()]);
      return completer.get$future();
    },
    _throwNotAvailable$0: function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.tts' is not available"));
    },
    set$_onEvent: function(_onEvent) {
      H.assertSubtype(_onEvent, "$isChromeStreamController", [G.TtsEvent], "$asChromeStreamController");
    }
  };
  G.ChromeTts$__closure.prototype = {
    call$0: function() {
      return this.$this.get$_tts();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  G.ChromeTts_getVoices_closure.prototype = {
    call$1: function(e) {
      return F.toList(H.interceptedTypeCheck(e, "$isJsObject"), G.tts___createTtsVoice$closure());
    },
    $signature: 10
  };
  G.EventType.prototype = {};
  G.VoiceGender.prototype = {};
  G.TtsEvent.prototype = {};
  G.TtsVoice.prototype = {
    get$voiceName: function() {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "voiceName"));
    },
    get$lang: function(_) {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "lang"));
    }
  };
  G.TtsSpeakParams.prototype = {};
  Z.ChromeTypes.prototype = {};
  Z.ChromeSettingScope.prototype = {};
  Z.TypesLevelOfControl.prototype = {};
  Z.ChromeSetting.prototype = {};
  Z.TypesGetParams.prototype = {};
  Z.TypesSetParams.prototype = {};
  Z.TypesClearParams.prototype = {};
  S.ChromeUsb.prototype = {};
  S.Direction.prototype = {};
  S.Recipient.prototype = {};
  S.RequestType.prototype = {};
  S.TransferType.prototype = {};
  S.SynchronizationType.prototype = {};
  S.UsageType.prototype = {};
  S.UsbDevice.prototype = {};
  S.ConnectionHandle.prototype = {};
  S.EndpointDescriptor.prototype = {};
  S.InterfaceDescriptor.prototype = {};
  S.ConfigDescriptor.prototype = {};
  S.ControlTransferInfo.prototype = {};
  S.GenericTransferInfo.prototype = {};
  S.IsochronousTransferInfo.prototype = {};
  S.TransferResultInfo.prototype = {};
  S.UsbDeviceFilter.prototype = {};
  S.EnumerateDevicesOptions.prototype = {};
  S.EnumerateDevicesAndRequestAccessOptions.prototype = {};
  S.UsbDevicePromptOptions.prototype = {};
  B.ChromeVpnProvider.prototype = {};
  B.OnPlatformMessageEvent.prototype = {};
  B.OnConfigCreatedEvent.prototype = {};
  B.OnUIEventEvent.prototype = {};
  B.PlatformMessage.prototype = {};
  B.VpnConnectionState.prototype = {};
  B.UIEvent0.prototype = {};
  B.Parameters.prototype = {};
  D.ChromeWallpaper.prototype = {};
  D.WallpaperLayout.prototype = {};
  D.WallpaperSetWallpaperParams.prototype = {};
  U.ChromeWindows.prototype = {};
  U.WindowWindowType.prototype = {};
  U.WindowState.prototype = {};
  U.CreateType.prototype = {};
  U.Window0.prototype = {};
  U.WindowsGetParams.prototype = {};
  U.WindowsGetCurrentParams.prototype = {};
  U.WindowsGetLastFocusedParams.prototype = {};
  U.WindowsGetAllParams.prototype = {};
  U.WindowsCreateParams.prototype = {};
  U.WindowsUpdateParams.prototype = {};
  F.ChromeCompleter.prototype = {
    ChromeCompleter$noArgs$0: function($T) {
      this._callback = new F.ChromeCompleter$noArgs_closure(this);
    },
    ChromeCompleter$oneArg$1: function(transformer, $T) {
      this._callback = new F.ChromeCompleter$oneArg_closure(this, transformer, $T);
    },
    ChromeCompleter$twoArgs$1: function(transformer, $T) {
      this._callback = new F.ChromeCompleter$twoArgs_closure(this, transformer, $T);
    },
    get$future: function() {
      return this._completer.get$future();
    },
    get$callback: function() {
      return this._callback;
    },
    get$_completer: function() {
      return this._completer;
    }
  };
  F.ChromeCompleter$noArgs_closure.prototype = {
    call$1: function(_) {
      var le = F.lastError(),
        t1 = this.$this;
      if (le != null)
        t1.get$_completer().completeError$1(le);
      else
        J.complete$0$z(t1.get$_completer());
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 12
  };
  F.ChromeCompleter$oneArg_closure.prototype = {
    call$1: function(arg1) {
      var t1, _this = this,
        le = F.lastError();
      if (le != null)
        _this.$this.get$_completer().completeError$1(le);
      else {
        t1 = _this.transformer;
        if (t1 != null)
          arg1 = t1.call$1(arg1);
        J.complete$1$z(_this.$this.get$_completer(), H.futureOrCheck(arg1, {futureOr: 1, type: _this.T}));
      }
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 12
  };
  F.ChromeCompleter$twoArgs_closure.prototype = {
    call$2: function(arg1, arg2) {
      var le = F.lastError(),
        t1 = this.$this;
      if (le != null)
        t1.get$_completer().completeError$1(le);
      else
        J.complete$1$z(t1.get$_completer(), H.futureOrCheck(this.transformer.call$2(arg1, arg2), {futureOr: 1, type: this.T}));
    },
    call$1: function(arg1) {
      return this.call$2(arg1, null);
    },
    call$0: function() {
      return this.call$2(null, null);
    },
    "call*": "call$2",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null, null];
    },
    $signature: 26
  };
  F.ChromeStreamController.prototype = {
    get$_api: function() {
      return H.interceptedTypeCheck(this._apiProvider.call$0(), "$isJsObject");
    },
    ChromeStreamController$noArgs$2: function(_apiProvider, _eventName, $T) {
      var _this = this;
      _this.set$_controller(P.StreamController_StreamController$broadcast(_this.get$_removeHandler(), _this.get$_ensureHandlerAdded(), false, $T));
      _this._listener = new F.ChromeStreamController$noArgs_closure(_this);
    },
    ChromeStreamController$oneArg$4: function(_apiProvider, _eventName, transformer, returnVal, $T) {
      var _this = this;
      _this.set$_controller(P.StreamController_StreamController$broadcast(_this.get$_removeHandler(), _this.get$_ensureHandlerAdded(), false, $T));
      _this._listener = new F.ChromeStreamController$oneArg_closure(_this, transformer, returnVal, $T);
    },
    ChromeStreamController$twoArgs$4: function(_apiProvider, _eventName, transformer, returnVal, $T) {
      var _this = this;
      _this.set$_controller(P.StreamController_StreamController$broadcast(_this.get$_removeHandler(), _this.get$_ensureHandlerAdded(), false, $T));
      _this._listener = new F.ChromeStreamController$twoArgs_closure(_this, transformer, returnVal, $T);
    },
    ChromeStreamController$threeArgs$4: function(_apiProvider, _eventName, transformer, returnVal, $T) {
      var _this = this;
      _this.set$_controller(P.StreamController_StreamController$broadcast(_this.get$_removeHandler(), _this.get$_ensureHandlerAdded(), false, $T));
      _this._listener = new F.ChromeStreamController$threeArgs_closure(_this, transformer, returnVal, $T);
    },
    get$stream: function(_) {
      return J.get$stream$z(this._controller);
    },
    _ensureHandlerAdded$0: function() {
      var jsEvent, $event, _this = this;
      if (!H.boolConversionCheck(_this._handlerAdded)) {
        jsEvent = J.$index$asx(_this.get$_api(), _this._eventName);
        $event = jsEvent instanceof P.JsObject ? jsEvent : P.JsObject_JsObject$fromBrowserObject(jsEvent);
        $event.callMethod$2("addListener", [_this._listener]);
        _this._handlerAdded = true;
      }
    },
    _removeHandler$0: function() {
      var jsEvent, $event, _this = this;
      if (H.boolConversionCheck(_this._handlerAdded)) {
        jsEvent = J.$index$asx(_this.get$_api(), _this._eventName);
        $event = jsEvent instanceof P.JsObject ? jsEvent : P.JsObject_JsObject$fromBrowserObject(jsEvent);
        $event.callMethod$2("removeListener", [_this._listener]);
        _this._handlerAdded = false;
      }
    },
    set$_controller: function(_controller) {
      this._controller = H.assertSubtype(_controller, "$isStreamController", this.$ti, "$asStreamController");
    },
    get$_controller: function() {
      return this._controller;
    }
  };
  F.ChromeStreamController$noArgs_closure.prototype = {
    call$0: function() {
      J.add$1$ax(this.$this.get$_controller(), null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  F.ChromeStreamController$oneArg_closure.prototype = {
    call$1: function(arg1) {
      var _this = this;
      J.add$1$ax(_this.$this.get$_controller(), H.assertSubtypeOfRuntimeType(_this.transformer.call$1(arg1), _this.T));
      return _this.returnVal;
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 27
  };
  F.ChromeStreamController$twoArgs_closure.prototype = {
    call$2: function(arg1, arg2) {
      var _this = this;
      J.add$1$ax(_this.$this.get$_controller(), H.assertSubtypeOfRuntimeType(_this.transformer.call$2(arg1, arg2), _this.T));
      return _this.returnVal;
    },
    call$1: function(arg1) {
      return this.call$2(arg1, null);
    },
    call$0: function() {
      return this.call$2(null, null);
    },
    "call*": "call$2",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null, null];
    },
    $signature: 28
  };
  F.ChromeStreamController$threeArgs_closure.prototype = {
    call$3: function(arg1, arg2, arg3) {
      var _this = this;
      J.add$1$ax(_this.$this.get$_controller(), H.assertSubtypeOfRuntimeType(_this.transformer.call$3(arg1, arg2, arg3), _this.T));
      return _this.returnVal;
    },
    call$1: function(arg1) {
      return this.call$3(arg1, null, null);
    },
    call$0: function() {
      return this.call$3(null, null, null);
    },
    call$2: function(arg1, arg2) {
      return this.call$3(arg1, arg2, null);
    },
    "call*": "call$3",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null, null, null];
    },
    $signature: 29
  };
  Z.ChromeObject.prototype = {
    toString$0: function(_) {
      return J.toString$0$(this.jsProxy);
    },
    get$jsProxy: function() {
      return this.jsProxy;
    }
  };
  Z.ChromeApi.prototype = {};
  Z.ChromeEnum.prototype = {
    toString$0: function(_) {
      return this.value;
    }
  };
  Z.Bounds.prototype = {};
  Z.ArrayBuffer.prototype = {
    getBytes$0: function() {
      var int8View, result, i,
        t1 = this.jsProxy;
      if (!!J.getInterceptor$(t1).$isUint8List)
        return t1;
      else {
        int8View = P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Uint8Array"), "$isJsFunction"), [t1]);
        t1 = H.intTypeCheck(int8View.$index(0, "length"));
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = new Array(t1);
        t1.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t1, [P.int]);
        for (t1 = result.length, i = 0; i < t1; ++i)
          C.JSArray_methods.$indexSet(result, i, H.intTypeCheck(int8View.$index(0, i)));
        return result;
      }
    }
  };
  Z.Date.prototype = {};
  Z.DeviceCallback.prototype = {};
  Z.SuggestFilenameCallback.prototype = {};
  Z.ProviderSuccessCallback.prototype = {};
  Z.ProviderErrorCallback.prototype = {};
  Z.MetadataCallback.prototype = {};
  Z.EntriesCallback.prototype = {};
  Z.PrintersCallback.prototype = {};
  Z.FileDataCallback.prototype = {};
  Z.CapabilitiesCallback.prototype = {};
  Z.PrintCallback.prototype = {};
  Z.PrinterInfoCallback.prototype = {};
  Z.CertificatesCallback.prototype = {};
  Z.ActionsCallback.prototype = {};
  Z.SignCallback.prototype = {};
  Z.SubtleCrypto.prototype = {};
  Z.RequestPinCallback.prototype = {};
  Z.StopPinRequestCallback.prototype = {};
  Z.LocalMediaStream.prototype = {};
  M.CrFileSystem.prototype = {
    get$name: function(_) {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "name"));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof M.CrFileSystem && H.boolConversionCheck(J.$eq$(other.jsProxy, this.jsProxy));
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.jsProxy);
    },
    toString$0: function(_) {
      return this.get$name(this);
    },
    $isInterceptor: 1,
    $isFileSystem: 1
  };
  M.CrMetadata.prototype = {
    get$size: function(_) {
      return H.intTypeCheck(J.$index$asx(this.jsProxy, "size"));
    },
    get$modificationTime: function(_) {
      var modTime = J.$index$asx(this.jsProxy, "modificationTime");
      if (modTime instanceof P.DateTime)
        return modTime;
      return P.DateTime$fromMillisecondsSinceEpoch(H.intTypeCheck(P.JsObject_JsObject$fromBrowserObject(modTime).callMethod$1("getTime")));
    },
    $isInterceptor: 1,
    $isMetadata: 1
  };
  M.CrEntry.prototype = {
    get$isDirectory: function(_) {
      return H.boolTypeCheck(J.$index$asx(this.jsProxy, "isDirectory"));
    },
    get$isFile: function(_) {
      return H.boolTypeCheck(J.$index$asx(this.jsProxy, "isFile"));
    },
    get$fullPath: function(_) {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "fullPath"));
    },
    get$name: function(_) {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "name"));
    },
    get$filesystem: function(_) {
      return M.CrFileSystem_CrFileSystem$fromProxy(H.interceptedTypeCheck(J.$index$asx(this.jsProxy, "filesystem"), "$isJsObject"));
    },
    moveTo$2$name: function(_, $parent, $name) {
      var completer;
      H.interceptedTypeCheck($parent, "$isDirectoryEntry");
      H.stringTypeCheck($name);
      completer = M._ChromeCompleterWithError$oneArg(new M.CrEntry_moveTo_closure(), W.Entry);
      this.jsProxy.callMethod$2("moveTo", [$parent.jsProxy, $name, completer.get$callback(), completer.get$errorCallback()]);
      return completer.get$future();
    },
    remove$0: function(_) {
      var completer = M._ChromeCompleterWithError$noArgs(null);
      this.jsProxy.callMethod$2("remove", H.setRuntimeTypeInfo([completer.get$callback(), completer.get$errorCallback()], [P.Function]));
      return completer.get$future();
    },
    getMetadata$0: function(_) {
      var completer = M._ChromeCompleterWithError$oneArg(new M.CrEntry_getMetadata_closure(), W.Metadata);
      this.jsProxy.callMethod$2("getMetadata", H.setRuntimeTypeInfo([completer.get$callback(), completer.get$errorCallback()], [P.Function]));
      return completer.get$future();
    },
    getParent$0: function(_) {
      var completer = M._ChromeCompleterWithError$oneArg(new M.CrEntry_getParent_closure(), W.Entry);
      this.jsProxy.callMethod$2("getParent", H.setRuntimeTypeInfo([completer.get$callback(), completer.get$errorCallback()], [P.Function]));
      return completer.get$future();
    },
    toString$0: function(_) {
      return this.get$name(this);
    },
    $isInterceptor: 1,
    $isEntry: 1
  };
  M.CrEntry_moveTo_closure.prototype = {
    call$1: function(obj) {
      return M.CrEntry_CrEntry$fromProxy(H.interceptedTypeCheck(obj, "$isJsObject"));
    },
    $signature: 8
  };
  M.CrEntry_getMetadata_closure.prototype = {
    call$1: function(obj) {
      return !!J.getInterceptor$(obj).$isMetadata ? obj : M.CrMetadata$fromProxy(H.interceptedTypeCheck(obj, "$isJsObject"));
    },
    $signature: 31
  };
  M.CrEntry_getParent_closure.prototype = {
    call$1: function(obj) {
      return M.CrDirectoryEntry$fromProxy(H.interceptedTypeCheck(obj, "$isJsObject"));
    },
    $signature: 32
  };
  M.CrDirectoryEntry.prototype = {
    createFile$1: function(_, path) {
      var options, completer;
      H.stringTypeCheck(path);
      options = P.JsObject_JsObject$jsify(P.LinkedHashMap_LinkedHashMap$_literal(["create", true, "exclusive", false], P.String, P.bool));
      completer = M._ChromeCompleterWithError$oneArg(new M.CrDirectoryEntry_createFile_closure(), W.Entry);
      this.jsProxy.callMethod$2("getFile", H.setRuntimeTypeInfo([path, options, completer.get$callback(), completer.get$errorCallback()], [P.Object]));
      return completer.get$future();
    },
    getFile$1: function(_, path) {
      var options, completer;
      H.stringTypeCheck(path);
      options = P.JsObject_JsObject$jsify(P.LinkedHashMap_LinkedHashMap$_literal(["create", false], P.String, P.bool));
      completer = M._ChromeCompleterWithError$oneArg(new M.CrDirectoryEntry_getFile_closure(), W.Entry);
      this.jsProxy.callMethod$2("getFile", H.setRuntimeTypeInfo([path, options, completer.get$callback(), completer.get$errorCallback()], [P.Object]));
      return completer.get$future();
    },
    createReader$0: function(_) {
      return M.CrDirectoryReader$fromProxy(H.interceptedTypeCheck(this.jsProxy.callMethod$1("createReader"), "$isJsObject"));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof M.CrDirectoryEntry && H.boolConversionCheck(J.$eq$(other.jsProxy, this.jsProxy));
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.jsProxy);
    },
    toString$0: function(_) {
      return H.S(this.get$name(this)) + "/";
    },
    $isDirectoryEntry: 1
  };
  M.CrDirectoryEntry_createFile_closure.prototype = {
    call$1: function(obj) {
      return M.CrEntry_CrEntry$fromProxy(H.interceptedTypeCheck(obj, "$isJsObject"));
    },
    $signature: 8
  };
  M.CrDirectoryEntry_getFile_closure.prototype = {
    call$1: function(obj) {
      return M.CrEntry_CrEntry$fromProxy(H.interceptedTypeCheck(obj, "$isJsObject"));
    },
    $signature: 8
  };
  M.CrDirectoryReader.prototype = {
    readEntries$0: function(_) {
      var errorCallback, entriesCallback, t1 = {},
        completer = P.Completer_Completer([P.List, W.Entry]),
        entries = H.setRuntimeTypeInfo([], [W.Entry]);
      t1.entriesCallback = null;
      errorCallback = new M.CrDirectoryReader_readEntries_closure(completer);
      entriesCallback = new M.CrDirectoryReader_readEntries_closure0(t1, this, completer, entries, errorCallback);
      t1.entriesCallback = entriesCallback;
      this.jsProxy.callMethod$2("readEntries", H.setRuntimeTypeInfo([entriesCallback, errorCallback], [P.Function]));
      return completer.future;
    },
    $isInterceptor: 1,
    $isDirectoryReader: 1
  };
  M.CrDirectoryReader_readEntries_closure.prototype = {
    call$1: function(domError) {
      this.completer.completeError$1(M._translateError(domError));
    },
    $signature: 1
  };
  M.CrDirectoryReader_readEntries_closure0.prototype = {
    call$1: function(result) {
      var _this = this,
        t1 = _this.entries;
      if (H.boolConversionCheck(J.$eq$(J.$index$asx(result, "length"), 0)))
        J.complete$1$z(_this.completer, t1);
      else {
        J.addAll$1$ax(t1, J.map$1$1$ax(F.toList(H.interceptedTypeCheck(result, "$isJsObject"), null), new M.CrDirectoryReader_readEntries__closure(), W.Entry));
        _this.$this.get$jsProxy().callMethod$2("readEntries", H.setRuntimeTypeInfo([_this._box_0.entriesCallback, _this.errorCallback], [P.Function]));
      }
    },
    $signature: 1
  };
  M.CrDirectoryReader_readEntries__closure.prototype = {
    call$1: function(e) {
      return M.CrEntry_CrEntry$fromProxy(H.interceptedTypeCheck(e, "$isJsObject"));
    },
    $signature: 8
  };
  M.CrFileEntry.prototype = {
    file$0: function(_) {
      var completer = M._ChromeCompleterWithError$oneArg(F.common__selfConverter$closure(), W.File);
      this.jsProxy.callMethod$2("file", H.setRuntimeTypeInfo([completer.get$callback(), completer.get$errorCallback()], [P.Function]));
      return completer.get$future();
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof M.CrDirectoryEntry && H.boolConversionCheck(J.$eq$(other.jsProxy, this.jsProxy));
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.jsProxy);
    },
    $isFileEntry: 1
  };
  M.ChromeFileEntry.prototype = {
    readText$0: function() {
      return this.file$0(0).then$1$1(new M.ChromeFileEntry_readText_closure(), P.String);
    },
    readBytes$0: function() {
      return this.file$0(0).then$1$1(new M.ChromeFileEntry_readBytes_closure(), Z.ArrayBuffer);
    },
    writeText$1: function(text) {
      H.stringTypeCheck(text);
      return this._createWriter$0(0).then$1$1(new M.ChromeFileEntry_writeText_closure(this, text), null);
    },
    writeBytes$1: function(data) {
      H.interceptedTypeCheck(data, "$isArrayBuffer");
      return this._createWriter$0(0).then$1$1(new M.ChromeFileEntry_writeBytes_closure(this, data), null);
    },
    _createWriter$0: function(_) {
      var completer = M._ChromeCompleterWithError$oneArg(new M.ChromeFileEntry__createWriter_closure(), Z.ChromeObject);
      this.jsProxy.callMethod$2("createWriter", H.setRuntimeTypeInfo([completer.get$callback(), completer.get$errorCallback()], [P.Function]));
      return completer.get$future();
    }
  };
  M.ChromeFileEntry_readText_closure.prototype = {
    call$1: function(file) {
      var completer, reader;
      H.interceptedTypeCheck(file, "$isFile");
      completer = P.Completer_Completer(P.String);
      reader = P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "FileReader"), "$isJsFunction"), null);
      reader.$indexSet(0, "onload", new M.ChromeFileEntry_readText__closure(completer, reader));
      reader.$indexSet(0, "onerror", new M.ChromeFileEntry_readText__closure0(completer));
      reader.callMethod$2("readAsText", [file]);
      return completer.future;
    },
    $signature: 33
  };
  M.ChromeFileEntry_readText__closure.prototype = {
    call$1: function($event) {
      J.complete$1$z(this.completer, H.futureOrCheck(J.$index$asx(this.reader, "result"), {futureOr: 1, type: P.String}));
    },
    $signature: 1
  };
  M.ChromeFileEntry_readText__closure0.prototype = {
    call$1: function(domError) {
      this.completer.completeError$1(M._translateError(domError));
    },
    $signature: 1
  };
  M.ChromeFileEntry_readBytes_closure.prototype = {
    call$1: function(file) {
      var completer, reader;
      H.interceptedTypeCheck(file, "$isFile");
      completer = P.Completer_Completer(Z.ArrayBuffer);
      reader = P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "FileReader"), "$isJsFunction"), null);
      reader.$indexSet(0, "onload", new M.ChromeFileEntry_readBytes__closure(completer, reader));
      reader.$indexSet(0, "onerror", new M.ChromeFileEntry_readBytes__closure0(completer));
      reader.callMethod$2("readAsArrayBuffer", [file]);
      return completer.future;
    },
    $signature: 34
  };
  M.ChromeFileEntry_readBytes__closure.prototype = {
    call$1: function($event) {
      J.complete$1$z(this.completer, Z.ArrayBuffer_ArrayBuffer$fromProxy(J.$index$asx(this.reader, "result")));
    },
    $signature: 1
  };
  M.ChromeFileEntry_readBytes__closure0.prototype = {
    call$1: function(domError) {
      this.completer.completeError$1(M._translateError(domError));
    },
    $signature: 1
  };
  M.ChromeFileEntry_writeText_closure.prototype = {
    call$1: function(_writer) {
      var writer = H.interceptedTypeCheck(H.interceptedTypeCheck(_writer, "$isChromeObject").jsProxy, "$isJsObject"),
        completer = P.Completer_Completer(W.FileEntry),
        t1 = P.String,
        blob = P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Blob"), "$isJsFunction"), [P.JsObject_JsObject$jsify(H.setRuntimeTypeInfo([this.text], [t1]))]);
      writer.$indexSet(0, "onwrite", new M.ChromeFileEntry_writeText__closure(this.$this, writer, completer));
      writer.$indexSet(0, "onerror", new M.ChromeFileEntry_writeText__closure0(completer));
      writer.callMethod$2("write", [blob, P.JsObject_JsObject$jsify(P.LinkedHashMap_LinkedHashMap$_literal(["type", "text/plain"], t1, t1))]);
      return completer.future;
    },
    $signature: 17
  };
  M.ChromeFileEntry_writeText__closure.prototype = {
    call$1: function($event) {
      var t1 = this.writer,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, "onwrite", null);
      t1.callMethod$2("truncate", [t2.$index(t1, "position")]);
      J.complete$1$z(this.completer, this.$this);
    },
    $signature: 1
  };
  M.ChromeFileEntry_writeText__closure0.prototype = {
    call$1: function($event) {
      this.completer.completeError$1(M._translateError($event));
    },
    $signature: 1
  };
  M.ChromeFileEntry_writeBytes_closure.prototype = {
    call$1: function(_writer) {
      var blob,
        writer = H.interceptedTypeCheck(H.interceptedTypeCheck(_writer, "$isChromeObject").jsProxy, "$isJsObject"),
        completer = P.Completer_Completer(W.FileEntry),
        args = P.JsObject_JsObject$jsify(H.setRuntimeTypeInfo([null], [P.Null]));
      args.$indexSet(0, 0, this.data.get$jsProxy());
      blob = P.JsObject_JsObject(H.interceptedTypeCheck(J.$index$asx($.$get$context(), "Blob"), "$isJsFunction"), [args]);
      writer.$indexSet(0, "onwrite", new M.ChromeFileEntry_writeBytes__closure(this.$this, writer, completer));
      writer.$indexSet(0, "onerror", new M.ChromeFileEntry_writeBytes__closure0(completer));
      writer.callMethod$2("write", [blob]);
      return completer.future;
    },
    $signature: 17
  };
  M.ChromeFileEntry_writeBytes__closure.prototype = {
    call$1: function($event) {
      var t1 = this.writer,
        t2 = J.getInterceptor$ax(t1);
      t2.$indexSet(t1, "onwrite", null);
      t1.callMethod$2("truncate", [t2.$index(t1, "position")]);
      J.complete$1$z(this.completer, this.$this);
    },
    $signature: 1
  };
  M.ChromeFileEntry_writeBytes__closure0.prototype = {
    call$1: function($event) {
      this.completer.completeError$1(M._translateError($event));
    },
    $signature: 1
  };
  M.ChromeFileEntry__createWriter_closure.prototype = {
    call$1: function(obj) {
      return Z.ChromeObject$fromProxy(obj);
    },
    $signature: 36
  };
  M.CrBlob.prototype = {$isInterceptor: 1, $isBlob: 1};
  M._ChromeCompleterWithError.prototype = {
    _ChromeCompleterWithError$noArgs$0: function($T) {
      this._files$_callback = new M._ChromeCompleterWithError$noArgs_closure(this);
    },
    _ChromeCompleterWithError$oneArg$1: function(transformer, $T) {
      this._files$_callback = new M._ChromeCompleterWithError$oneArg_closure(this, transformer, $T);
    },
    get$future: function() {
      return this._files$_completer.get$future();
    },
    get$callback: function() {
      return this._files$_callback;
    },
    errorCallback$1: function(domError) {
      this._files$_completer.completeError$1(M._translateError(domError));
    },
    get$_files$_completer: function() {
      return this._files$_completer;
    }
  };
  M._ChromeCompleterWithError$noArgs_closure.prototype = {
    call$0: function() {
      J.complete$0$z(this.$this.get$_files$_completer());
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 3
  };
  M._ChromeCompleterWithError$oneArg_closure.prototype = {
    call$1: function(arg1) {
      var t1 = this.transformer;
      if (t1 != null)
        arg1 = t1.call$1(arg1);
      J.complete$1$z(this.$this.get$_files$_completer(), H.futureOrCheck(arg1, {futureOr: 1, type: this.T}));
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 12
  };
  M.CrFileError.prototype = {
    get$message: function(_) {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "message"));
    },
    get$name: function(_) {
      return H.stringTypeCheck(J.$index$asx(this.jsProxy, "name"));
    },
    toString$0: function(_) {
      var _this = this;
      if (_this.get$message(_this) != null && H.boolConversionCheck(J.get$isNotEmpty$asx(_this.get$message(_this))))
        return H.S(_this.get$name(_this)) + ": " + H.S(_this.get$message(_this));
      else
        return _this.get$name(_this);
    },
    $isInterceptor: 1,
    $isDomException: 1
  };
  N.main_closure.prototype = {
    call$0: function() {
      return J.close$0$z(J.get$window$z($.$get$app()).current$0());
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  N.main_closure0.prototype = {
    call$0: function() {
      return J.get$window$z($.$get$app()).current$0().fullscreen$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  N.main_closure1.prototype = {
    call$0: function() {
      return $.$get$tts().speak$1("Hello World");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 38
  };
  N.main_closure2.prototype = {
    call$1: function(e) {
      N.notes("onStartup");
    },
    $signature: 1
  };
  N.main_closure3.prototype = {
    call$1: function(e) {
      N.notes("onAlarm: " + H.S(H.interceptedTypeCheck(e, "$isAlarm")));
    },
    $signature: 39
  };
  N.main_closure4.prototype = {
    call$1: function(_) {
      return P.print("window fullscreen");
    },
    $signature: 5
  };
  N.main_closure5.prototype = {
    call$1: function(_) {
      return P.print("window closed");
    },
    $signature: 5
  };
  N.main_closure6.prototype = {
    call$1: function(_) {
      return P.print("window maximized");
    },
    $signature: 5
  };
  N.main_closure7.prototype = {
    call$1: function(_) {
      return P.print("window minimized");
    },
    $signature: 5
  };
  N.main_closure8.prototype = {
    call$1: function(_) {
      return P.print("window restored");
    },
    $signature: 5
  };
  N.action_closure.prototype = {
    call$1: function(e) {
      H.interceptedTypeCheck(e, "$isMouseEvent");
      return this.callback.call$0();
    },
    $signature: 40
  };
  N.summaryFuture_closure.prototype = {
    call$1: function(result) {
      N.summary(H.S(result));
    },
    $signature: 1
  };
  N.summaryFuture_closure0.prototype = {
    call$1: function(e) {
      N.summary("error: " + H.S(e));
    },
    $signature: 1
  };
  N.handleI18NLanguages_closure.prototype = {
    call$1: function(list) {
      N.summary(J.join$1$ax(H.assertSubtype(list, "$isList", [R.LanguageCode], "$asList"), ", "));
    },
    $signature: 41
  };
  N.handleIdleQueryState_closure.prototype = {
    call$1: function(state) {
      N.summary(J.toString$0$(H.interceptedTypeCheck(state, "$isIdleState")));
    },
    $signature: 42
  };
  N.handlePermissionsGetAll_closure.prototype = {
    call$1: function(perms) {
      N.summary(J.toString$0$(H.interceptedTypeCheck(perms, "$isPermissions").get$permissions()));
    },
    $signature: 18
  };
  N.handlePermissionsOrigins_closure.prototype = {
    call$1: function(perms) {
      N.summary(J.toString$0$(H.interceptedTypeCheck(perms, "$isPermissions").get$origins()));
    },
    $signature: 18
  };
  N.handleGetVoices_closure.prototype = {
    call$1: function(voices) {
      N.summary(J.join$1$ax(J.map$1$1$ax(H.assertSubtype(voices, "$isList", [G.TtsVoice], "$asList"), new N.handleGetVoices__closure(), P.String), ", "));
    },
    $signature: 44
  };
  N.handleGetVoices__closure.prototype = {
    call$1: function(v) {
      H.interceptedTypeCheck(v, "$isTtsVoice");
      return H.S(v.get$voiceName()) + " " + H.S(v.get$lang(v));
    },
    $signature: 45
  };
  N.handleGetPlatformInfo_closure.prototype = {
    call$1: function(info) {
      N.summary(J.toString$0$(H.interceptedTypeCheck(info, "$isPlatformInfo")));
    },
    $signature: 46
  };
  N.handleGetPackageDirectoryEntry_closure.prototype = {
    call$1: function(dir) {
      N.summary(J.toString$0$(H.interceptedTypeCheck(dir, "$isDirectoryEntry")));
    },
    $signature: 7
  };
  N.handleRuntimeRequestUpdateCheck_closure.prototype = {
    call$1: function(result) {
      H.interceptedTypeCheck(result, "$isRequestUpdateCheckResult");
      N.summary(H.S(result) + ", status=" + H.S(result.status) + ", " + H.S(result.details));
    },
    $signature: 48
  };
  N.handleAudioGetInfo_closure.prototype = {
    call$1: function(info) {
      H.interceptedTypeCheck(info, "$isGetInfoResult");
      N.summary(H.S(info.outputInfo) + " " + H.S(info.inputInfo));
    },
    $signature: 49
  };
  N.handleAppWindowCreate_closure.prototype = {
    call$1: function($window) {
      H.interceptedTypeCheck($window, "$isAppWindow");
      $window.get$onBoundsChanged().listen$1(new N.handleAppWindowCreate__closure());
      $window.get$onClosed().listen$1(new N.handleAppWindowCreate__closure0());
    },
    $signature: 19
  };
  N.handleAppWindowCreate__closure.prototype = {
    call$1: function(_) {
      return P.print("window boundsChanged");
    },
    $signature: 5
  };
  N.handleAppWindowCreate__closure0.prototype = {
    call$1: function(_) {
      return P.print("window closed");
    },
    $signature: 5
  };
  N.handleAppWindowCreateOptions_closure.prototype = {
    call$1: function($window) {
      H.interceptedTypeCheck($window, "$isAppWindow").get$onClosed().listen$1(new N.handleAppWindowCreateOptions__closure());
    },
    $signature: 19
  };
  N.handleAppWindowCreateOptions__closure.prototype = {
    call$1: function(_) {
      return P.print("window closed");
    },
    $signature: 5
  };
  N.handleSystemCpu_closure.prototype = {
    call$1: function(info) {
      H.interceptedTypeCheck(info, "$isCpuInfo");
      N.summary(H.S(info.get$archName()) + ": " + H.S(info.get$numOfProcessors()) + " processors");
    },
    $signature: 51
  };
  N.handleSystemMemory_closure.prototype = {
    call$1: function(info) {
      N.summary(H.S(H.interceptedTypeCheck(info, "$isMemoryInfo").get$capacity()) + " bytes");
    },
    $signature: 52
  };
  N.handleStorageStore_closure.prototype = {
    call$1: function(_) {
      return $.$get$storage().get$local().$get$1(H.setRuntimeTypeInfo(["foo"], [P.String]));
    },
    $signature: 53
  };
  N.handleChooseEntry_closure.prototype = {
    call$1: function(result) {
      var t1, t2, t3;
      H.interceptedTypeCheck(result, "$isChooseEntryResult");
      t1 = "result: " + H.S(result) + ", ";
      t2 = result.entry;
      t3 = J.getInterceptor$z(t2);
      N.summary(t1 + H.S(t2) + ", name=" + H.S(t3.get$name(t2)) + ", fullPath=" + H.S(t3.get$fullPath(t2)));
      t3.getMetadata$0(t2).then$1$1(new N.handleChooseEntry__closure(), null);
    },
    $signature: 20
  };
  N.handleChooseEntry__closure.prototype = {
    call$1: function(meta) {
      H.interceptedTypeCheck(meta, "$isMetadata");
      P.print("file mod: " + H.S(meta.get$modificationTime(meta)) + ", file size: " + H.S(meta.get$size(meta)) + ",timezone=" + H.S(meta.get$modificationTime(meta).get$timeZoneName()));
    },
    $signature: 21
  };
  N.handleChooseEntryDir_closure.prototype = {
    call$1: function(result) {
      var t1, t2, t3;
      H.interceptedTypeCheck(result, "$isChooseEntryResult");
      t1 = "result: " + H.S(result) + ", ";
      t2 = result.entry;
      t3 = J.getInterceptor$z(t2);
      N.summary(t1 + H.S(t2) + ", name=" + H.S(t3.get$name(t2)) + ", fullPath=" + H.S(t3.get$fullPath(t2)));
    },
    $signature: 20
  };
  N.handleFileRead_closure.prototype = {
    call$1: function(result) {
      return H.interceptedTypeCheck(H.interceptedTypeCheck(result, "$isChooseEntryResult").entry, "$isChromeFileEntry").readText$0();
    },
    $signature: 56
  };
  N.handleFileReadBytes_closure.prototype = {
    call$1: function(result) {
      return H.interceptedTypeCheck(H.interceptedTypeCheck(result, "$isChooseEntryResult").entry, "$isChromeFileEntry").readBytes$0().then$1$1(new N.handleFileReadBytes__closure(), null);
    },
    $signature: 6
  };
  N.handleFileReadBytes__closure.prototype = {
    call$1: function(buf) {
      return "read " + H.S(J.get$length$asx(H.interceptedTypeCheck(buf, "$isArrayBuffer").getBytes$0())) + " bytes";
    },
    $signature: 58
  };
  N.handleDirInfo_closure.prototype = {
    call$1: function(dir) {
      var t1, t2;
      H.interceptedTypeCheck(dir, "$isDirectoryEntry");
      t1 = this.items;
      t2 = J.getInterceptor$ax(t1);
      t2.add$1(t1, "filesystem: " + H.S(dir.get$filesystem(dir)));
      t2.add$1(t1, "fullPath: " + H.S(dir.get$fullPath(dir)));
      t2.add$1(t1, "isDirectory: " + H.S(dir.get$isDirectory(dir)));
      t2.add$1(t1, "isFile: " + H.S(dir.get$isFile(dir)));
      t2.add$1(t1, "name: " + H.S(dir.get$name(dir)));
      N.summary(t2.join$1(t1, ", "));
    },
    $signature: 7
  };
  N.handleDirGetFile_closure.prototype = {
    call$1: function(dir) {
      H.interceptedTypeCheck(dir, "$isDirectoryEntry").getFile$1(0, "manifest.json").then$1$1(new N.handleDirGetFile__closure(), null);
    },
    $signature: 7
  };
  N.handleDirGetFile__closure.prototype = {
    call$1: function(entry) {
      N.summary("file: " + H.S(H.interceptedTypeCheck(entry, "$isEntry")));
    },
    $signature: 22
  };
  N.handleGetFileMetaData_closure.prototype = {
    call$1: function(dir) {
      H.interceptedTypeCheck(dir, "$isDirectoryEntry").getFile$1(0, "manifest.json").then$1$1(new N.handleGetFileMetaData__closure(), null);
    },
    $signature: 7
  };
  N.handleGetFileMetaData__closure.prototype = {
    call$1: function(entry) {
      H.interceptedTypeCheck(entry, "$isEntry").getMetadata$0(0).then$1$1(new N.handleGetFileMetaData___closure(), null);
    },
    $signature: 22
  };
  N.handleGetFileMetaData___closure.prototype = {
    call$1: function(meta) {
      H.interceptedTypeCheck(meta, "$isMetadata");
      N.summary("file mod: " + H.S(meta.get$modificationTime(meta)) + ", file size: " + H.S(meta.get$size(meta)) + ",timezone=" + H.S(meta.get$modificationTime(meta).get$timeZoneName()));
    },
    $signature: 21
  };
  N.handleDirListings_closure.prototype = {
    call$1: function(dir) {
      J.readEntries$0$z(H.interceptedTypeCheck(dir, "$isDirectoryEntry").createReader$0(0)).then$1$1(new N.handleDirListings__closure(), null);
    },
    $signature: 7
  };
  N.handleDirListings__closure.prototype = {
    call$1: function(entries) {
      N.summary(J.join$1$ax(H.assertSubtype(entries, "$isList", [W.Entry], "$asList"), ", "));
    },
    $signature: 60
  };
  N.handleFileCreate_closure.prototype = {
    call$1: function(result) {
      return H.interceptedTypeCheck(H.interceptedTypeCheck(result, "$isChooseEntryResult").entry, "$isDirectoryEntry").createFile$1(0, "myfoofile.txt").then$1$1(new N.handleFileCreate__closure(), null);
    },
    $signature: 6
  };
  N.handleFileCreate__closure.prototype = {
    call$1: function(fileEntry) {
      H.interceptedTypeCheck(fileEntry, "$isEntry");
      return "created " + H.S(fileEntry.get$name(fileEntry)) + ", " + H.S(fileEntry.get$fullPath(fileEntry));
    },
    $signature: 61
  };
  N.handleFileWrite_closure.prototype = {
    call$1: function(result) {
      var entry = H.interceptedTypeCheck(H.interceptedTypeCheck(result, "$isChooseEntryResult").entry, "$isChromeFileEntry");
      return entry.writeText$1("foo bar baz").then$1$1(new N.handleFileWrite__closure(entry), null);
    },
    $signature: 6
  };
  N.handleFileWrite__closure.prototype = {
    call$1: function(_) {
      return "choose: " + H.S(J.get$name$z(this.entry)) + "; written successfully";
    },
    $signature: 13
  };
  N.handleFileWriteBytes_closure.prototype = {
    call$1: function(result) {
      var entry = H.interceptedTypeCheck(H.interceptedTypeCheck(result, "$isChooseEntryResult").entry, "$isChromeFileEntry"),
        buf = Z.ArrayBuffer_ArrayBuffer$fromBytes(H.setRuntimeTypeInfo([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [P.int]));
      P.print(buf.getBytes$0());
      return entry.writeBytes$1(buf).then$1$1(new N.handleFileWriteBytes__closure(entry), null);
    },
    $signature: 6
  };
  N.handleFileWriteBytes__closure.prototype = {
    call$1: function(_) {
      return "choose: " + H.S(J.get$name$z(this.entry)) + "; written successfully";
    },
    $signature: 13
  };
  N.handleFileRename_closure.prototype = {
    call$1: function(result) {
      var entry = H.interceptedTypeCheck(H.interceptedTypeCheck(result, "$isChooseEntryResult").entry, "$isChromeFileEntry");
      return entry.getParent$0(0).then$1$1(new N.handleFileRename__closure(entry), null);
    },
    $signature: 6
  };
  N.handleFileRename__closure.prototype = {
    call$1: function($parent) {
      var t1 = this.entry,
        t2 = J.getInterceptor$z(t1);
      return t2.moveTo$2$name(t1, H.interceptedTypeCheck(H.interceptedTypeCheck($parent, "$isEntry"), "$isDirectoryEntry"), J.$add$ansx(t2.get$name(t1), ".new"));
    },
    $signature: 63
  };
  N.handleFileDelete_closure.prototype = {
    call$1: function(result) {
      return H.interceptedTypeCheck(H.interceptedTypeCheck(result, "$isChooseEntryResult").entry, "$isChromeFileEntry").remove$0(0).then$1$1(new N.handleFileDelete__closure(), null);
    },
    $signature: 6
  };
  N.handleFileDelete__closure.prototype = {
    call$1: function(_) {
      return "delete successful";
    },
    $signature: 13
  };
  N.handleBluetoothGetAdapterState_closure.prototype = {
    call$1: function(adapterState) {
      H.interceptedTypeCheck(adapterState, "$isAdapterState");
      return "adapterState.address = " + H.S(adapterState.get$address()) + ", adapterState.available = " + H.S(adapterState.get$available()) + ", adapterState.discovering = " + H.S(adapterState.get$discovering()) + ", adapterState.powered = " + H.S(adapterState.get$powered());
    },
    $signature: 64
  };
  N.handleIdentityGetAuthToken_closure.prototype = {
    call$1: function(token) {
      return "token = " + H.S(H.stringTypeCheck(token)) + ", ";
    },
    $signature: 65
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _.super$Interceptor$noSuchMethod = _.noSuchMethod$1;
    _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
    _ = P._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = P.Object.prototype;
    _.super$Object$toString = _.toString$0;
    _ = P.JsObject.prototype;
    _.super$JsObject$$index = _.$index;
    _.super$JsObject$$indexSet = _.$indexSet;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _static_2 = hunkHelpers._static_2,
      _instance_1_u = hunkHelpers._instance_1u;
    _static_1(P, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 9);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 9);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 9);
    _static_0(P, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(P, "async___nullDataHandler$closure", "_nullDataHandler", 67);
    _static(P, "async___nullErrorHandler$closure", 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_nullErrorHandler", function(error) {
      return P._nullErrorHandler(error, null);
    }], 14, 0);
    _static_0(P, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    _static(P, "async___rootScheduleMicrotask$closure", 4, null, ["call$4"], ["_rootScheduleMicrotask"], 68, 0);
    _instance(P._Future.prototype, "get$_completeError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_completeError$2", "_completeError$1"], 14, 0);
    _instance_0_u(P._DoneStreamSubscription.prototype, "get$_sendDone", "_sendDone$0", 0);
    _static_1(P, "js___convertToJS$closure", "_convertToJS", 4);
    _static_1(P, "js___convertToDart$closure", "_convertToDart", 69);
    _static_1(L, "alarms___createAlarm$closure", "_createAlarm", 70);
    _static_1(B, "app___createEmbedRequest$closure", "_createEmbedRequest", 107);
    _static_1(B, "app___createLaunchData$closure", "_createLaunchData", 72);
    _static_1(B, "app___createAppWindow$closure", "_createAppWindow", 73);
    _instance_0_u(B._ChromeAppWindow.prototype, "get$current", "current$0", 59);
    _static_2(Q, "audio_GetInfoResult__create$closure", "GetInfoResult__create", 74);
    _static_1(Q, "audio___createLevelChangedEvent$closure", "_createLevelChangedEvent", 75);
    _static_1(Q, "audio___createMuteChangedEvent$closure", "_createMuteChangedEvent", 76);
    _static_1(Q, "audio___createAudioDeviceInfo$closure", "_createAudioDeviceInfo", 77);
    _static_1(Q, "audio___createOutputDeviceInfo$closure", "_createOutputDeviceInfo", 78);
    _static_1(Q, "audio___createInputDeviceInfo$closure", "_createInputDeviceInfo", 79);
    _static_1(Q, "bluetooth___createAdapterState$closure", "_createAdapterState", 80);
    _static_1(Q, "bluetooth___createDevice$closure", "_createDevice", 81);
    _static_2(V, "file_system_ChooseEntryResult__create$closure", "ChooseEntryResult__create", 82);
    _static_1(V, "file_system___createVolumeListChangedEvent$closure", "_createVolumeListChangedEvent", 83);
    _static_1(V, "file_system___createEntryChangedEvent$closure", "_createEntryChangedEvent", 84);
    _static_1(V, "file_system___createEntryRemovedEvent$closure", "_createEntryRemovedEvent", 85);
    _static_1(V, "file_system___createFileEntry$closure", "_createFileEntry", 86);
    _static_1(R, "i18n___createLanguageCode$closure", "_createLanguageCode", 87);
    _static_2(Q, "identity___createOnSignInChangedEvent$closure", "_createOnSignInChangedEvent", 88);
    _static_1(V, "idle___createIdleState$closure", "_createIdleState", 89);
    _static_1(S, "permissions___createPermissions$closure", "_createPermissions", 90);
    _static_2(T, "runtime_RequestUpdateCheckResult__create$closure", "RequestUpdateCheckResult__create", 91);
    _static_1(T, "runtime___createPort$closure", "_createPort", 92);
    _static(T, "runtime___createOnMessageEvent$closure", 3, null, ["call$3"], ["_createOnMessageEvent"], 93, 0);
    _static(T, "runtime___createOnMessageExternalEvent$closure", 3, null, ["call$3"], ["_createOnMessageExternalEvent"], 94, 0);
    _static_1(T, "runtime___createOnRestartRequiredReason$closure", "_createOnRestartRequiredReason", 95);
    _static_1(T, "runtime___createPlatformInfo$closure", "_createPlatformInfo", 96);
    _static_1(T, "runtime___createDirectoryEntry$closure", "_createDirectoryEntry", 97);
    _static_2(N, "storage___createOnChangedEvent$closure", "_createOnChangedEvent", 98);
    _static_1(O, "sync_file_system___createServiceInfo$closure", "_createServiceInfo", 99);
    _static_1(O, "sync_file_system___createFileInfo$closure", "_createFileInfo", 100);
    _static_1(O, "sync_file_system___createDOMFileSystem$closure", "_createDOMFileSystem", 101);
    _static_1(Q, "system___createCpuInfo$closure", "_createCpuInfo", 102);
    _static_1(Q, "system___createMemoryInfo$closure", "_createMemoryInfo", 103);
    _static_1(Q, "system___createStorageUnitInfo$closure", "_createStorageUnitInfo", 104);
    _static_1(G, "tts___createTtsEvent$closure", "_createTtsEvent", 105);
    _static_1(G, "tts___createTtsVoice$closure", "_createTtsVoice", 106);
    _static_1(F, "common__toMap$closure", "toMap", 71);
    _static_1(F, "common__toJS$closure", "toJS", 4);
    _static_1(F, "common__selfConverter$closure", "selfConverter", 4);
    var _;
    _instance_0_u(_ = F.ChromeStreamController.prototype, "get$_ensureHandlerAdded", "_ensureHandlerAdded$0", 0);
    _instance_0_u(_, "get$_removeHandler", "_removeHandler$0", 0);
    _instance_1_u(M._ChromeCompleterWithError.prototype, "get$errorCallback", "errorCallback$1", 5);
    _static_0(N, "demo__handleI18NMessage$closure", "handleI18NMessage", 0);
    _static_0(N, "demo__handleI18NLanguages$closure", "handleI18NLanguages", 0);
    _static_0(N, "demo__handleRuntimeId$closure", "handleRuntimeId", 0);
    _static_0(N, "demo__handleRuntimeURL$closure", "handleRuntimeURL", 0);
    _static_0(N, "demo__handleRuntimeReload$closure", "handleRuntimeReload", 0);
    _static_0(N, "demo__handleIdleQueryState$closure", "handleIdleQueryState", 0);
    _static_0(N, "demo__handlePermissionsGetAll$closure", "handlePermissionsGetAll", 0);
    _static_0(N, "demo__handlePermissionsOrigins$closure", "handlePermissionsOrigins", 0);
    _static_0(N, "demo__handleRuntimeGetManifest$closure", "handleRuntimeGetManifest", 0);
    _static_0(N, "demo__handleGetVoices$closure", "handleGetVoices", 0);
    _static_0(N, "demo__handleGetPlatformInfo$closure", "handleGetPlatformInfo", 0);
    _static_0(N, "demo__handleGetPackageDirectoryEntry$closure", "handleGetPackageDirectoryEntry", 0);
    _static_0(N, "demo__handleRuntimeRequestUpdateCheck$closure", "handleRuntimeRequestUpdateCheck", 0);
    _static_0(N, "demo__handleAlarmsCreate$closure", "handleAlarmsCreate", 0);
    _static_0(N, "demo__handleAudioGetInfo$closure", "handleAudioGetInfo", 0);
    _static_0(N, "demo__handleAppWindowCreate$closure", "handleAppWindowCreate", 0);
    _static_0(N, "demo__handleAppWindowCreateOptions$closure", "handleAppWindowCreateOptions", 0);
    _static_0(N, "demo__handleSystemCpu$closure", "handleSystemCpu", 0);
    _static_0(N, "demo__handleSystemMemory$closure", "handleSystemMemory", 0);
    _static_0(N, "demo__handleStorageStore$closure", "handleStorageStore", 0);
    _static_0(N, "demo__handleStorageProp$closure", "handleStorageProp", 0);
    _static_0(N, "demo__handleChooseEntry$closure", "handleChooseEntry", 0);
    _static_0(N, "demo__handleChooseEntryDir$closure", "handleChooseEntryDir", 0);
    _static_0(N, "demo__handleRequestFileSystem$closure", "handleRequestFileSystem", 0);
    _static_0(N, "demo__handleFileRead$closure", "handleFileRead", 0);
    _static_0(N, "demo__handleFileReadBytes$closure", "handleFileReadBytes", 0);
    _static_0(N, "demo__handleDirInfo$closure", "handleDirInfo", 0);
    _static_0(N, "demo__handleDirGetFile$closure", "handleDirGetFile", 0);
    _static_0(N, "demo__handleGetFileMetaData$closure", "handleGetFileMetaData", 0);
    _static_0(N, "demo__handleDirListings$closure", "handleDirListings", 0);
    _static_0(N, "demo__handleFileCreate$closure", "handleFileCreate", 0);
    _static_0(N, "demo__handleFileWrite$closure", "handleFileWrite", 0);
    _static_0(N, "demo__handleFileWriteBytes$closure", "handleFileWriteBytes", 0);
    _static_0(N, "demo__handleFileRename$closure", "handleFileRename", 0);
    _static_0(N, "demo__handleFileDelete$closure", "handleFileDelete", 0);
    _static_0(N, "demo__handleBrowserAvailable$closure", "handleBrowserAvailable", 0);
    _static_0(N, "demo__handleBrowserOpenTab$closure", "handleBrowserOpenTab", 0);
    _static_0(N, "demo__handleBluetoothAvailable$closure", "handleBluetoothAvailable", 0);
    _static_0(N, "demo__handleBluetoothGetAdapterState$closure", "handleBluetoothGetAdapterState", 0);
    _static_0(N, "demo__handleIdentityGetAuthToken$closure", "handleIdentityGetAuthToken", 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.ChromeObject0, H.Event0, H.API_ChromeApp, H.API_Chrome, H.API_app_window, H.API_app_runtime, H.API_file_system, H.JS_CONST, H._CryptoUtils, H._HashBase, H.HttpServer, H.HttpConnectionsInfo, H.HttpHeaders, H.HeaderValue, H.HttpSession, H.ContentType, H.Cookie, H.HttpRequest, H.HttpResponse, H.HttpClient, H.HttpClientRequest, H.HttpClientResponse, H.HttpClientCredentials, H.HttpConnectionInfo, H.RedirectInfo, H.DetachedSocket, H.HttpException, H.RedirectException, H.HttpDate, H._HttpHeaders, H._HeaderValue, H._Cookie, H._ServiceObject, H._CopyingBytesBuilder, P.Stream, H._StreamSinkImpl, P.ChunkedConversionSink, H._HttpOutgoing, H._HttpClientConnection, H._ConnectionInfo, H._ConnectionTarget, H._HttpClient, P.LinkedListEntry, H._ProxyConfiguration, H._Proxy, H._HttpConnectionInfo, H._AuthenticationScheme, H._Credentials, H._HttpClientCredentials, H._RedirectInfo, H._Const, H._CharCode, H._State, H._HttpVersion, H._MessageType, H._HttpDetachedStreamSubscription, H._HttpSession, H._HttpSessionManager, H.HttpOverrides, H.WebSocketStatus, H.CompressionOptions, H.WebSocketTransformer, H.WebSocket, H.WebSocketException, H._WebSocketMessageType, H._WebSocketOpcode, H._EncodedString, H._CompressionMaxWindowBits, P.StreamTransformerBase, H._WebSocketPing, H._WebSocketPong, H._WebSocketPerMessageDeflate, H._WebSocketConsumer, J.Interceptor, J.JSIndexable, J.JSObject, J._Growable, J.ArrayIterator, H.CastStreamSubscription, P.Iterable, H.CastIterator, P.MapMixin, P._ListBase_Object_ListMixin, H.ExternalName, H.Since, H.HttpStatus, H.ListIterator, P.Iterator, H.ExpandIterator, H.EmptyIterator, H.FollowedByIterator, H.WhereTypeIterator, H.IterableElementError, H.LinkedListEntry0, H._LinkedListIterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.UnmodifiableListError, H.NonGrowableListError, H.Sort, H.Symbol, H.JsGetName, H.JsBuiltin, H.Native, H._Patch, P.MapView, H.ConstantMap, H.Closure, H.InternalMap, H.JSInvocationMirror, H.Primitives, H.JsCache, H.TypeErrorDecoder, P.Error, H.ExceptionAndStackTrace, H._StackTrace, H.Creates, H.Returns, H.JSName, H.TypeImpl, H.TypeVariable, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H._AllMatchesIterator, H.StringMatch, H._StringAllMatchesIterator, H._LazyMangledNamesMap, H._LazyReflectiveNamesMap, H.SupportedBrowser, H.Experimental, H.DomName, H.DocsEditable, H.Unstable, H._NativeFloat32x4List_Object_ListMixin, H._NativeInt32x4List_Object_ListMixin, H._NativeFloat64x2List_Object_ListMixin, H.NativeFloat32x4, H.NativeInt32x4, H.NativeFloat64x2, P._TimerImpl, P._AsyncAwaitCompleter, P._AsyncStarStreamController, P._IterationMarker, P._SyncStarIterator, P._BufferingStreamSubscription, P._BroadcastStreamController, P.DeferredLibrary, P.DeferredLoadException, P.FutureOr, P.Future, P.TimeoutException, P.Completer, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P._AsyncRun, P.StreamSubscription, P.EventSink, P.StreamConsumer, P.StreamSink, P.StreamTransformer, P.StreamIterator, P._ControllerEventSinkWrapper, P.StreamController, P.SynchronousStreamController, P._StreamControllerLifecycle, P._StreamControllerBase, P._StreamController, P._SyncStreamControllerDispatch, P._AsyncStreamControllerDispatch, P._StreamSinkWrapper, P._AddStreamState, P._EventSink, P._EventDispatch, P._PendingEvents, P._DelayedEvent, P._DelayedDone, P._DoneStreamSubscription, P._BroadcastSubscriptionWrapper, P._StreamIterator, P._EventSinkWrapper, P._HandlerEventSink, P.Timer, P.AsyncError, P._ZoneFunction, P.ZoneSpecification, P._ZoneSpecification, P.ZoneDelegate, P.Zone, P._ZoneDelegate, P._Zone, P._HashMapKeyIterator, P._Es6MapIterator, P._SetBase, P._HashSetIterator, P._LinkedHashSetCell, P._LinkedHashSetIterator, P.HashMap, P.HashSet, P.IterableMixin, P.HasNextIterator, P.LinkedHashMap, P.LinkedHashSet, P._LinkedListIterator0, P.ListMixin, P._MapBaseValueIterator, P._UnmodifiableMapMixin, P.Queue, P._DoubleLink, P._DoubleLinkedQueueIterator, P._ListQueueIterator, P.SetMixin, P._SetBase_Object_SetMixin, P._SplayTreeNode, P._SplayTree, P._TypeTest, P._SplayTreeIterator, P.StringConversionSinkMixin, P.Codec, P._Base64Encoder, P._Base64Decoder, P._ConverterStreamEventSink, P.HtmlEscapeMode, P._JsonStringifier, P._JsonPrettyPrintMixin, P.StringSink, P._ClosableStringSink, P._StringConversionSinkAsStringSinkAdapter, P._Utf8Encoder, P._Utf8Decoder, P._BigIntImpl, P._BigIntReduction, P._BigIntClassic, P.Deprecated, P._Override, P.Provisional, P._Proxy0, P.pragma, P.BigInt, P.bool, P.Comparable, P.DateTime, P.num, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P.Exception, P._Exception, P.FormatException, P.IntegerDivisionByZeroException, P.Expando, P.Function, P.Invocation, P._Invocation, P.BidirectionalIterator, P.List, P.Map, P.MapEntry, P.Null, P.Pattern, P.Match, P.RegExp, P.RegExpMatch, P.Sink, P.StackTrace, P._StringStackTrace, P.Stopwatch, P.String, P.RuneIterator, P.StringBuffer, P.Symbol0, P.Type, P.Uri, P._Uri, P.UriData, P._SimpleUri, P._FakeUserTag, P.ServiceExtensionResponse, P.UserTag, P.Metric, P.Metrics, P.ServiceProtocolInfo, P.Service, P.Flow, P.Timeline, P.TimelineTask, P._AsyncBlock, P._SyncBlock, W.CanvasRenderingContext, W.__CssStyleDeclarationSet_Object_CssStyleDeclarationBase, W.CssStyleDeclarationBase, W._ElementFactoryProvider, W.ScrollAlignment, W.Events, W._GeopositionWrapper, W.GlobalEventHandlers, W.InputElementBase, W.HiddenInputElement, W.TextInputElementBase, W.SearchInputElement, W.TextInputElement, W.UrlInputElement, W.TelephoneInputElement, W.EmailInputElement, W.PasswordInputElement, W.RangeInputElementBase, W.DateInputElement, W.MonthInputElement, W.WeekInputElement, W.TimeInputElement, W.LocalDateTimeInputElement, W.NumberInputElement, W.RangeInputElement, W.CheckboxInputElement, W.RadioButtonInputElement, W.FileUploadInputElement, W.SubmitButtonInputElement, W.ImageButtonInputElement, W.ResetButtonInputElement, W.ButtonInputElement, W._WrappedEvent, W._BeforeUnloadEventStreamProvider, W._JenkinsSmiHash, W.CanvasImageSource, W.WindowBase, W.LocationBase, W.HistoryBase, W.CssClassSet, W.CssRect, W.Dimension, W.EventStreamProvider, W.ElementStream, W.CustomStream, W._StreamPool, W._CustomEventStreamProvider, W._Html5NodeValidator, W.ImmutableListMixin, W.KeyCode, W.KeyLocation, W._KeyName, W.KeyboardEventStream, W.NodeValidatorBuilder, W._SimpleNodeValidator, W._SvgNodeValidator, W.ReadyState, W._WrappedIterator, W._HttpRequestUtils, W.FixedSizeListIterator, W._VariableSizeListIterator, W.Console, W._JSElementUpgrader, W._DOMWindowCrossFrame, W._LocationCrossFrame, W._HistoryCrossFrame, W.Platform, W.ElementUpgrader, W.NodeValidator, W.NodeTreeSanitizer, W._TrustedHtmlTreeSanitizer, W.UriPolicy, W._SameOriginUriPolicy, W._ThrowsNodeValidator, W._ValidatingTreeSanitizer, P._StructuredClone, P._AcceptStructuredClone, P.ContextAttributes, P._TypedImageData, P.Device, P.Lists, P.NodeListWrapper, P._KeyRangeFactoryProvider, P.BytesBuilder, P._CopyingBytesBuilder0, P._BytesBuilder, P.IOException, P.OSError, P._BufferAndStart, P._IOCrypto, P.ZLibOption, P.RawZLibFilter, P.Directory, P.FileSystemEntity, P._AsyncDirectoryListerOps, P._AsyncDirectoryLister, P._EmbedderConfig, P._EventHandler, P.FileMode, P.FileLock, P.File0, P.RandomAccessFile, P.FileSystemException, P._RandomAccessFileOps, P._RandomAccessFile, P.FileSystemEntityType, P.FileStat, P.FileSystemEvent, P._FileSystemWatcher, P._IOResourceInfo, P._IOService, P.IOSink, P._StreamSinkImpl0, P.Link, P._Namespace, P.IOOverrides, P.Platform0, P._Platform, P._ProcessUtils, P.ProcessInfo, P.ProcessStartMode, P.Process, P.ProcessResult, P.ProcessSignal, P.SignalException, P.ProcessException, P.SecureSocket, P.RawSecureSocket, P.X509Certificate, P._FilterStatus, P._ExternalBuffer, P._SecureFilter, P.TlsException, P.SecurityContext, P._ServiceObject0, P.InternetAddressType, P.InternetAddress, P.NetworkInterface, P.RawServerSocket, P.ServerSocket, P.SocketDirection, P.SocketOption, P._RawSocketOptions, P.RawSocketOption, P.RawSocketEvent, P.ConnectionTask, P.RawSocket, P.Socket, P.Datagram, P.SocketException, P._StdSink, P.StdoutException, P.StdinException, P._StdConsumer, P.StdioType, P._StdIOUtils, P.RawSynchronousSocket, P.Capability, P.IsolateSpawnException, P.Isolate, P.SendPort, P.ReceivePort, P.RawReceivePort, P.RemoteError, P.JsObject, P._JSRandom, P._Random, P._JSSecureRandom, P._JenkinsSmiHash0, P.Point, P.Random, P._RectangleBase, P.MirrorSystem, P.Mirror, P.IsolateMirror, P.DeclarationMirror, P.ObjectMirror, P.InstanceMirror, P.ClosureMirror, P.LibraryMirror, P.LibraryDependencyMirror, P.CombinatorMirror, P.TypeMirror, P.ClassMirror, P.FunctionTypeMirror, P.TypedefMirror, P.MethodMirror, P.VariableMirror, P.ParameterMirror, P.SourceLocation, P.Comment0, P.MirrorsUsed, P._SvgElementFactoryProvider, P.ByteBuffer, P.TypedData, P.Endian, P.ByteData, P.Int8List, P.Uint8List, P.Uint8ClampedList, P.Int16List, P.Uint16List, P.Int32List, P.Uint32List, P.Int64List, P.Uint64List, P.Float32List, P.Float64List, P.Float32x4List, P.Int32x4List, P.Float64x2List, P.Float32x4, P.Int32x4, P.Float64x2, P.UnmodifiableByteBufferView, P.UnmodifiableByteDataView, P._UnmodifiableListMixin, Z.ChromeApi, Z.ChromeObject, B.ChromeApp, Z.ChromeEnum, Q.GetInfoResult, R.OnCharacteristicReadRequestEvent, R.OnCharacteristicWriteRequestEvent, R.OnDescriptorReadRequestEvent, R.OnDescriptorWriteRequestEvent, V.ChooseEntryResult, Y.OnUnmountRequestedEvent, Y.OnGetMetadataRequestedEvent, Y.OnGetActionsRequestedEvent, Y.OnReadDirectoryRequestedEvent, Y.OnOpenFileRequestedEvent, Y.OnCloseFileRequestedEvent, Y.OnReadFileRequestedEvent, Y.OnCreateDirectoryRequestedEvent, Y.OnDeleteEntryRequestedEvent, Y.OnCreateFileRequestedEvent, Y.OnCopyEntryRequestedEvent, Y.OnMoveEntryRequestedEvent, Y.OnTruncateRequestedEvent, Y.OnWriteFileRequestedEvent, Y.OnAbortRequestedEvent, Y.OnConfigureRequestedEvent, Y.OnMountRequestedEvent, Y.OnAddWatcherRequestedEvent, Y.OnRemoveWatcherRequestedEvent, Y.OnExecuteActionRequestedEvent, Y.ReceiveResult, Q.OnSignInChangedEvent, B.AddUserSelectedFolderResult, V.OnClosedEvent, V.OnButtonClickedEvent, R.OnGetUsbPrinterInfoRequestedEvent, R.OnGetCapabilityRequestedEvent, R.OnPrintRequestedEvent, T.OnMessageEvent, T.OnMessageExternalEvent, T.RequestUpdateCheckResult, A.ChromeSockets, N.StorageOnChangedEvent, Q.ChromeSystem, G.OnUpdatedEvent, G.TabsOnMovedEvent, G.OnSelectionChangedEvent, G.OnActiveChangedEvent, G.OnDetachedEvent, G.OnAttachedEvent, G.TabsOnRemovedEvent, G.OnReplacedEvent, B.OnPlatformMessageEvent, B.OnConfigCreatedEvent, B.OnUIEventEvent, F.ChromeCompleter, F.ChromeStreamController, Z.DeviceCallback, Z.SuggestFilenameCallback, Z.ProviderSuccessCallback, Z.ProviderErrorCallback, Z.MetadataCallback, Z.EntriesCallback, Z.PrintersCallback, Z.FileDataCallback, Z.CapabilitiesCallback, Z.PrintCallback, Z.PrinterInfoCallback, Z.CertificatesCallback, Z.ActionsCallback, Z.SignCallback, Z.SubtleCrypto, Z.RequestPinCallback, Z.StopPinRequestCallback, M._ChromeCompleterWithError]);
    _inheritMany(H.ChromeObject0, [H.Rule, H.AppWindowBounds, H.AppWindowCreateWindowOptions, H.AppWindowAppWindow, H.AppRuntimeLaunchItem, H.AppRuntimeLaunchData, H.FilesystemAcceptOption, H.FilesystemChooseEntryOptions]);
    _inheritMany(H.Event0, [H.Event_app_window_onBoundsChanged, H.Event_app_window_onClosed, H.Event_app_window_onFullscreened, H.Event_app_window_onMaximized, H.Event_app_window_onMinimized, H.Event_app_window_onRestored, H.Event_app_runtime_onLaunched, H.Event_app_runtime_onRestarted]);
    _inheritMany(H._HashBase, [H._MD5, H._SHA1]);
    _inheritMany(H.HttpClientCredentials, [H.HttpClientBasicCredentials, H.HttpClientDigestCredentials]);
    _inherit(H._ContentType, H._HeaderValue);
    _inheritMany(P.Stream, [H._HttpIncoming, H._HttpInboundMessage, H.__HttpServer_Stream__ServiceObject, H._DetachedSocket, H._HttpDetachedIncoming, H._HttpParser, H.__WebSocketImpl_Stream__ServiceObject, H.CastStream, P._StreamImpl, P.StreamView, P._AsBroadcastStream, P._EmptyStream, P._ForwardingStream, P._BoundSinkStream, P._BoundSubscriptionStream, W._EventStream, W._ElementListEventStreamImpl, W._CustomEventStreamImpl, P._FileStream, P.SecureServerSocket, P.RawSecureServerSocket, P._RawSecureSocket, P.RawDatagramSocket, P._StdStream, P._ReceivePortImpl]);
    _inheritMany(H._HttpInboundMessage, [H._HttpRequest, H._HttpClientResponse]);
    _inherit(H._IOSinkImpl, H._StreamSinkImpl);
    _inherit(H._HttpOutboundMessage, H._IOSinkImpl);
    _inheritMany(H._HttpOutboundMessage, [H._HttpResponse, H._HttpClientRequest]);
    _inheritMany(P.ChunkedConversionSink, [P.ByteConversionSink, P._SimpleCallbackSink, P._JsonEncoderSink, P._JsonUtf8EncoderSink, P.StringConversionSink]);
    _inheritMany(P.ByteConversionSink, [H._HttpGZipSink, P.ByteConversionSinkBase, P._Utf8StringSinkAdapter, P._Utf8ConversionSink, P._BufferSink, P._FilterSink]);
    _inherit(H.__HttpConnection_LinkedListEntry__ServiceObject, P.LinkedListEntry);
    _inherit(H._HttpConnection, H.__HttpConnection_LinkedListEntry__ServiceObject);
    _inherit(H._HttpServer, H.__HttpServer_Stream__ServiceObject);
    _inheritMany(H._Credentials, [H._SiteCredentials, H._ProxyCredentials]);
    _inheritMany(H._HttpClientCredentials, [H._HttpClientBasicCredentials, H._HttpClientDigestCredentials]);
    _inherit(H._HttpOverridesScope, H.HttpOverrides);
    _inheritMany(P.StreamTransformerBase, [H._WebSocketProtocolTransformer, H._WebSocketTransformerImpl, H._WebSocketOutgoingTransformer, H.CastStreamTransformer, P.Converter, P._StreamSinkTransformer, P._StreamBindTransformer, P._StreamSubscriptionTransformer, P.LineSplitter]);
    _inherit(H._WebSocketImpl, H.__WebSocketImpl_Stream__ServiceObject);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeByteBuffer, H.NativeTypedData, W.EventTarget, W.Event, W.AbstractWorker, W.AccessibleNodeList, W.AnimationEffectReadOnly, W.AnimationEffectTimingReadOnly, W.AnimationTimeline, W.WorkletGlobalScope, W.AuthenticatorResponse, W.BackgroundFetchFetch, W.BackgroundFetchManager, W.BarProp, W.BarcodeDetector, W.Blob, W.BluetoothRemoteGattDescriptor, W.Body, W.BudgetState, W.CacheStorage, W.CanvasGradient, W.CanvasPattern, W.CanvasRenderingContext2D, W.ChildNode, W.Client, W.Clients, W.CookieStore, W.Coordinates, W.Credential, W.CredentialUserData, W.CredentialsContainer, W.Crypto, W.CryptoKey, W.Css, W.CssRule, W.CssStyleValue, W.CssTransformComponent, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.StyleSheet, W.CssVariableReferenceValue, W.CustomElementRegistry, W.DataTransfer, W.DataTransferItem, W.DataTransferItemList, W.DeprecatedStorageInfo, W.DeprecatedStorageQuota, W.ReportBody, W.DetectedBarcode, W.DetectedFace, W.DetectedText, W.DeviceAcceleration, W.DeviceRotationRate, W.Entry, W.DirectoryReader, W.DocumentOrShadowRoot, W.DomError, W.DomException, W.DomImplementation, W.DomIterator, W.DomMatrixReadOnly, W.DomParser, W.DomPointReadOnly, W.DomQuad, W._DomRectList_Interceptor_ListMixin, W.DomRectReadOnly, W._DomStringList_Interceptor_ListMixin, W.DomStringMap, W.DomTokenList, W.External, W.FaceDetector, W._FileList_Interceptor_ListMixin, W.FileSystem, W.FontFace, W.FontFaceSource, W.FormData, W.Gamepad, W.GamepadButton, W.GamepadPose, W.Geolocation, W.Geoposition, W.Headers, W.History, W._HtmlCollection_Interceptor_ListMixin, W.HtmlHyperlinkElementUtils, W.IdleDeadline, W.ImageBitmap, W.ImageBitmapRenderingContext, W.ImageCapture, W.ImageData, W.InputDeviceCapabilities, W.IntersectionObserver, W.IntersectionObserverEntry, W.Location, W.MediaCapabilities, W.MediaCapabilitiesInfo, W.MediaDeviceInfo, W.MediaError, W.MediaKeyStatusMap, W.MediaKeySystemAccess, W.MediaKeys, W.MediaKeysPolicy, W.MediaList, W.MediaMetadata, W.MediaSession, W.MediaSettingsRange, W.MemoryInfo0, W.MessageChannel, W.Metadata, W._MidiInputMap_Interceptor_MapMixin, W._MidiOutputMap_Interceptor_MapMixin, W.MimeType, W._MimeTypeArray_Interceptor_ListMixin, W.MutationObserver, W.MutationRecord, W.NavigationPreloadManager, W.NavigatorConcurrentHardware, W.NavigatorAutomationInformation, W.NavigatorCookies, W.NavigatorID, W.NavigatorLanguage, W.NavigatorOnLine, W.NavigatorUserMediaError, W.NodeFilter, W.NodeIterator, W._NodeList_Interceptor_ListMixin, W.NonDocumentTypeChildNode, W.NonElementParentNode, W.NoncedElement, W.OffscreenCanvasRenderingContext2D, W.OverconstrainedError, W.PaintRenderingContext2D, W.PaintSize, W.ParentNode, W.Path2D, W.PaymentAddress, W.PaymentInstruments, W.PaymentManager, W.PaymentResponse, W.PerformanceEntry, W.PerformanceNavigation, W.PerformanceObserver, W.PerformanceObserverEntryList, W.PerformanceServerTiming, W.PerformanceTiming, W.Permissions0, W.PhotoCapabilities, W.Plugin, W._PluginArray_Interceptor_ListMixin, W.PositionError, W.Presentation, W.PresentationReceiver, W.PushManager, W.PushMessageData, W.PushSubscription, W.PushSubscriptionOptions, W.Range, W.RelatedApplication, W.ReportingObserver, W.ResizeObserver, W.ResizeObserverEntry, W.RtcCertificate, W.RtcIceCandidate, W.RtcLegacyStatsReport, W.RtcRtpContributingSource, W.RtcRtpReceiver, W.RtcRtpSender, W.RtcSessionDescription, W._RtcStatsReport_Interceptor_MapMixin, W.RtcStatsResponse, W.Screen, W.ScrollState, W.Selection, W.SharedArrayBuffer, W.SpeechGrammar, W._SpeechGrammarList_Interceptor_ListMixin, W.SpeechRecognitionAlternative, W.SpeechRecognitionResult, W.SpeechSynthesisVoice, W.StaticRange, W._Storage_Interceptor_MapMixin, W.StorageManager, W.StyleMedia, W.StylePropertyMapReadonly, W.SyncManager, W.TextDetector, W.TextMetrics, W._TextTrackCueList_Interceptor_ListMixin, W.TimeRanges, W.Touch, W._TouchList_Interceptor_ListMixin, W.TrackDefault, W.TrackDefaultList, W.TreeWalker, W.TrustedHtml, W.TrustedScriptUrl, W.TrustedUrl, W.UnderlyingSourceBase, W.Url, W.UrlSearchParams, W.UrlUtilsReadOnly, W.VRCoordinateSystem, W.VRDisplayCapabilities, W.VREyeParameters, W.VRFrameData, W.VRPose, W.VRStageBounds, W.VRStageBoundsPoint, W.VRStageParameters, W.ValidityState, W.VideoPlaybackQuality, W.VideoTrack, W.VttRegion, W.WindowBase64, W.WorkletAnimation, W.XPathEvaluator, W.XPathExpression, W.XPathNSResolver, W.XPathResult, W.XmlSerializer, W.XsltProcessor, W._Bluetooth, W._BluetoothCharacteristicProperties, W._BluetoothRemoteGATTServer, W._BluetoothRemoteGATTService, W._BluetoothUUID, W._BudgetService, W._Cache, W._CanvasPath, W.__CssRuleList_Interceptor_ListMixin, W._DOMFileSystemSync, W._EntrySync, W._DirectoryReaderSync, W._FileReaderSync, W._FileWriterSync, W.__GamepadList_Interceptor_ListMixin, W._HTMLAllCollection, W._Mojo, W._MojoHandle, W._MojoWatcher, W._NFC, W.__NamedNodeMap_Interceptor_ListMixin, W._PagePopupController, W._Report, W.__SpeechRecognitionResultList_Interceptor_ListMixin, W.__StyleSheetList_Interceptor_ListMixin, W._SubtleCrypto, W._USBAlternateInterface, W._USBConfiguration, W._USBDevice, W._USBEndpoint, W._USBInTransferResult, W._USBInterface, W._USBIsochronousInTransferPacket, W._USBIsochronousInTransferResult, W._USBIsochronousOutTransferPacket, W._USBIsochronousOutTransferResult, W._USBOutTransferResult, W._WindowTimers, W._WorkerLocation, W._Worklet, P.Cursor, P.IdbFactory, P.Index, P.KeyRange, P.ObjectStore, P.Observation, P.Observer, P.ObserverChanges, P.Angle, P.AnimatedAngle, P.AnimatedBoolean, P.AnimatedEnumeration, P.AnimatedInteger, P.AnimatedLength, P.AnimatedLengthList, P.AnimatedNumber, P.AnimatedNumberList, P.AnimatedPreserveAspectRatio, P.AnimatedRect, P.AnimatedString, P.AnimatedTransformList, P.FilterPrimitiveStandardAttributes, P.FitToViewBox, P.Length, P._LengthList_Interceptor_ListMixin, P.Matrix, P.Number, P._NumberList_Interceptor_ListMixin, P.Point0, P.PointList, P.PreserveAspectRatio, P.Rect, P._StringList_Interceptor_ListMixin, P.Tests, P.Transform, P._TransformList_Interceptor_ListMixin, P.UnitTypes, P.UriReference, P.ZoomAndPan, P.AudioBuffer, P.AudioListener, P.AudioParam, P._AudioParamMap_Interceptor_MapMixin, P.AudioTrack, P.AudioWorkletProcessor, P.PeriodicWave, P.ActiveInfo, P.AngleInstancedArrays, P.Buffer, P.Canvas, P.ColorBufferFloat, P.CompressedTextureAstc, P.CompressedTextureAtc, P.CompressedTextureETC1, P.CompressedTextureEtc, P.CompressedTexturePvrtc, P.CompressedTextureS3TC, P.CompressedTextureS3TCsRgb, P.DebugRendererInfo, P.DebugShaders, P.DepthTexture, P.DrawBuffers, P.EXTsRgb, P.ExtBlendMinMax, P.ExtColorBufferFloat, P.ExtColorBufferHalfFloat, P.ExtDisjointTimerQuery, P.ExtDisjointTimerQueryWebGL2, P.ExtFragDepth, P.ExtShaderTextureLod, P.ExtTextureFilterAnisotropic, P.Framebuffer, P.GetBufferSubDataAsync, P.LoseContext, P.OesElementIndexUint, P.OesStandardDerivatives, P.OesTextureFloat, P.OesTextureFloatLinear, P.OesTextureHalfFloat, P.OesTextureHalfFloatLinear, P.OesVertexArrayObject, P.Program, P.Query, P.Renderbuffer, P.RenderingContext, P.RenderingContext2, P.Sampler, P.Shader, P.ShaderPrecisionFormat, P.Sync, P.Texture, P.TimerQueryExt, P.TransformFeedback, P.UniformLocation, P.VertexArrayObject, P.VertexArrayObjectOes, P.WebGL, P._WebGL2RenderingContextBase, P._WebGLRenderingContextBase, P.SqlDatabase, P.SqlError, P.SqlResultSet, P._SqlResultSetRowList_Interceptor_ListMixin, P.SqlTransaction]);
    _inherit(J.JSMutableIndexable, J.JSIndexable);
    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);
    _inheritMany(P.Converter, [H.CastConverter, P._UnicodeSubsetEncoder, P._UnicodeSubsetDecoder, P.Base64Encoder, P.Base64Decoder, P._FusedConverter, P.HtmlEscape, P.JsonEncoder, P.JsonUtf8Encoder, P.JsonDecoder, P.Utf8Encoder, P.Utf8Decoder, P.ZLibEncoder, P.ZLibDecoder, P._WindowsCodePageEncoder, P._WindowsCodePageDecoder]);
    _inheritMany(P.Iterable, [H._CastIterableBase, H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.ExpandIterable, H.TakeIterable, H.TakeWhileIterable, H.SkipIterable, H.SkipWhileIterable, H.FollowedByIterable, H.WhereTypeIterable, P.IterableBase, H._ConstantMapKeyIterable, H._StringAllMatchesIterable, P.LinkedList0, P.DoubleLinkedQueue, P.Runes]);
    _inheritMany(H._CastIterableBase, [H.CastIterable, H.__CastListBase__CastIterableBase_ListMixin, H.CastSet, H.CastQueue]);
    _inherit(H._EfficientLengthCastIterable, H.CastIterable);
    _inherit(H._CastListBase, H.__CastListBase__CastIterableBase_ListMixin);
    _inherit(H.CastList, H._CastListBase);
    _inherit(P.MapBase, P.MapMixin);
    _inheritMany(P.MapBase, [H.CastMap, P.UnmodifiableMapBase, H.JsLinkedHashMap, P._HashMap, P._JsonMap, W._AttributeMap, W._DataAttributeMap, P._CaseInsensitiveStringMap]);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inheritMany(P.ListBase, [H.UnmodifiableListBase, H.FixedLengthListBase, W._ChildrenElementList, W.ElementList, W._FrozenElementList, W._ChildNodeListLazy, W._WrappedList, P.FilteredElementList]);
    _inheritMany(H.UnmodifiableListBase, [H.CodeUnits, P.UnmodifiableListView, P._UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableInt8ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableUint8ClampedListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableUint16ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableInt16ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableUint32ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableInt32ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableUint64ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableInt64ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableInt32x4ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableFloat32x4ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableFloat64x2ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableFloat32ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableFloat64ListView_UnmodifiableListBase__UnmodifiableListMixin]);
    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.EmptyIterable, H.LinkedHashMapKeyIterable, P._HashMapKeyIterable, P._Es6MapIterable, P._MapBaseValueIterable, P._SplayTreeKeyIterable, P._SplayTreeValueIterable, P.Set]);
    _inheritMany(H.ListIterable, [H.SubListIterable, H.MappedListIterable, H._ListIndicesIterable, H.ReversedListIterable, P.ListQueue, P._JsonMapKeyIterable, P._GeneratorIterable]);
    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);
    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.TakeWhileIterator, H.SkipIterator, H.SkipWhileIterator]);
    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);
    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);
    _inherit(H.EfficientLengthFollowedByIterable, H.FollowedByIterable);
    _inheritMany(P.IterableBase, [H.LinkedList, H._AllMatchesIterable, P._SyncStarIterable]);
    _inherit(H.ListMapView, P.UnmodifiableMapBase);
    _inherit(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P.MapView);
    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(H.ConstantMapView, P.UnmodifiableMapView);
    _inheritMany(H.ConstantMap, [H.ConstantStringMap, H.GeneralConstantMap]);
    _inherit(H.ConstantProtoMap, H.ConstantStringMap);
    _inheritMany(H.Closure, [H.Instantiation, H.Primitives_functionNoSuchMethod_closure, H.unwrapException_saveStackTrace, H.Closure_fromTearOff_closure, H.TearOffClosure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._SyncBroadcastStreamController__sendData_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncComplete_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_length_closure, P.Stream_length_closure0, P._PendingEvents_schedule_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallback_closure, P._RootZone_bindCallbackGuarded_closure, P._RootZone_bindUnaryCallbackGuarded_closure, P.MapBase_mapToString_closure, P._convertJsonToDart_walk, P._symbolMapToStringMap_closure, P.NoSuchMethodError_toString_closure, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, W._EventStreamSubscription_closure, P.FilteredElementList__iterable_closure, P.FilteredElementList__iterable_closure0, P.FilteredElementList_removeRange_closure, P.JsObject__convertDataTree__convert, P._convertToJS_closure, P._convertToJS_closure0, P._wrapToDart_closure, P._wrapToDart_closure0, P._wrapToDart_closure1, L.ChromeAlarms$__closure, B.ChromeAppRuntime$__closure, B._ChromeAppWindow$__closure, B.AppWindow_onClosed_closure, B.AppWindow__streamFor_closure, Q.ChromeAudio$__closure, Q.ChromeAudio$__closure0, Q.ChromeBluetooth$__closure, V.ChromeFileSystem$__closure, R.ChromeI18N_getAcceptLanguages_closure, Q.ChromeIdentity$__closure, V.ChromeIdle$__closure, V._createIdleState_closure, S.ChromePermissions$__closure, T.ChromeRuntime$__closure, T._createOnRestartRequiredReason_closure, T._createRequestUpdateCheckStatus_closure, N.ChromeStorage$__closure, O.ChromeSyncFileSystem$__closure, Q.ChromeSystemDisplay$__closure, Q.ChromeSystemStorage$__closure, G.ChromeTts$__closure, G.ChromeTts_getVoices_closure, F.ChromeCompleter$noArgs_closure, F.ChromeCompleter$oneArg_closure, F.ChromeCompleter$twoArgs_closure, F.ChromeStreamController$noArgs_closure, F.ChromeStreamController$oneArg_closure, F.ChromeStreamController$twoArgs_closure, F.ChromeStreamController$threeArgs_closure, M.CrEntry_moveTo_closure, M.CrEntry_getMetadata_closure, M.CrEntry_getParent_closure, M.CrDirectoryEntry_createFile_closure, M.CrDirectoryEntry_getFile_closure, M.CrDirectoryReader_readEntries_closure, M.CrDirectoryReader_readEntries_closure0, M.CrDirectoryReader_readEntries__closure, M.ChromeFileEntry_readText_closure, M.ChromeFileEntry_readText__closure, M.ChromeFileEntry_readText__closure0, M.ChromeFileEntry_readBytes_closure, M.ChromeFileEntry_readBytes__closure, M.ChromeFileEntry_readBytes__closure0, M.ChromeFileEntry_writeText_closure, M.ChromeFileEntry_writeText__closure, M.ChromeFileEntry_writeText__closure0, M.ChromeFileEntry_writeBytes_closure, M.ChromeFileEntry_writeBytes__closure, M.ChromeFileEntry_writeBytes__closure0, M.ChromeFileEntry__createWriter_closure, M._ChromeCompleterWithError$noArgs_closure, M._ChromeCompleterWithError$oneArg_closure, N.main_closure, N.main_closure0, N.main_closure1, N.main_closure2, N.main_closure3, N.main_closure4, N.main_closure5, N.main_closure6, N.main_closure7, N.main_closure8, N.action_closure, N.summaryFuture_closure, N.summaryFuture_closure0, N.handleI18NLanguages_closure, N.handleIdleQueryState_closure, N.handlePermissionsGetAll_closure, N.handlePermissionsOrigins_closure, N.handleGetVoices_closure, N.handleGetVoices__closure, N.handleGetPlatformInfo_closure, N.handleGetPackageDirectoryEntry_closure, N.handleRuntimeRequestUpdateCheck_closure, N.handleAudioGetInfo_closure, N.handleAppWindowCreate_closure, N.handleAppWindowCreate__closure, N.handleAppWindowCreate__closure0, N.handleAppWindowCreateOptions_closure, N.handleAppWindowCreateOptions__closure, N.handleSystemCpu_closure, N.handleSystemMemory_closure, N.handleStorageStore_closure, N.handleChooseEntry_closure, N.handleChooseEntry__closure, N.handleChooseEntryDir_closure, N.handleFileRead_closure, N.handleFileReadBytes_closure, N.handleFileReadBytes__closure, N.handleDirInfo_closure, N.handleDirGetFile_closure, N.handleDirGetFile__closure, N.handleGetFileMetaData_closure, N.handleGetFileMetaData__closure, N.handleGetFileMetaData___closure, N.handleDirListings_closure, N.handleDirListings__closure, N.handleFileCreate_closure, N.handleFileCreate__closure, N.handleFileWrite_closure, N.handleFileWrite__closure, N.handleFileWriteBytes_closure, N.handleFileWriteBytes__closure, N.handleFileRename_closure, N.handleFileRename__closure, N.handleFileDelete_closure, N.handleFileDelete__closure, N.handleBluetoothGetAdapterState_closure, N.handleIdentityGetAuthToken_closure]);
    _inheritMany(H.Instantiation, [H.Instantiation1, H.Instantiation2, H.Instantiation3, H.Instantiation4, H.Instantiation5, H.Instantiation6, H.Instantiation7, H.Instantiation8, H.Instantiation9, H.Instantiation10, H.Instantiation11, H.Instantiation12, H.Instantiation13, H.Instantiation14, H.Instantiation15, H.Instantiation16, H.Instantiation17, H.Instantiation18, H.Instantiation19, H.Instantiation20]);
    _inheritMany(P.Error, [H.NullError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.TypeErrorImplementation, H.CastErrorImplementation, P.FallThroughError, H.RuntimeError, H.DeferredNotLoadedError, H.UnimplementedNoSuchMethodError, H.MainError, P.AssertionError, P.JsonUnsupportedObjectError, P._CompileTimeError, P._DuplicatedFieldInitializerError, P.CastError, P.NullThrownError, P.ArgumentError, P.AbstractClassInstantiationError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError]);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inherit(H.JavaScriptIndexingBehavior, J.JSMutableIndexable);
    _inherit(H.FallThroughErrorImplementation, P.FallThroughError);
    _inheritMany(P.AssertionError, [H._AssertionError, H._UnreachableError, P.TypeError]);
    _inheritMany(H.JsLinkedHashMap, [H.Es6LinkedHashMap, P._LinkedIdentityHashMap, P._LinkedCustomHashMap]);
    _inherit(H._LazyMangledInstanceNamesMap, H._LazyMangledNamesMap);
    _inherit(H._NativeFloat32x4List_Object_ListMixin_FixedLengthListMixin, H._NativeFloat32x4List_Object_ListMixin);
    _inherit(H.NativeFloat32x4List, H._NativeFloat32x4List_Object_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeInt32x4List_Object_ListMixin_FixedLengthListMixin, H._NativeInt32x4List_Object_ListMixin);
    _inherit(H.NativeInt32x4List, H._NativeInt32x4List_Object_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeFloat64x2List_Object_ListMixin_FixedLengthListMixin, H._NativeFloat64x2List_Object_ListMixin);
    _inherit(H.NativeFloat64x2List, H._NativeFloat64x2List_Object_ListMixin_FixedLengthListMixin);
    _inheritMany(H.NativeTypedData, [H.NativeByteData, H.NativeTypedArray]);
    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(H.NativeTypedArrayOfDouble, [H.NativeFloat32List, H.NativeFloat64List]);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);
    _inheritMany(P._StreamImpl, [P._ControllerStream, P._GeneratedStreamImpl]);
    _inherit(P._BroadcastStream, P._ControllerStream);
    _inheritMany(P._BufferingStreamSubscription, [P._ControllerSubscription, P._ForwardingStreamSubscription, P._SinkTransformerStreamSubscription]);
    _inherit(P._BroadcastSubscription, P._ControllerSubscription);
    _inheritMany(P._BroadcastStreamController, [P._SyncBroadcastStreamController, P._AsyncBroadcastStreamController]);
    _inherit(P._AsBroadcastStreamController, P._SyncBroadcastStreamController);
    _inheritMany(P._Completer, [P._AsyncCompleter, P._SyncCompleter]);
    _inheritMany(P._StreamController, [P._AsyncStreamController, P._SyncStreamController]);
    _inherit(P._StreamControllerAddStreamState, P._AddStreamState);
    _inheritMany(P._PendingEvents, [P._IterablePendingEvents, P._StreamImplEvents]);
    _inheritMany(P._DelayedEvent, [P._DelayedData, P._DelayedError]);
    _inheritMany(P._ForwardingStream, [P._WhereStream, P._MapStream, P._ExpandStream, P._HandleErrorStream, P._TakeStream, P._TakeWhileStream, P._SkipStream, P._SkipWhileStream, P._DistinctStream]);
    _inherit(P._StateStreamSubscription, P._ForwardingStreamSubscription);
    _inherit(P._StreamHandlerTransformer, P._StreamSinkTransformer);
    _inheritMany(P._Zone, [P._CustomZone, P._RootZone]);
    _inheritMany(P._HashMap, [P._IdentityHashMap, P._CustomHashMap]);
    _inherit(P._Es6LinkedIdentityHashMap, P._LinkedIdentityHashMap);
    _inheritMany(P._SetBase, [P._HashSet, P._LinkedHashSet, P._UnmodifiableSet]);
    _inheritMany(P._HashSet, [P._IdentityHashSet, P._CustomHashSet]);
    _inheritMany(P._LinkedHashSet, [P._LinkedIdentityHashSet, P._LinkedCustomHashSet]);
    _inherit(P.DoubleLinkedQueueEntry, P._DoubleLink);
    _inherit(P._DoubleLinkedQueueEntry, P.DoubleLinkedQueueEntry);
    _inheritMany(P._DoubleLinkedQueueEntry, [P._DoubleLinkedQueueElement, P._DoubleLinkedQueueSentinel]);
    _inherit(P.SetBase, P._SetBase_Object_SetMixin);
    _inherit(P._SplayTreeMapNode, P._SplayTreeNode);
    _inheritMany(P._SplayTree, [P._SplayTreeMap__SplayTree_MapMixin, P._SplayTreeSet__SplayTree_IterableMixin]);
    _inherit(P.SplayTreeMap, P._SplayTreeMap__SplayTree_MapMixin);
    _inheritMany(P._SplayTreeIterator, [P._SplayTreeKeyIterator, P._SplayTreeValueIterator, P._SplayTreeNodeIterator]);
    _inherit(P._SplayTreeSet__SplayTree_IterableMixin_SetMixin, P._SplayTreeSet__SplayTree_IterableMixin);
    _inherit(P.SplayTreeSet, P._SplayTreeSet__SplayTree_IterableMixin_SetMixin);
    _inherit(P.StringConversionSinkBase, P.StringConversionSinkMixin);
    _inheritMany(P.StringConversionSinkBase, [P._StringSinkConversionSink, P._UnicodeSubsetEncoderSink, P._Base64DecoderSink, P._HtmlEscapeSink, P._LineSplitterSink, P._StringAdapterSink, P._WindowsCodePageEncoderSink]);
    _inheritMany(P._StringSinkConversionSink, [P._JsonDecoderSink, P._StringCallbackSink]);
    _inheritMany(P.Codec, [P.Encoding, P.Base64Codec, P._FusedCodec, P._InvertedCodec, P.JsonCodec, P.ZLibCodec, P.GZipCodec]);
    _inheritMany(P.Encoding, [P.AsciiCodec, P.Latin1Codec, P.Utf8Codec, P.SystemEncoding]);
    _inheritMany(P._UnicodeSubsetEncoder, [P.AsciiEncoder, P.Latin1Encoder]);
    _inheritMany(P._UnicodeSubsetDecoder, [P.AsciiDecoder, P.Latin1Decoder]);
    _inheritMany(P.ByteConversionSinkBase, [P._ErrorHandlingAsciiDecoderSink, P._SimpleAsciiDecoderSink, P._Base64EncoderSink, P._ByteAdapterSink, P._ByteCallbackSink, P._Latin1DecoderSink, P._WindowsCodePageDecoderSink]);
    _inherit(P._BufferCachingBase64Encoder, P._Base64Encoder);
    _inheritMany(P._Base64EncoderSink, [P._AsciiBase64EncoderSink, P._Utf8Base64EncoderSink]);
    _inherit(P.JsonCyclicError, P.JsonUnsupportedObjectError);
    _inheritMany(P._JsonStringifier, [P._JsonStringStringifier, P._JsonUtf8Stringifier]);
    _inherit(P.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin, P._JsonStringStringifier);
    _inherit(P._JsonStringStringifierPretty, P.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin);
    _inherit(P.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin, P._JsonUtf8Stringifier);
    _inherit(P._JsonUtf8StringifierPretty, P.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin);
    _inherit(P._Latin1AllowInvalidDecoderSink, P._Latin1DecoderSink);
    _inherit(P._LineSplitterEventSink, P._LineSplitterSink);
    _inherit(P.ClosableStringSink, P.StringSink);
    _inherit(P.__Utf8EncoderSink__Utf8Encoder_StringConversionSinkMixin, P._Utf8Encoder);
    _inherit(P._Utf8EncoderSink, P.__Utf8EncoderSink__Utf8Encoder_StringConversionSinkMixin);
    _inheritMany(P.num, [P.double, P.int]);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inherit(P._DataUri, P._Uri);
    _inheritMany(P.Metric, [P.Gauge, P.Counter]);
    _inheritMany(W.EventTarget, [W.Node, W.Sensor, W.AccessibleNode, W.Animation, W.ApplicationCache, W.BackgroundFetchRegistration, W.BatteryManager, W.BroadcastChannel, W.MediaStreamTrack, W.WorkerGlobalScope, W.EventSource, W.FileReader, W.FileWriter, W.FontFaceSet, W.HttpRequestEventTarget, W.MediaDevices, W.MediaKeySession, W.MediaQueryList, W.MediaRecorder, W.MediaSource, W.MediaStream, W.MessagePort, W.MidiAccess, W.MidiPort, W.NetworkInformation, W.Notification, W.OffscreenCanvas, W.PaymentRequest, W.Performance, W.PermissionStatus, W.PresentationAvailability, W.PresentationConnection, W.PresentationConnectionList, W.PresentationRequest, W.RemotePlayback, W.RtcDataChannel, W.RtcDtmfSender, W.RtcPeerConnection, W.ScreenOrientation, W.ServiceWorker, W.ServiceWorkerContainer, W.ServiceWorkerRegistration, W.SharedWorker, W.SourceBuffer, W._SourceBufferList_EventTarget_ListMixin, W.SpeechRecognition, W.SpeechSynthesis, W.SpeechSynthesisUtterance, W.TextTrack, W.TextTrackCue, W._TextTrackList_EventTarget_ListMixin, W.VR, W.VRDevice, W.VRDisplay, W.VRSession, W.VideoTrackList, W.VisualViewport, W.WebSocket0, W.Window, W.WindowEventHandlers, W.Worker, W.WorkerPerformance, W._BluetoothDevice, W._BluetoothRemoteGATTCharacteristic, W._Clipboard, W._MojoInterfaceInterceptor, W._USB, P.Database, P.Request, P.Transaction, P.AudioNode, P.BaseAudioContext, P.AudioTrackList]);
    _inheritMany(W.Node, [W.Element, W.CharacterData, W.Document, W.DocumentFragment, W._Attr, W._DocumentType]);
    _inheritMany(W.Element, [W.HtmlElement, P.SvgElement]);
    _inheritMany(W.Event, [W.ExtendableEvent, W.AnimationEvent, W.AnimationPlaybackEvent, W.ApplicationCacheErrorEvent, W.BeforeInstallPromptEvent, W.BeforeUnloadEvent, W.BlobEvent, W.ClipboardEvent, W.CloseEvent, W.UIEvent, W.CustomEvent, W.DeviceMotionEvent, W.DeviceOrientationEvent, W.ErrorEvent, W.FontFaceSetLoadEvent, W.GamepadEvent, W.HashChangeEvent, W.MediaEncryptedEvent, W.MediaKeyMessageEvent, W.MediaQueryListEvent, W.MediaStreamEvent, W.MediaStreamTrackEvent, W.MessageEvent, W.MidiConnectionEvent, W.MidiMessageEvent, W.MutationEvent, W.PageTransitionEvent, W.PaymentRequestUpdateEvent, W.PopStateEvent, W.PresentationConnectionAvailableEvent, W.PresentationConnectionCloseEvent, W.ProgressEvent, W.PromiseRejectionEvent, W.RtcDataChannelEvent, W.RtcDtmfToneChangeEvent, W.RtcPeerConnectionIceEvent, W.RtcTrackEvent, W.SecurityPolicyViolationEvent, W.SensorErrorEvent, W.SpeechRecognitionError, W.SpeechRecognitionEvent, W.SpeechSynthesisEvent, W.StorageEvent, W.TrackEvent, W.TransitionEvent, W.VRDeviceEvent, W.VRDisplayEvent, W.VRSessionEvent, W._MojoInterfaceRequestEvent, W._USBConnectionEvent, P.VersionChangeEvent, P.AudioProcessingEvent, P.OfflineAudioCompletionEvent, P.ContextEvent]);
    _inheritMany(W.ExtendableEvent, [W.AbortPaymentEvent, W.BackgroundFetchEvent, W.CanMakePaymentEvent, W.ExtendableMessageEvent, W.FetchEvent, W.ForeignFetchEvent, W.InstallEvent, W.NotificationEvent, W.PaymentRequestEvent, W.PushEvent, W.SyncEvent]);
    _inheritMany(W.Sensor, [W.OrientationSensor, W.Accelerometer, W.AmbientLightSensor, W.Gyroscope, W.Magnetometer]);
    _inheritMany(W.OrientationSensor, [W.AbsoluteOrientationSensor, W.RelativeOrientationSensor]);
    _inheritMany(W.HtmlElement, [W.AnchorElement, W.AreaElement, W.MediaElement, W.BRElement, W.BaseElement, W.BodyElement, W.ButtonElement, W.CanvasElement, W.ContentElement, W.DListElement, W.DataElement, W.DataListElement, W.DetailsElement, W.DialogElement, W.DivElement, W.EmbedElement, W.FieldSetElement, W.FormElement, W.HRElement, W.HeadElement, W.HeadingElement, W.HtmlHtmlElement, W.IFrameElement, W.ImageElement, W.InputElement, W.LIElement, W.LabelElement, W.LegendElement, W.LinkElement, W.MapElement, W.MenuElement, W.MetaElement, W.MeterElement, W.ModElement, W.OListElement, W.ObjectElement, W.OptGroupElement, W.OptionElement, W.OutputElement, W.ParagraphElement, W.ParamElement, W.PictureElement, W.PreElement, W.ProgressElement, W.QuoteElement, W.ScriptElement, W.SelectElement, W.ShadowElement, W.SlotElement, W.SourceElement, W.SpanElement, W.StyleElement, W.TableCaptionElement, W.TableCellElement, W.TableColElement, W.TableElement, W.TableRowElement, W.TableSectionElement, W.TemplateElement, W.TextAreaElement, W.TimeElement, W.TitleElement, W.TrackElement, W.UListElement, W.UnknownElement, W._HTMLDirectoryElement, W._HTMLFontElement, W._HTMLFrameElement, W._HTMLFrameSetElement, W._HTMLMarqueeElement]);
    _inherit(W.AnimationEffectTiming, W.AnimationEffectTimingReadOnly);
    _inheritMany(W.WorkletGlobalScope, [W.AnimationWorkletGlobalScope, W.PaintWorkletGlobalScope, P.AudioWorkletGlobalScope]);
    _inheritMany(W.MediaElement, [W.AudioElement, W.VideoElement]);
    _inheritMany(W.AuthenticatorResponse, [W.AuthenticatorAssertionResponse, W.AuthenticatorAttestationResponse]);
    _inheritMany(W.BackgroundFetchEvent, [W.BackgroundFetchClickEvent, W.BackgroundFetchFailEvent, W.BackgroundFetchedEvent]);
    _inherit(W.BackgroundFetchSettledFetch, W.BackgroundFetchFetch);
    _inheritMany(W.CharacterData, [W.Text, W.Comment, W.ProcessingInstruction]);
    _inherit(W.CDataSection, W.Text);
    _inherit(W.CanvasCaptureMediaStreamTrack, W.MediaStreamTrack);
    _inheritMany(W.UIEvent, [W.CompositionEvent, W.FocusEvent, W.KeyboardEvent, W.MouseEvent, W.TextEvent, W.TouchEvent]);
    _inheritMany(W.CssRule, [W.CssCharsetRule, W.CssGroupingRule, W.CssFontFaceRule, W.CssImportRule, W.CssKeyframeRule, W.CssKeyframesRule, W.CssNamespaceRule, W.CssPageRule, W.CssStyleRule, W.CssViewportRule]);
    _inherit(W.CssConditionRule, W.CssGroupingRule);
    _inheritMany(W.CssStyleValue, [W.CssResourceValue, W.CssKeywordValue, W.CssNumericValue, W.CssPositionValue, W.CssTransformValue, W.CssUnparsedValue]);
    _inherit(W.CssImageValue, W.CssResourceValue);
    _inheritMany(W.CssTransformComponent, [W.CssMatrixComponent, W.CssPerspective, W.CssRotation, W.CssScale, W.CssSkew, W.CssTranslation]);
    _inheritMany(W.CssConditionRule, [W.CssMediaRule, W.CssSupportsRule]);
    _inherit(W.CssStyleDeclaration, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase);
    _inherit(W._CssStyleDeclarationSet, W.__CssStyleDeclarationSet_Object_CssStyleDeclarationBase);
    _inherit(W.CssStyleSheet, W.StyleSheet);
    _inherit(W.CssUnitValue, W.CssNumericValue);
    _inherit(W.CssurlImageValue, W.CssImageValue);
    _inheritMany(W.WorkerGlobalScope, [W.DedicatedWorkerGlobalScope, W.ServiceWorkerGlobalScope, W.SharedWorkerGlobalScope]);
    _inheritMany(W.ReportBody, [W.DeprecationReport, W.InterventionReport]);
    _inheritMany(W.Entry, [W.DirectoryEntry, W.FileEntry]);
    _inheritMany(W.AnimationTimeline, [W.DocumentTimeline, W.ScrollTimeline]);
    _inherit(W.DomMatrix, W.DomMatrixReadOnly);
    _inherit(W.DomPoint, W.DomPointReadOnly);
    _inherit(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W._DomRectList_Interceptor_ListMixin);
    _inherit(W.DomRectList, W._DomRectList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W._DomStringList_Interceptor_ListMixin);
    _inherit(W.DomStringList, W._DomStringList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.ElementEvents, W.Events);
    _inheritMany(W.Credential, [W.FederatedCredential, W.PasswordCredential, W.PublicKeyCredential]);
    _inherit(W.File, W.Blob);
    _inherit(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W._FileList_Interceptor_ListMixin);
    _inherit(W.FileList, W._FileList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W._HtmlCollection_Interceptor_ListMixin);
    _inherit(W.HtmlCollection, W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.Document, [W.HtmlDocument, W.XmlDocument]);
    _inheritMany(W.HtmlCollection, [W.HtmlFormControlsCollection, W.HtmlOptionsCollection]);
    _inheritMany(W.HttpRequestEventTarget, [W.HttpRequest0, W.HttpRequestUpload]);
    _inherit(W.KeyframeEffectReadOnly, W.AnimationEffectReadOnly);
    _inherit(W.KeyframeEffect, W.KeyframeEffectReadOnly);
    _inherit(W.LinearAccelerationSensor, W.Accelerometer);
    _inheritMany(W.MidiPort, [W.MidiInput, W.MidiOutput]);
    _inherit(W.MidiInputMap, W._MidiInputMap_Interceptor_MapMixin);
    _inherit(W.MidiOutputMap, W._MidiOutputMap_Interceptor_MapMixin);
    _inherit(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W._MimeTypeArray_Interceptor_ListMixin);
    _inherit(W.MimeTypeArray, W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.NavigatorConcurrentHardware, [W.Navigator, W._WorkerNavigator]);
    _inherit(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W._NodeList_Interceptor_ListMixin);
    _inherit(W.NodeList, W._NodeList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.PerformanceEntry, [W.PerformanceLongTaskTiming, W.PerformanceMark, W.PerformanceMeasure, W.PerformanceResourceTiming, W.PerformancePaintTiming, W.TaskAttributionTiming]);
    _inherit(W.PerformanceNavigationTiming, W.PerformanceResourceTiming);
    _inherit(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W._PluginArray_Interceptor_ListMixin);
    _inherit(W.PluginArray, W._PluginArray_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.MouseEvent, [W.PointerEvent, W.WheelEvent]);
    _inherit(W.RtcStatsReport, W._RtcStatsReport_Interceptor_MapMixin);
    _inherit(W.ShadowRoot, W.DocumentFragment);
    _inherit(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W._SourceBufferList_EventTarget_ListMixin);
    _inherit(W.SourceBufferList, W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W._SpeechGrammarList_Interceptor_ListMixin);
    _inherit(W.SpeechGrammarList, W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.Storage, W._Storage_Interceptor_MapMixin);
    _inherit(W.StylePropertyMap, W.StylePropertyMapReadonly);
    _inherit(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W._TextTrackCueList_Interceptor_ListMixin);
    _inherit(W.TextTrackCueList, W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W._TextTrackList_EventTarget_ListMixin);
    _inherit(W.TextTrackList, W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W._TouchList_Interceptor_ListMixin);
    _inherit(W.TouchList, W._TouchList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.VRFrameOfReference, W.VRCoordinateSystem);
    _inherit(W.VttCue, W.TextTrackCue);
    _inheritMany(W._WrappedEvent, [W._BeforeUnloadEvent, W.KeyEvent]);
    _inherit(W.WindowClient, W.Client);
    _inherit(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.__CssRuleList_Interceptor_ListMixin);
    _inherit(W._CssRuleList, W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W._EntrySync, [W._DirectoryEntrySync, W._FileEntrySync]);
    _inherit(W._DomRect, W.DomRectReadOnly);
    _inherit(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.__GamepadList_Interceptor_ListMixin);
    _inherit(W._GamepadList, W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.__NamedNodeMap_Interceptor_ListMixin);
    _inherit(W._NamedNodeMap, W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.Body, [W._Request, W._Response]);
    _inherit(W._ResourceProgressEvent, W.ProgressEvent);
    _inherit(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin);
    _inherit(W._SpeechRecognitionResultList, W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.__StyleSheetList_Interceptor_ListMixin);
    _inherit(W._StyleSheetList, W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W._AttributeMap, [W._ElementAttributeMap, W._NamespacedAttributeMap]);
    _inheritMany(W.CssRect, [W._ContentCssRect, W._PaddingCssRect, W._BorderCssRect, W._MarginCssRect]);
    _inherit(W._ContentCssListRect, W._ContentCssRect);
    _inherit(P.CssClassSetImpl, P.SetBase);
    _inheritMany(P.CssClassSetImpl, [W._MultiElementCssClassSet, W._ElementCssClassSet, P.AttributeClassSet]);
    _inherit(W._ElementEventStreamImpl, W._EventStream);
    _inherit(W._EventStreamSubscription, P.StreamSubscription);
    _inherit(W._CustomKeyEventStreamImpl, W._CustomEventStreamImpl);
    _inherit(W._KeyboardEventHandler, W.EventStreamProvider);
    _inheritMany(W._SimpleNodeValidator, [W._CustomElementNodeValidator, W._TemplatingNodeValidator]);
    _inherit(P._StructuredCloneDart2Js, P._StructuredClone);
    _inherit(P._AcceptStructuredCloneDart2Js, P._AcceptStructuredClone);
    _inherit(P.CursorWithValue, P.Cursor);
    _inherit(P.OpenDBRequest, P.Request);
    _inheritMany(P._FilterSink, [P._ZLibEncoderSink, P._ZLibDecoderSink]);
    _inheritMany(P.FileSystemEntity, [P._Directory, P._File, P._Link]);
    _inherit(P._FileStreamConsumer, P.StreamConsumer);
    _inheritMany(P.FileSystemEvent, [P.FileSystemCreateEvent, P.FileSystemModifyEvent, P.FileSystemDeleteEvent, P.FileSystemMoveEvent]);
    _inheritMany(P._IOResourceInfo, [P._ReadWriteResourceInfo, P._ProcessResourceInfo]);
    _inheritMany(P._ReadWriteResourceInfo, [P._FileResourceInfo, P._SocketResourceInfo]);
    _inherit(P._IOSinkImpl0, P._StreamSinkImpl0);
    _inherit(P._IOOverridesScope, P.IOOverrides);
    _inheritMany(P.TlsException, [P.HandshakeException, P.CertificateException]);
    _inherit(P.Stdin, P._StdStream);
    _inherit(P.Stdout, P._StdSink);
    _inheritMany(P.JsObject, [P.JsFunction, P._JsArray_JsObject_ListMixin]);
    _inherit(P.JsArray, P._JsArray_JsObject_ListMixin);
    _inheritMany(P._RectangleBase, [P.Rectangle, P.MutableRectangle]);
    _inherit(P.TypeVariableMirror, P.TypeMirror);
    _inheritMany(P.SvgElement, [P.GraphicsElement, P.AnimationElement, P.DescElement, P.DiscardElement, P.FEBlendElement, P.FEColorMatrixElement, P.FEComponentTransferElement, P.FECompositeElement, P.FEConvolveMatrixElement, P.FEDiffuseLightingElement, P.FEDisplacementMapElement, P.FEDistantLightElement, P.FEFloodElement, P._SVGComponentTransferFunctionElement, P.FEGaussianBlurElement, P.FEImageElement, P.FEMergeElement, P.FEMergeNodeElement, P.FEMorphologyElement, P.FEOffsetElement, P.FEPointLightElement, P.FESpecularLightingElement, P.FESpotLightElement, P.FETileElement, P.FETurbulenceElement, P.FilterElement, P._GradientElement, P.MarkerElement, P.MaskElement, P.MetadataElement, P.PatternElement, P.ScriptElement0, P.StopElement, P.StyleElement0, P.SymbolElement, P.TitleElement0, P.ViewElement, P._SVGFEDropShadowElement, P._SVGMPathElement]);
    _inheritMany(P.GraphicsElement, [P.AElement, P.GeometryElement, P.ClipPathElement, P.DefsElement, P.ForeignObjectElement, P.GElement, P.ImageElement0, P.SvgSvgElement, P.SwitchElement, P.TextContentElement, P.UseElement]);
    _inheritMany(P.AnimationElement, [P.AnimateElement, P.AnimateMotionElement, P.AnimateTransformElement, P.SetElement]);
    _inheritMany(P.GeometryElement, [P.CircleElement, P.EllipseElement, P.LineElement, P.PathElement, P.PolygonElement, P.PolylineElement, P.RectElement]);
    _inheritMany(P._SVGComponentTransferFunctionElement, [P.FEFuncAElement, P.FEFuncBElement, P.FEFuncGElement, P.FEFuncRElement]);
    _inherit(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, P._LengthList_Interceptor_ListMixin);
    _inherit(P.LengthList, P._LengthList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(P._GradientElement, [P.LinearGradientElement, P.RadialGradientElement]);
    _inherit(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, P._NumberList_Interceptor_ListMixin);
    _inherit(P.NumberList, P._NumberList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._StringList_Interceptor_ListMixin_ImmutableListMixin, P._StringList_Interceptor_ListMixin);
    _inherit(P.StringList, P._StringList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(P.TextContentElement, [P.TextPositioningElement, P.TextPathElement]);
    _inheritMany(P.TextPositioningElement, [P.TSpanElement, P.TextElement]);
    _inherit(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, P._TransformList_Interceptor_ListMixin);
    _inherit(P.TransformList, P._TransformList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(P.TypedData, [P._TypedIntList, P._TypedFloatList]);
    _inherit(P.UnmodifiableUint8ListView, P._UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableInt8ListView, P._UnmodifiableInt8ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableUint8ClampedListView, P._UnmodifiableUint8ClampedListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableUint16ListView, P._UnmodifiableUint16ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableInt16ListView, P._UnmodifiableInt16ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableUint32ListView, P._UnmodifiableUint32ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableInt32ListView, P._UnmodifiableInt32ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableUint64ListView, P._UnmodifiableUint64ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableInt64ListView, P._UnmodifiableInt64ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableInt32x4ListView, P._UnmodifiableInt32x4ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableFloat32x4ListView, P._UnmodifiableFloat32x4ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableFloat64x2ListView, P._UnmodifiableFloat64x2ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableFloat32ListView, P._UnmodifiableFloat32ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(P.UnmodifiableFloat64ListView, P._UnmodifiableFloat64ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inheritMany(P.AudioNode, [P.AnalyserNode, P.AudioScheduledSourceNode, P.AudioDestinationNode, P.AudioWorkletNode, P.BiquadFilterNode, P.ChannelMergerNode, P.ChannelSplitterNode, P.ConvolverNode, P.DelayNode, P.DynamicsCompressorNode, P.GainNode, P.IirFilterNode, P.MediaElementAudioSourceNode, P.MediaStreamAudioDestinationNode, P.MediaStreamAudioSourceNode, P.PannerNode, P.ScriptProcessorNode, P.StereoPannerNode, P.WaveShaperNode]);
    _inheritMany(P.AudioScheduledSourceNode, [P.AudioBufferSourceNode, P.ConstantSourceNode, P.OscillatorNode]);
    _inheritMany(P.BaseAudioContext, [P.AudioContext, P.OfflineAudioContext]);
    _inherit(P.AudioParamMap, P._AudioParamMap_Interceptor_MapMixin);
    _inherit(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, P._SqlResultSetRowList_Interceptor_ListMixin);
    _inherit(P.SqlResultSetRowList, P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(Z.ChromeApi, [L.ChromeAlarms, B.ChromeAppRuntime, B._ChromeAppWindow, Q.ChromeAudio, Q.ChromeBluetooth, R.ChromeBluetoothLowEnergy, L.ChromeBluetoothSocket, K.ChromeBrowser, Q.ChromeCommands, F.ChromeContextMenus, A.ChromeDocumentScan, L.ChromeEvents, T.ChromeExtensionTypes, V.ChromeFileSystem, Y.ChromeFileSystemProvider, T.ChromeGcm, Y.ChromeHid, R.ChromeI18N, Q.ChromeIdentity, V.ChromeIdle, S.ChromeInstanceID, M.ChromeLocation, B.ChromeMediaGalleries, V.ChromeNotifications, S.ChromePermissions, D.ChromePower, R.ChromePrinterProvider, T.ChromeRuntime, T.ChromeSerial, A.ChromeSocketsTcp, A.ChromeSocketsTcpServer, A.ChromeSocketsUdp, N.ChromeStorage, O.ChromeSyncFileSystem, Q.ChromeSystemCpu, Q.ChromeSystemDisplay, Q.ChromeSystemMemory, Q.ChromeSystemNetwork, Q.ChromeSystemStorage, G.ChromeTabs, G.ChromeTts, Z.ChromeTypes, S.ChromeUsb, B.ChromeVpnProvider, D.ChromeWallpaper, U.ChromeWindows]);
    _inheritMany(Z.ChromeObject, [L.Alarm, L.AlarmCreateInfo, B.LaunchItem, B.ActionData, B.LaunchData, B.EmbedRequest, B.ContentBounds, B.BoundsSpecification, B.FrameOptions, B.CreateWindowOptions, B._AppWindow, Q.OutputDeviceInfo, Q.InputDeviceInfo, Q.AudioDeviceInfo, Q.DeviceFilter, Q.DeviceProperties, Q.DeviceIdLists, Q.MuteChangedEvent, Q.LevelChangedEvent, Q.AdapterState, Q.BluetoothDevice, R.Device0, R.Service0, R.Characteristic, R.Descriptor, R.ConnectProperties, R.NotificationProperties, R.ManufacturerData, R.ServiceData, R.Advertisement, R.Request0, R.Response, R.Notification0, L.BluetoothSocketProperties, L.BluetoothCreateInfo, L.ListenOptions, L.BluetoothSocketInfo, L.BluetoothAcceptInfo, L.BluetoothAcceptErrorInfo, L.BluetoothReceiveInfo, L.BluetoothReceiveErrorInfo, K.OpenTabOptions, Q.Command, F.ContextMenusCreateParams, F.ContextMenusUpdateParams, A.ScanOptions, A.ScanResults, L.Rule0, L.ChromeEvent, L.UrlFilter, T.ImageDetails, T.InjectDetails, V.AcceptOption, V.ChooseEntryOptions, V.RequestFileSystemOptions, V.Volume, V.ChildChange, V.VolumeListChangedEvent, V.EntryChangedEvent, V.EntryRemovedEvent, Y.EntryMetadata, Y.Watcher, Y.OpenedFile, Y.FileSystemInfo, Y.MountOptions, Y.UnmountOptions, Y.UnmountRequestedOptions, Y.GetMetadataRequestedOptions, Y.GetActionsRequestedOptions, Y.ReadDirectoryRequestedOptions, Y.OpenFileRequestedOptions, Y.CloseFileRequestedOptions, Y.ReadFileRequestedOptions, Y.CreateDirectoryRequestedOptions, Y.DeleteEntryRequestedOptions, Y.CreateFileRequestedOptions, Y.CopyEntryRequestedOptions, Y.MoveEntryRequestedOptions, Y.TruncateRequestedOptions, Y.WriteFileRequestedOptions, Y.AbortRequestedOptions, Y.AddWatcherRequestedOptions, Y.RemoveWatcherRequestedOptions, Y.Action, Y.ExecuteActionRequestedOptions, Y.Change, Y.NotifyOptions, Y.ConfigureRequestedOptions, T.GcmSendParams, Y.HidCollectionInfo, Y.HidDeviceInfo, Y.HidConnectInfo, Y.HidDeviceFilter, Y.HidGetDevicesOptions, Y.HidDevicePromptOptions, R.LanguageCode, Q.AccountInfo, Q.ProfileUserInfo, Q.TokenDetails, Q.InvalidTokenDetails, Q.WebAuthFlowDetails, S.InstanceIDGetTokenParams, S.InstanceIDDeleteTokenParams, M.Coordinates0, M.Location0, M.WatchLocationRequestInfo, B.GalleryChangeDetails, B.MediaFileSystemsDetails, B.MediaMetadataOptions, B.MediaFileSystemMetadata, B.ScanProgressDetails, B.StreamInfo, B.MediaMetadata0, B.AddGalleryWatchResult, V.NotificationItem, V.NotificationBitmap, V.NotificationButton, V.NotificationOptions, S.Permissions, R.PrinterInfo, R.PrintJob, T.LastErrorRuntime, T.Port, T.MessageSender, T.PlatformInfo, T.RuntimeConnectParams, T.RuntimeSendMessageParams, T.DeviceInfo, T.ConnectionOptions, T.ConnectionInfo, T.SerialSendInfo, T.HostControlSignals, T.DeviceControlSignals, T.SerialReceiveInfo, T.SerialReceiveErrorInfo, A.SocketProperties, A.CreateInfo, A.SendInfo, A.TLSVersionConstraints, A.SecureOptions, A.SocketInfo, A.ReceiveInfo, A.ReceiveErrorInfo, A.AcceptInfo, A.AcceptErrorInfo, N.StorageArea, N.StorageChange, O.FileInfo, O.FileStatusInfo, O.StorageInfo, O.ServiceInfo, Q.CpuTime, Q.ProcessorInfo, Q.CpuInfo, Q.Insets, Q.Point1, Q.TouchCalibrationPair, Q.TouchCalibrationPairQuad, Q.DisplayMode, Q.DisplayLayout, Q.DisplayUnitInfo, Q.DisplayProperties, Q.GetInfoFlags, Q.MirrorModeInfo, Q.MemoryInfo, Q.NetworkInterface0, Q.StorageUnitInfo, Q.StorageAvailableCapacityInfo, G.MutedInfo, G.Tab, G.ZoomSettings, G.TabsConnectParams, G.TabsSendMessageParams, G.TabsCreateParams, G.TabsQueryParams, G.TabsHighlightParams, G.TabsUpdateParams, G.TabsMoveParams, G.TabsReloadParams, G.TtsEvent, G.TtsVoice, G.TtsSpeakParams, Z.ChromeSetting, Z.TypesGetParams, Z.TypesSetParams, Z.TypesClearParams, S.UsbDevice, S.ConnectionHandle, S.EndpointDescriptor, S.InterfaceDescriptor, S.ConfigDescriptor, S.ControlTransferInfo, S.GenericTransferInfo, S.IsochronousTransferInfo, S.TransferResultInfo, S.UsbDeviceFilter, S.EnumerateDevicesOptions, S.EnumerateDevicesAndRequestAccessOptions, S.UsbDevicePromptOptions, B.Parameters, D.WallpaperSetWallpaperParams, U.Window0, U.WindowsGetParams, U.WindowsGetCurrentParams, U.WindowsGetLastFocusedParams, U.WindowsGetAllParams, U.WindowsCreateParams, U.WindowsUpdateParams, Z.Bounds, Z.ArrayBuffer, Z.Date, Z.LocalMediaStream, M.CrFileSystem, M.CrMetadata, M.CrEntry, M.CrDirectoryReader, M.CrBlob, M.CrFileError]);
    _inheritMany(Z.ChromeEnum, [B.LaunchSource, B.AppRuntimeActionType, B.PlayStoreStatus, B.State, B.WindowType, Q.StreamType, Q.DeviceType, Q.VendorIdSource, Q.BluetoothDeviceType, R.CharacteristicProperty, R.DescriptorPermission, R.AdvertisementType, L.AcceptError, L.BluetoothReceiveError, F.ContextType, F.ItemType, T.ImageFormat, T.RunAt, T.CSSOrigin, V.ChooseEntryType, V.ChildChangeType, Y.ProviderError, Y.OpenFileMode, Y.ChangeType, Y.CommonActionId, V.IdleState, B.GalleryChangeType, B.GetMediaFileSystemsInteractivity, B.GetMetadataType, B.ScanProgressType, V.TemplateType, V.PermissionLevel, D.Level, R.PrintError, T.PlatformOs, T.PlatformArch, T.PlatformNaclArch, T.RequestUpdateCheckStatus, T.OnInstalledReason, T.OnRestartRequiredReason, T.DataBits, T.ParityBit, T.StopBits, T.SendError, T.ReceiveError, O.SyncAction, O.ServiceStatus, O.FileStatus, O.SyncDirection, O.ConflictResolutionPolicy, Q.LayoutPosition, Q.MirrorMode, Q.StorageUnitType, Q.EjectDeviceResultCode, G.MutedInfoReason, G.ZoomSettingsMode, G.ZoomSettingsScope, G.TabStatus, G.TabsWindowType, G.EventType, G.VoiceGender, Z.ChromeSettingScope, Z.TypesLevelOfControl, S.Direction, S.Recipient, S.RequestType, S.TransferType, S.SynchronizationType, S.UsageType, B.PlatformMessage, B.VpnConnectionState, B.UIEvent0, D.WallpaperLayout, U.WindowWindowType, U.WindowState, U.CreateType]);
    _inherit(B.ChromeAppWindow, B._ChromeAppWindow);
    _inherit(B.AppWindow, B._AppWindow);
    _inheritMany(N.StorageArea, [N.SyncStorageArea, N.LocalStorageArea]);
    _inheritMany(M.CrEntry, [M.CrDirectoryEntry, M.CrFileEntry]);
    _inherit(M.ChromeFileEntry, M.CrFileEntry);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._JsArray_JsObject_ListMixin, P.ListMixin);
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.ButtonElement_methods = W.ButtonElement.prototype;
    C.Interceptor_methods = J.Interceptor.prototype;
    C.JSArray_methods = J.JSArray.prototype;
    C.JSInt_methods = J.JSInt.prototype;
    C.JSNumber_methods = J.JSNumber.prototype;
    C.JSString_methods = J.JSString.prototype;
    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    C.C_EmptyIterator = new H.EmptyIterator([P.Null]);
    C.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    C.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    C.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    C.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    C.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    C.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    C.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    C.C_JS_CONST3 = function(hooks) { return hooks; }
;
    C.C_JsonCodec = new P.JsonCodec([]);
    C.C__RootZone = new P._RootZone([]);
    C.ChooseEntryType_openDirectory = new V.ChooseEntryType("openDirectory", []);
    C.ChooseEntryType_openWritableFile = new V.ChooseEntryType("openWritableFile", []);
    C.Duration_0 = new P.Duration(0, []);
    C.EventStreamProvider_click = new W.EventStreamProvider("click", [W.MouseEvent]);
    C.JsonDecoder_null = new P.JsonDecoder(null, []);
    C.OnRestartRequiredReason_app_update = new T.OnRestartRequiredReason("app_update", []);
    C.OnRestartRequiredReason_os_update = new T.OnRestartRequiredReason("os_update", []);
    C.OnRestartRequiredReason_periodic = new T.OnRestartRequiredReason("periodic", []);
    C.List_ZhK = H.setRuntimeTypeInfo(makeConstList([C.OnRestartRequiredReason_app_update, C.OnRestartRequiredReason_os_update, C.OnRestartRequiredReason_periodic]), [T.OnRestartRequiredReason]);
    C.IdleState_active = new V.IdleState("active", []);
    C.IdleState_idle = new V.IdleState("idle", []);
    C.IdleState_locked = new V.IdleState("locked", []);
    C.List_e8P = H.setRuntimeTypeInfo(makeConstList([C.IdleState_active, C.IdleState_idle, C.IdleState_locked]), [V.IdleState]);
    C.List_empty = makeConstList([]);
    C.RequestUpdateCheckStatus_throttled = new T.RequestUpdateCheckStatus("throttled", []);
    C.RequestUpdateCheckStatus_no_update = new T.RequestUpdateCheckStatus("no_update", []);
    C.RequestUpdateCheckStatus_update_available = new T.RequestUpdateCheckStatus("update_available", []);
    C.List_gkc = H.setRuntimeTypeInfo(makeConstList([C.RequestUpdateCheckStatus_throttled, C.RequestUpdateCheckStatus_no_update, C.RequestUpdateCheckStatus_update_available]), [T.RequestUpdateCheckStatus]);
    C.List_empty0 = H.setRuntimeTypeInfo(makeConstList([]), [P.Symbol0]);
    C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty0, [P.Symbol0, null]);
    C.Symbol_call = new H.Symbol("call", []);
    C._ZoneFunction__RootZone = new P._ZoneFunction(C.C__RootZone, [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}]);
  })();
  var init = {mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"}, mangledNames: {}, getTypeFromName: getGlobalFromName, metadata: [], types: [{func: 1, ret: -1}, {func: 1, ret: P.Null, args: [,]}, {func: 1, ret: P.JsObject}, {func: 1, ret: P.Null}, {func: 1, args: [,]}, {func: 1, ret: -1, args: [,]}, {func: 1, ret: [P.Future,,], args: [V.ChooseEntryResult]}, {func: 1, ret: P.Null, args: [W.DirectoryEntry]}, {func: 1, ret: M.CrEntry, args: [,]}, {func: 1, ret: -1, args: [{func: 1, ret: -1}]}, {func: 1, ret: [P.List,,], args: [,]}, {func: 1, ret: P.bool, args: [Z.ChromeEnum]}, {func: 1, ret: P.Null, opt: [,]}, {func: 1, ret: P.String, args: [,]}, {func: 1, ret: -1, args: [P.Object], opt: [P.StackTrace]}, {func: 1, ret: P.Null, args: [P.Symbol0,,]}, {func: 1, ret: P.String, args: [P.int]}, {func: 1, ret: [P.Future, W.FileEntry], args: [Z.ChromeObject]}, {func: 1, ret: P.Null, args: [S.Permissions]}, {func: 1, ret: P.Null, args: [B.AppWindow]}, {func: 1, ret: P.Null, args: [V.ChooseEntryResult]}, {func: 1, ret: P.Null, args: [W.Metadata]}, {func: 1, ret: P.Null, args: [W.Entry]}, {func: 1, ret: [P.JsArray,,], args: [,]}, {func: 1, ret: P.Null, args: [,,]}, {func: 1, ret: P.Null, args: [{func: 1, ret: -1}]}, {func: 1, ret: P.Null, opt: [,,]}, {func: 1, opt: [,]}, {func: 1, opt: [,,]}, {func: 1, opt: [,,,]}, {func: 1, args: [P.String]}, {func: 1, ret: W.Metadata, args: [,]}, {func: 1, ret: M.CrDirectoryEntry, args: [,]}, {func: 1, ret: [P.Future, P.String], args: [W.File]}, {func: 1, ret: [P.Future, Z.ArrayBuffer], args: [W.File]}, {func: 1, ret: P.Null, args: [P.String,,]}, {func: 1, ret: Z.ChromeObject, args: [,]}, {func: 1, args: [W.Event]}, {func: 1, ret: [P.Future,,]}, {func: 1, ret: P.Null, args: [L.Alarm]}, {func: 1, args: [W.MouseEvent]}, {func: 1, ret: P.Null, args: [[P.List, R.LanguageCode]]}, {func: 1, ret: P.Null, args: [V.IdleState]}, {func: 1, ret: P.bool, args: [W.Node]}, {func: 1, ret: P.Null, args: [[P.List, G.TtsVoice]]}, {func: 1, ret: P.String, args: [G.TtsVoice]}, {func: 1, ret: P.Null, args: [T.PlatformInfo]}, {func: 1, ret: W.Element, args: [W.Node]}, {func: 1, ret: P.Null, args: [T.RequestUpdateCheckResult]}, {func: 1, ret: P.Null, args: [Q.GetInfoResult]}, {func: 1, ret: P.JsFunction, args: [,]}, {func: 1, ret: P.Null, args: [Q.CpuInfo]}, {func: 1, ret: P.Null, args: [Q.MemoryInfo]}, {func: 1, ret: [P.Future, [P.Map, P.String,,]], args: [,]}, {func: 1, args: [, P.String]}, {func: 1, ret: P.JsObject, args: [,]}, {func: 1, ret: [P.Future, P.String], args: [V.ChooseEntryResult]}, {func: 1, ret: P.Null, args: [,], opt: [P.StackTrace]}, {func: 1, ret: P.String, args: [Z.ArrayBuffer]}, {func: 1, ret: B.AppWindow}, {func: 1, ret: P.Null, args: [[P.List, W.Entry]]}, {func: 1, ret: P.String, args: [W.Entry]}, {func: 1}, {func: 1, ret: [P.Future, W.Entry], args: [W.Entry]}, {func: 1, ret: P.String, args: [Q.AdapterState]}, {func: 1, ret: P.String, args: [P.String]}, {func: 1, ret: [P._Future,,], args: [,]}, {func: 1, ret: -1, args: [P.Object]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}, {func: 1, ret: P.Object, args: [,]}, {func: 1, ret: L.Alarm, args: [P.JsObject]}, {func: 1, ret: [P.Map,,,], args: [P.JsObject]}, {func: 1, ret: B.LaunchData, args: [P.JsObject]}, {func: 1, ret: B.AppWindow, args: [P.JsObject]}, {func: 1, ret: Q.GetInfoResult, args: [,,]}, {func: 1, ret: Q.LevelChangedEvent, args: [P.JsObject]}, {func: 1, ret: Q.MuteChangedEvent, args: [P.JsObject]}, {func: 1, ret: Q.AudioDeviceInfo, args: [P.JsObject]}, {func: 1, ret: Q.OutputDeviceInfo, args: [P.JsObject]}, {func: 1, ret: Q.InputDeviceInfo, args: [P.JsObject]}, {func: 1, ret: Q.AdapterState, args: [P.JsObject]}, {func: 1, ret: Q.BluetoothDevice, args: [P.JsObject]}, {func: 1, ret: V.ChooseEntryResult, args: [,,]}, {func: 1, ret: V.VolumeListChangedEvent, args: [P.JsObject]}, {func: 1, ret: V.EntryChangedEvent, args: [P.JsObject]}, {func: 1, ret: V.EntryRemovedEvent, args: [P.JsObject]}, {func: 1, ret: W.FileEntry, args: [P.JsObject]}, {func: 1, ret: R.LanguageCode, args: [P.JsObject]}, {func: 1, ret: Q.OnSignInChangedEvent, args: [P.JsObject, P.bool]}, {func: 1, ret: V.IdleState, args: [P.String]}, {func: 1, ret: S.Permissions, args: [P.JsObject]}, {func: 1, ret: T.RequestUpdateCheckResult, args: [,,]}, {func: 1, ret: T.Port, args: [P.JsObject]}, {func: 1, ret: T.OnMessageEvent, args: [P.JsObject, P.JsObject, P.JsObject]}, {func: 1, ret: T.OnMessageExternalEvent, args: [P.JsObject, P.JsObject, P.JsObject]}, {func: 1, ret: T.OnRestartRequiredReason, args: [P.String]}, {func: 1, ret: T.PlatformInfo, args: [P.JsObject]}, {func: 1, ret: W.DirectoryEntry, args: [P.JsObject]}, {func: 1, ret: N.StorageOnChangedEvent, args: [P.JsObject, P.String]}, {func: 1, ret: O.ServiceInfo, args: [P.JsObject]}, {func: 1, ret: O.FileInfo, args: [P.JsObject]}, {func: 1, ret: W.FileSystem, args: [P.JsObject]}, {func: 1, ret: Q.CpuInfo, args: [P.JsObject]}, {func: 1, ret: Q.MemoryInfo, args: [P.JsObject]}, {func: 1, ret: Q.StorageUnitInfo, args: [P.JsObject]}, {func: 1, ret: G.TtsEvent, args: [P.JsObject]}, {func: 1, ret: G.TtsVoice, args: [P.JsObject]}, {func: 1, ret: B.EmbedRequest, args: [P.JsObject]}], interceptorsByTag: null, leafTags: null};
  (function staticFields() {
    $.Closure_functionCounter = 0;
    $.BoundClosure_selfFieldNameCache = null;
    $.BoundClosure_receiverFieldNameCache = null;
    $._inTypeAssertion = false;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = C.C__RootZone;
    $._toStringVisiting = [];
    $.CrFileSystem__fileSystems = P.LinkedHashMap__makeEmpty();
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy;
    _lazy($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartClosure");
    });
    _lazy($, "JS_INTEROP_INTERCEPTOR_TAG", "$get$JS_INTEROP_INTERCEPTOR_TAG", function() {
      return H.getIsolateAffinityTag("_$dart_js");
    });
    _lazy($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(H.TypeErrorDecoder_buildJavaScriptObject())), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(H.TypeErrorDecoder_buildJavaScriptObjectWithNonClosure())), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null)), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnNull()), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0)), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnUndefined()), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null)), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnNull()), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0)), "$isTypeErrorDecoder");
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
      return H.interceptedTypeCheck(H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnUndefined()), "$isTypeErrorDecoder");
    });
    _lazy($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
      return P._AsyncRun__initializeScheduleImmediate();
    });
    _lazy($, "context", "$get$context", function() {
      return H.interceptedTypeCheck(P._wrapToDart(self), "$isJsObject");
    });
    _lazy($, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartObject");
    });
    _lazy($, "_dartProxyCtor", "$get$_dartProxyCtor", function() {
      return function DartObject(o) {
        this.o = o;
      };
    });
    _lazy($, "alarms", "$get$alarms", function() {
      return L.ChromeAlarms$_();
    });
    _lazy($, "app", "$get$app", function() {
      return B.ChromeApp$_();
    });
    _lazy($, "audio", "$get$audio", function() {
      return Q.ChromeAudio$_();
    });
    _lazy($, "bluetooth", "$get$bluetooth", function() {
      return Q.ChromeBluetooth$_();
    });
    _lazy($, "browser", "$get$browser", function() {
      return K.ChromeBrowser$_();
    });
    _lazy($, "fileSystem", "$get$fileSystem", function() {
      return V.ChromeFileSystem$_();
    });
    _lazy($, "i18n", "$get$i18n", function() {
      return R.ChromeI18N$_();
    });
    _lazy($, "identity", "$get$identity", function() {
      return Q.ChromeIdentity$_();
    });
    _lazy($, "idle", "$get$idle", function() {
      return V.ChromeIdle$_();
    });
    _lazy($, "permissions", "$get$permissions", function() {
      return S.ChromePermissions$_();
    });
    _lazy($, "runtime", "$get$runtime", function() {
      return T.ChromeRuntime$_();
    });
    _lazy($, "storage", "$get$storage", function() {
      return N.ChromeStorage$_();
    });
    _lazy($, "syncFileSystem", "$get$syncFileSystem", function() {
      return O.ChromeSyncFileSystem$_();
    });
    _lazy($, "system", "$get$system", function() {
      return Q.ChromeSystem$_();
    });
    _lazy($, "tts", "$get$tts", function() {
      return G.ChromeTts$_();
    });
    _lazy($, "_jsJSON", "$get$_jsJSON", function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$context(), "JSON"), "$isJsObject");
    });
    _lazy($, "chrome", "$get$chrome", function() {
      return H.interceptedTypeCheck(J.$index$asx($.$get$context(), "chrome"), "$isJsObject");
    });
    _lazy($, "_runtime", "$get$_runtime", function() {
      return H.interceptedTypeCheck(J.$index$asx(J.$index$asx($.$get$context(), "chrome"), "runtime"), "$isJsObject");
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBufferView: H.NativeTypedData, DataView: H.NativeByteData, Float32Array: H.NativeFloat32List, Float64Array: H.NativeFloat64List, Int16Array: H.NativeInt16List, Int32Array: H.NativeInt32List, Int8Array: H.NativeInt8List, Uint16Array: H.NativeUint16List, Uint32Array: H.NativeUint32List, Uint8ClampedArray: H.NativeUint8ClampedList, CanvasPixelArray: H.NativeUint8ClampedList, Uint8Array: H.NativeUint8List, HTMLElement: W.HtmlElement, AbortPaymentEvent: W.AbortPaymentEvent, HTMLAnchorElement: W.AnchorElement, AnimationEvent: W.AnimationEvent, AnimationPlaybackEvent: W.AnimationPlaybackEvent, ApplicationCacheErrorEvent: W.ApplicationCacheErrorEvent, HTMLAreaElement: W.AreaElement, HTMLAudioElement: W.AudioElement, HTMLBRElement: W.BRElement, BackgroundFetchClickEvent: W.BackgroundFetchClickEvent, BackgroundFetchEvent: W.BackgroundFetchEvent, BackgroundFetchFailEvent: W.BackgroundFetchFailEvent, BackgroundFetchedEvent: W.BackgroundFetchedEvent, HTMLBaseElement: W.BaseElement, BeforeInstallPromptEvent: W.BeforeInstallPromptEvent, BeforeUnloadEvent: W.BeforeUnloadEvent, Blob: W.Blob, BlobEvent: W.BlobEvent, HTMLBodyElement: W.BodyElement, HTMLButtonElement: W.ButtonElement, CDATASection: W.CDataSection, CanMakePaymentEvent: W.CanMakePaymentEvent, HTMLCanvasElement: W.CanvasElement, CharacterData: W.CharacterData, ClipboardEvent: W.ClipboardEvent, CloseEvent: W.CloseEvent, Comment: W.Comment, CompositionEvent: W.CompositionEvent, HTMLContentElement: W.ContentElement, CustomEvent: W.CustomEvent, HTMLDListElement: W.DListElement, HTMLDataElement: W.DataElement, HTMLDataListElement: W.DataListElement, DedicatedWorkerGlobalScope: W.DedicatedWorkerGlobalScope, HTMLDetailsElement: W.DetailsElement, DeviceMotionEvent: W.DeviceMotionEvent, DeviceOrientationEvent: W.DeviceOrientationEvent, HTMLDialogElement: W.DialogElement, HTMLDivElement: W.DivElement, Document: W.Document, DocumentFragment: W.DocumentFragment, DOMError: W.DomError, DOMException: W.DomException, Element: W.Element, HTMLEmbedElement: W.EmbedElement, ErrorEvent: W.ErrorEvent, Event: W.Event, InputEvent: W.Event, EventTarget: W.EventTarget, ExtendableEvent: W.ExtendableEvent, ExtendableMessageEvent: W.ExtendableMessageEvent, FetchEvent: W.FetchEvent, HTMLFieldSetElement: W.FieldSetElement, File: W.File, FocusEvent: W.FocusEvent, FontFaceSetLoadEvent: W.FontFaceSetLoadEvent, ForeignFetchEvent: W.ForeignFetchEvent, HTMLFormElement: W.FormElement, GamepadEvent: W.GamepadEvent, HTMLHRElement: W.HRElement, HashChangeEvent: W.HashChangeEvent, HTMLHeadElement: W.HeadElement, HTMLHeadingElement: W.HeadingElement, HTMLCollection: W.HtmlCollection, HTMLDocument: W.HtmlDocument, HTMLFormControlsCollection: W.HtmlFormControlsCollection, HTMLHtmlElement: W.HtmlHtmlElement, HTMLOptionsCollection: W.HtmlOptionsCollection, HTMLIFrameElement: W.IFrameElement, ImageData: W.ImageData, HTMLImageElement: W.ImageElement, HTMLInputElement: W.InputElement, InstallEvent: W.InstallEvent, KeyboardEvent: W.KeyboardEvent, HTMLLIElement: W.LIElement, HTMLLabelElement: W.LabelElement, HTMLLegendElement: W.LegendElement, HTMLLinkElement: W.LinkElement, HTMLMapElement: W.MapElement, HTMLMediaElement: W.MediaElement, MediaEncryptedEvent: W.MediaEncryptedEvent, MediaError: W.MediaError, MediaKeyMessageEvent: W.MediaKeyMessageEvent, MediaQueryListEvent: W.MediaQueryListEvent, MediaStreamEvent: W.MediaStreamEvent, MediaStreamTrackEvent: W.MediaStreamTrackEvent, HTMLMenuElement: W.MenuElement, MessageEvent: W.MessageEvent, HTMLMetaElement: W.MetaElement, HTMLMeterElement: W.MeterElement, MIDIConnectionEvent: W.MidiConnectionEvent, MIDIMessageEvent: W.MidiMessageEvent, HTMLModElement: W.ModElement, MouseEvent: W.MouseEvent, DragEvent: W.MouseEvent, MutationEvent: W.MutationEvent, NavigatorUserMediaError: W.NavigatorUserMediaError, Node: W.Node, NodeList: W.NodeList, RadioNodeList: W.NodeList, NotificationEvent: W.NotificationEvent, HTMLOListElement: W.OListElement, HTMLObjectElement: W.ObjectElement, HTMLOptGroupElement: W.OptGroupElement, HTMLOptionElement: W.OptionElement, HTMLOutputElement: W.OutputElement, OverconstrainedError: W.OverconstrainedError, PageTransitionEvent: W.PageTransitionEvent, HTMLParagraphElement: W.ParagraphElement, HTMLParamElement: W.ParamElement, PaymentRequestEvent: W.PaymentRequestEvent, PaymentRequestUpdateEvent: W.PaymentRequestUpdateEvent, HTMLPictureElement: W.PictureElement, PointerEvent: W.PointerEvent, PopStateEvent: W.PopStateEvent, PositionError: W.PositionError, HTMLPreElement: W.PreElement, PresentationConnectionAvailableEvent: W.PresentationConnectionAvailableEvent, PresentationConnectionCloseEvent: W.PresentationConnectionCloseEvent, ProcessingInstruction: W.ProcessingInstruction, HTMLProgressElement: W.ProgressElement, ProgressEvent: W.ProgressEvent, PromiseRejectionEvent: W.PromiseRejectionEvent, PushEvent: W.PushEvent, HTMLQuoteElement: W.QuoteElement, RTCDataChannelEvent: W.RtcDataChannelEvent, RTCDTMFToneChangeEvent: W.RtcDtmfToneChangeEvent, RTCPeerConnectionIceEvent: W.RtcPeerConnectionIceEvent, RTCTrackEvent: W.RtcTrackEvent, HTMLScriptElement: W.ScriptElement, SecurityPolicyViolationEvent: W.SecurityPolicyViolationEvent, HTMLSelectElement: W.SelectElement, SensorErrorEvent: W.SensorErrorEvent, ServiceWorkerGlobalScope: W.ServiceWorkerGlobalScope, HTMLShadowElement: W.ShadowElement, ShadowRoot: W.ShadowRoot, SharedWorkerGlobalScope: W.SharedWorkerGlobalScope, HTMLSlotElement: W.SlotElement, HTMLSourceElement: W.SourceElement, HTMLSpanElement: W.SpanElement, SpeechRecognitionError: W.SpeechRecognitionError, SpeechRecognitionEvent: W.SpeechRecognitionEvent, SpeechSynthesisEvent: W.SpeechSynthesisEvent, StorageEvent: W.StorageEvent, HTMLStyleElement: W.StyleElement, SyncEvent: W.SyncEvent, HTMLTableCaptionElement: W.TableCaptionElement, HTMLTableCellElement: W.TableCellElement, HTMLTableDataCellElement: W.TableCellElement, HTMLTableHeaderCellElement: W.TableCellElement, HTMLTableColElement: W.TableColElement, HTMLTableElement: W.TableElement, HTMLTableRowElement: W.TableRowElement, HTMLTableSectionElement: W.TableSectionElement, HTMLTemplateElement: W.TemplateElement, Text: W.Text, HTMLTextAreaElement: W.TextAreaElement, TextEvent: W.TextEvent, HTMLTimeElement: W.TimeElement, HTMLTitleElement: W.TitleElement, TouchEvent: W.TouchEvent, HTMLTrackElement: W.TrackElement, TrackEvent: W.TrackEvent, TransitionEvent: W.TransitionEvent, WebKitTransitionEvent: W.TransitionEvent, UIEvent: W.UIEvent, HTMLUListElement: W.UListElement, HTMLUnknownElement: W.UnknownElement, VRDeviceEvent: W.VRDeviceEvent, VRDisplayEvent: W.VRDisplayEvent, VRSessionEvent: W.VRSessionEvent, HTMLVideoElement: W.VideoElement, WheelEvent: W.WheelEvent, Window: W.Window, DOMWindow: W.Window, WorkerGlobalScope: W.WorkerGlobalScope, XMLDocument: W.XmlDocument, Attr: W._Attr, DocumentType: W._DocumentType, HTMLDirectoryElement: W._HTMLDirectoryElement, HTMLFontElement: W._HTMLFontElement, HTMLFrameElement: W._HTMLFrameElement, HTMLFrameSetElement: W._HTMLFrameSetElement, HTMLMarqueeElement: W._HTMLMarqueeElement, MojoInterfaceRequestEvent: W._MojoInterfaceRequestEvent, ResourceProgressEvent: W._ResourceProgressEvent, USBConnectionEvent: W._USBConnectionEvent, IDBKeyRange: P.KeyRange, IDBVersionChangeEvent: P.VersionChangeEvent, SVGAElement: P.AElement, SVGAnimateElement: P.AnimateElement, SVGAnimateMotionElement: P.AnimateMotionElement, SVGAnimateTransformElement: P.AnimateTransformElement, SVGAnimationElement: P.AnimationElement, SVGCircleElement: P.CircleElement, SVGClipPathElement: P.ClipPathElement, SVGDefsElement: P.DefsElement, SVGDescElement: P.DescElement, SVGDiscardElement: P.DiscardElement, SVGEllipseElement: P.EllipseElement, SVGFEBlendElement: P.FEBlendElement, SVGFEColorMatrixElement: P.FEColorMatrixElement, SVGFEComponentTransferElement: P.FEComponentTransferElement, SVGFECompositeElement: P.FECompositeElement, SVGFEConvolveMatrixElement: P.FEConvolveMatrixElement, SVGFEDiffuseLightingElement: P.FEDiffuseLightingElement, SVGFEDisplacementMapElement: P.FEDisplacementMapElement, SVGFEDistantLightElement: P.FEDistantLightElement, SVGFEFloodElement: P.FEFloodElement, SVGFEFuncAElement: P.FEFuncAElement, SVGFEFuncBElement: P.FEFuncBElement, SVGFEFuncGElement: P.FEFuncGElement, SVGFEFuncRElement: P.FEFuncRElement, SVGFEGaussianBlurElement: P.FEGaussianBlurElement, SVGFEImageElement: P.FEImageElement, SVGFEMergeElement: P.FEMergeElement, SVGFEMergeNodeElement: P.FEMergeNodeElement, SVGFEMorphologyElement: P.FEMorphologyElement, SVGFEOffsetElement: P.FEOffsetElement, SVGFEPointLightElement: P.FEPointLightElement, SVGFESpecularLightingElement: P.FESpecularLightingElement, SVGFESpotLightElement: P.FESpotLightElement, SVGFETileElement: P.FETileElement, SVGFETurbulenceElement: P.FETurbulenceElement, SVGFilterElement: P.FilterElement, SVGForeignObjectElement: P.ForeignObjectElement, SVGGElement: P.GElement, SVGGeometryElement: P.GeometryElement, SVGGraphicsElement: P.GraphicsElement, SVGImageElement: P.ImageElement0, SVGLineElement: P.LineElement, SVGLinearGradientElement: P.LinearGradientElement, SVGMarkerElement: P.MarkerElement, SVGMaskElement: P.MaskElement, SVGMetadataElement: P.MetadataElement, SVGPathElement: P.PathElement, SVGPatternElement: P.PatternElement, SVGPolygonElement: P.PolygonElement, SVGPolylineElement: P.PolylineElement, SVGRadialGradientElement: P.RadialGradientElement, SVGRectElement: P.RectElement, SVGScriptElement: P.ScriptElement0, SVGSetElement: P.SetElement, SVGStopElement: P.StopElement, SVGStyleElement: P.StyleElement0, SVGElement: P.SvgElement, SVGSVGElement: P.SvgSvgElement, SVGSwitchElement: P.SwitchElement, SVGSymbolElement: P.SymbolElement, SVGTSpanElement: P.TSpanElement, SVGTextContentElement: P.TextContentElement, SVGTextElement: P.TextElement, SVGTextPathElement: P.TextPathElement, SVGTextPositioningElement: P.TextPositioningElement, SVGTitleElement: P.TitleElement0, SVGUseElement: P.UseElement, SVGViewElement: P.ViewElement, SVGGradientElement: P._GradientElement, SVGComponentTransferFunctionElement: P._SVGComponentTransferFunctionElement, SVGFEDropShadowElement: P._SVGFEDropShadowElement, SVGMPathElement: P._SVGMPathElement, AudioProcessingEvent: P.AudioProcessingEvent, OfflineAudioCompletionEvent: P.OfflineAudioCompletionEvent, WebGLContextEvent: P.ContextEvent, SQLError: P.SqlError});
    hunkHelpers.setOrUpdateLeafTags({ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLElement: false, AbortPaymentEvent: true, HTMLAnchorElement: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, HTMLAreaElement: true, HTMLAudioElement: true, HTMLBRElement: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: false, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, HTMLBaseElement: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, Blob: false, BlobEvent: true, HTMLBodyElement: true, HTMLButtonElement: true, CDATASection: true, CanMakePaymentEvent: true, HTMLCanvasElement: true, CharacterData: false, ClipboardEvent: true, CloseEvent: true, Comment: true, CompositionEvent: true, HTMLContentElement: true, CustomEvent: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, DedicatedWorkerGlobalScope: true, HTMLDetailsElement: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, HTMLDialogElement: true, HTMLDivElement: true, Document: false, DocumentFragment: false, DOMError: true, DOMException: true, Element: false, HTMLEmbedElement: true, ErrorEvent: true, Event: false, InputEvent: false, EventTarget: false, ExtendableEvent: false, ExtendableMessageEvent: true, FetchEvent: true, HTMLFieldSetElement: true, File: true, FocusEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, HTMLFormElement: true, GamepadEvent: true, HTMLHRElement: true, HashChangeEvent: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLCollection: false, HTMLDocument: true, HTMLFormControlsCollection: true, HTMLHtmlElement: true, HTMLOptionsCollection: true, HTMLIFrameElement: true, ImageData: true, HTMLImageElement: true, HTMLInputElement: true, InstallEvent: true, KeyboardEvent: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: false, MediaEncryptedEvent: true, MediaError: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, HTMLMenuElement: true, MessageEvent: true, HTMLMetaElement: true, HTMLMeterElement: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, HTMLModElement: true, MouseEvent: false, DragEvent: false, MutationEvent: true, NavigatorUserMediaError: true, Node: false, NodeList: true, RadioNodeList: true, NotificationEvent: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, OverconstrainedError: true, PageTransitionEvent: true, HTMLParagraphElement: true, HTMLParamElement: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, HTMLPictureElement: true, PointerEvent: true, PopStateEvent: true, PositionError: true, HTMLPreElement: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProcessingInstruction: true, HTMLProgressElement: true, ProgressEvent: false, PromiseRejectionEvent: true, PushEvent: true, HTMLQuoteElement: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, HTMLScriptElement: true, SecurityPolicyViolationEvent: true, HTMLSelectElement: true, SensorErrorEvent: true, ServiceWorkerGlobalScope: true, HTMLShadowElement: true, ShadowRoot: true, SharedWorkerGlobalScope: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, HTMLStyleElement: true, SyncEvent: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, Text: false, HTMLTextAreaElement: true, TextEvent: true, HTMLTimeElement: true, HTMLTitleElement: true, TouchEvent: true, HTMLTrackElement: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, UIEvent: false, HTMLUListElement: true, HTMLUnknownElement: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, HTMLVideoElement: true, WheelEvent: true, Window: true, DOMWindow: true, WorkerGlobalScope: false, XMLDocument: true, Attr: true, DocumentType: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, IDBKeyRange: true, IDBVersionChangeEvent: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: false, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: false, SVGGraphicsElement: false, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: false, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: false, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: false, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: false, SVGComponentTransferFunctionElement: false, SVGFEDropShadowElement: true, SVGMPathElement: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, SQLError: true});
    H.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(N.main, []);
    else
      N.main([]);
  });
})();

//# sourceMappingURL=demo.js.map
